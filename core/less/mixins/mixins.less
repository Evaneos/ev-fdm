@import "../colors/variables.less";

/**
 * This file contains useful mixins
 */

/**
 * Allows you to draw a sticker (a colorful circle).
 * This sticker can contains a stick inside.
 * Usage:
 *      .sticker-(17px, @brand-warning, @brand-info);
 *
 * OR
 *
 *      .state {
 *          .sticker;
 *           &-large {
 *              .sticker(17px);
 *           }
 *
 *          &-engaged {
 *              background-color: @brand-danger;
 *          }
 *
 *          &-sold {
 *              background-color: @brand-warning;
 *           }
 *       }
 *
 * In your template:
 *
 *    <div class="state state-{{quote.state}} state-large">
 *       <span class="icon icon-tick"></span>
 *    </div>
 */
// Phoenix TODO: split me between common and ev-fdm
.sticker(@size: 14px, @color, @tick-color: white) {
    width: @size;
    height: @size;
    border-radius: @size/2;
    background: @color;
    display: inline-block;

    .icon-tick {
        color: @tick-color;
        font-size: @size - @size/3;
        display: block;
        line-height: @size;
        margin: 0 auto;
        margin-left: @size/5;
        padding-top: 1px;
    }
}

/*
 *  Mixin for cross-browser border radiuses
 *
 *  Usage:
 *      .border-radiuses(<top-right>, <bottom-right>, <bottom-left>, <top-left>)
 */
.border-radiuses (@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius:    @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius:  @bottomleft;
  -webkit-border-top-left-radius:     @topleft;

  -moz-border-radius-topright:        @topright;
  -moz-border-radius-bottomright:     @bottomright;
  -moz-border-radius-bottomleft:      @bottomleft;
  -moz-border-radius-topleft:         @topleft;

  border-top-right-radius:            @topright;
  border-bottom-right-radius:         @bottomright;
  border-bottom-left-radius:          @bottomleft;
  border-top-left-radius:             @topleft;

  -moz-background-clip:    padding;
  -webkit-background-clip: padding-box;
  background-clip:         padding-box;
}

.transform(@string){
  -webkit-transform: @string;
  -moz-transform:    @string;
  -ms-transform:     @string;
  -o-transform:      @string;
  transform:         @string;
}


.transition(@string){
  -webkit-transform: @string;
  -moz-transform:    @string;
  -ms-transform:     @string;
  -o-transform:      @string;
  transform:         @string;
}


/*
 *  Mixin for styling placeholder inside input (cross-browser)
 *
 *  Usage:
 *      .my-input {
 *          .placeholder-style({
 *              color: red;
 *              // Other rules here for placeholder
 *          })
 *      }
 */
.placeholder-style(@rules, @rules-hover) {
  &::-webkit-input-placeholder {
    @rules();
  }

  &:hover::-webkit-input-placeholder {
    @rules();
  }

  &:-moz-placeholder {
    opacity:  1;
    @rules();
  }

  &:hover:-moz-placeholder {
    opacity:  1;
    @rules();
  }

  &::-moz-placeholder {
    opacity:  1;
    @rules();
  }

  &:hover::-moz-placeholder {
    opacity:  1;
    @rules();
  }

  &:-ms-input-placeholder {
    @rules();
  }

  &:hover:-ms-input-placeholder {
    @rules();
  }
}
