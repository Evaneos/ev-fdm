{"version":3,"sources":["/source/core/factories/FilterServiceFactory.js","/source/core/directives/EvMenuDirective.js","/source/core/app.js","/source/core/animations/PictureListAnimation.js","/source/core/animations/TagListAnimation.js","/source/core/controllers/ListController.js","/source/core/controllers/NotificationsController.js","/source/core/controllers/SearchController.js","/source/core/factories/ConfirmBox.js","/source/core/factories/Select2Configuration.js","/source/core/directives/AccordionDirective.js","/source/core/directives/ActivableDirective.js","/source/core/directives/AddTagInListDirective.js","/source/core/directives/ClearableDirective.js","/source/core/directives/DatePickerDirective.js","/source/core/directives/DownloadDirective.js","/source/core/directives/EditSection.js","/source/core/directives/EnterDirective.js","/source/core/directives/ErrorMessageDirective.js","/source/core/directives/ErrorsDirective.js","/source/core/directives/FlagDirective.js","/source/core/directives/FocusDirective.js","/source/core/directives/FormGroupDirective.js","/source/core/directives/LinkDisabledDirective.js","/source/core/directives/LoadingDotsDirective.js","/source/core/directives/MouseFollowerDirective.js","/source/core/directives/PaginationDirective.js","/source/core/directives/PictureListDirective.js","/source/core/directives/PopoverExtendDirective.js","/source/core/directives/PromiseDirective.js","/source/core/directives/PromiseProgressDirective.js","/source/core/directives/ResizableColumnDirective.js","/source/core/directives/ResolvingStateDirective.js","/source/core/directives/ResponsiveViewportDirective.js","/source/core/directives/SelectLanguageDirective.js","/source/core/directives/SelectableDirective.js","/source/core/directives/SortableDirective.js","/source/core/directives/StopEventPropagationDirective.js","/source/core/directives/SubmitDirective.js","/source/core/directives/TabDirective.js","/source/core/directives/TagListDirective.js","/source/core/directives/ThrottleDirective.js","/source/core/directives/ValidableDirective.js","/source/core/directives/ValueDirective.js","/source/core/services/DownloadService.js","/source/core/services/FilteringService.js","/source/core/services/ModalService.js","/source/core/services/NotificationsService.js","/source/core/services/PanelService.js","/source/core/services/SortService.js","/source/core/services/UtilService.js","/source/core/filters/CleanupDate.js","/source/core/filters/HtmlToPlainTextFilter.js","/source/core/filters/Map.js","/source/core/filters/PrettySecsFilter.js","/source/core/filters/ReplaceFilter.js","/source/core/filters/SumFilter.js","/source/core/filters/TextSelectFilter.js","/source/core/filters/UnsafeFilter.js","/source/core/storages/RestangularStorage.js","/source/core/directives/FormDirectives/DisableValidationDirective.js","/source/core/directives/FormDirectives/StrictMinDirective.js","/source/plugins/leaflet/LeafletDirective.js","/source/plugins/tinymce/directives/tinymceDirective.js","/source/plugins/tinymce/plugins/evelements.js","/source/plugins/tinymce/plugins/evimage.js","/source/plugins/upload/app.js","/source/plugins/upload/directives/pictureButtonUploadDirective.js","/source/plugins/upload/directives/pictureUploadDirective.js","/source/plugins/upload/directives/uploadDirective.js"],"names":["FilterServiceFactory","$rootScope","$timeout","FilterService","this","filters","listeners","self","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","angular","isFunction","addListener","scope","push","$on","removeListener","forEach","listener","index","splice","MenuManagerProvider","findTab","stateName","res","tabs","tab","state","selectTab","activeTab","lastTab","active","addTab","$get","$state","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","go","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","options","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","restangularProvider","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","window","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","className","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","setElements","requestCounter","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","bind","sortChanged","filtersChanged","toggleDetailView","toggleView","activeElement","setActiveElement","page","doIfLast","counter","fetch","then","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","view","routingArgs","goToViewStatePath","id","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","$modal","title","message","positive","negative","open","backdrop","templateUrl","result","dataProvider","formatter","resultModifier","minimumInputLength","key","dataProviderFilter","idFunction","timeout","opt","ressource","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","cancel","resources","resource","results","length","more","value","tmp","shift","formatResult","container","escapeMarkup","formatSelection","initSelection","directive","accordionDirective","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","oldActiveElement","on","$","target","closest","ctrlKey","shiftKey","$apply","transclude","addElement","maxElements","iconName","buttonText","tooltipText","attrs","transcludeFn","context","showSelect","clone","transcludedScope","add","find","append","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$http","$document","downloadService","elm","get","download","success","data","url","notificationsService","args","headerTitle","noteditable","notdeletable","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","onCancel","onDelete","successDeleteMessage","errorDeleteMessage","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","which","ngEnter","preventDefault","input","error","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","put","showTimeout","triggerHandler","applyClass","classes","promiseGetter","promise","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","idRand","String","random","$watchCollection","allSelected","_this","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","maxAlertMessage","onTagDeleted","iconRemoveClass","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","service","iframe","useFullHost","createElement","display","appendChild","fullHost","location","protocol","host","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","isObject","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","$q","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","cache","updateLayout","containers","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","generateId","prefix","y","m","day","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","hasOwnProperty","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildEmbedParameters","parameters","concat","buildParameters","number","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","all","getList","getFirst","getById","one","restangularizeElement","preventObjectUpdate","updateAll","patch","patchAll","create","post","deleteAll","saveAll","getNew","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters","icons","tiles","setIcons","setTiles","leafletData","evLeaflet","$log","coordinates","defaultCoordinates","boundingbox","centerOnMarkerOrBoungingbox","bounds","southWest","northEast","lat","southLatitude","lng","westLongitude","northLatitude","eastLongitude","center","zoom","markers","marker","baseIcon","iconSize","shadowSize","iconAnchor","draggable","scrollWheelZoom","doubleClickZoom","isNaN","latitude","warn","longitude","edited","icon","tinyMCE","countWords","wordArray","match","countregexp","defaultOptions","menubar","statusbar","toolbar","skin","verify_html","convert_fonts_to_spans","inline","browser_spellcheck","configs","register","evTinymce","tinymceOptions","ngModel","tinyId","tinyElm","tinyInstance","getTinyInstance","fixed_toolbar_container","configKey","minChars","maxChars","minWords","maxWords","THRESHOLD","updateCounter","currentValue","minValue","maxValue","counterInfosElm","isThresholdReached","isMinLimitNotReached","isMaxLimitReached","hasFocus","placeholder","currentHtml","currentText","setPlaceholder","editor","tinymce","DOM","setContent","updatePlaceholder","newText","selection","setCursorLocation","updateView","newCount","minCount","maxCount","newHtml","newTextOverLimit","currentTextOverLimit","shorterText","substr","format","$render","focusTinymce","setup","initial","blur","elems","mode","init","destroy","execCommand","PluginManager","setElement","elementConfig","dom","node","getNode","matches","insertContent","createHTML","encode","getContent","showDialog","attributes","attribs","getAttribs","item","evelementsOptions","innerText","textContent","newAttributes","undoManager","removeAllAttribs","setAttribs","evelementsConfig","settings","evelements","nodeName","callbackAction","addButton","tooltip","shortcut","onclick","stateSelector","selector","addShortcut","getAttribute","getAttrib","alt","data-picture-id","evimage","attributesNew","addMenuItem","prependToContext","addCommand","maxFiles","addPicture","onPictureAdded","uploading","acceptedFiles","newUpload","upload","uploadPromise","picture","pictureData","legend","flickrUrlPattern","uploadFlickrUrl","flickrForm","flickrUrl","exec","flickr-url","pictureUploaded","$setPristine","xhr","response","JSON","parse","status","Dropzone","BASE_CONFIG","previewTemplate","previewsContainer","autoQueue","maxFilesize","uploadMultiple","parallelUploads","uploadStart","fileSuccess","fileAdded","getBytes","dropzone","getAcceptedFiles","bytes","file","getDropzoneElement","dz","getClickableElement","startNewUpload","deferred","defer","hasFileErrored","hasFileErroredResponse","computeOverallProgress","notify","off","once","isUploadComplete","files","QUEUED","ADDED","UPLOADING","stopIfComplete","reject","resolve","currentUpload","removeAllFiles","filesPromises","clickable","removeFile","dropzoneFile","dictResponseError","dictCanceledUpload"],"mappings":"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","file":"ev-fdm.min.js","sourcesContent":["'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.elementName = elementName;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.$scope = $scope;\n            this.$scope.filters = {};\n            this.$scope.sortKey = this.defaultSortKey;\n            this.$scope.reverseSort = this.defaultReverseSort;\n\n            this.setElements(elements);\n            this.requestCounter = 0;\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', this.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(newPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', this.$scope.sortKey, this.$scope.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n\n            /*\n                Filter method that should be called from the template\n             */\n            this.$scope.filtersChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                this.toggleView('view', element);\n            }.bind(this);\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === this.elementName) {\n                    this.$scope.activeElement = null;\n                }\n                else {\n                    this.setActiveElement();\n                }\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::updated', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::created', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::deleted', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            var doIfLast = function(counter) {\n                return function (elements) {\n                    if (counter == this.requestCounter) {\n                        // It means no request have been lauchned afterward\n                        this.setElements(elements);\n                    }\n                    return elements;\n                }.bind(this)\n            }.bind(this)\n            this.requestCounter += 1;\n            return this.fetch(page, filters, sortKey, reverseSort)\n                .then(doIfLast(this.requestCounter))\n        };\n\n        ListController.prototype.setElements = function(elements) {\n            this.$scope[this.elementName] = elements;\n            this.$scope.currentPage = elements.pagination.current_page;\n            this.$scope.pageCount = elements.pagination.total_pages;\n            this.$scope.totalElement = elements.pagination.total;\n\n            if(!this.$scope.selectedElements || !this.$scope[this.elementName]) {\n                this.$scope.selectedElements  = [];\n            }\n            else {\n                var selectedElementsIds = this.$scope[this.elementName].map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.$scope[this.elementName], function(element) {\n                    if (restangular.configuration.getIdFromElem(element) == $state.params[this.activeIdSelector]) {\n                        this.$scope.activeElement = element;\n                    }\n                }.bind(this));\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            var idFunction;\n            var timeout = 600;\n            var opt = {};\n            if (typeof dataProvider === 'object') {\n                opt = dataProvider;\n                formatter = opt.formatter;\n                resultModifier = opt.resultModifier;\n                minimumInputLength = opt.minimumInputLength;\n                key = opt.key;\n                dataProviderFilter = opt.dataProviderFilter;\n                dataProvider = opt.dataProvider;\n                timeout = opt.timeout || timeout;\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n\n                if (typeof opt.id === 'string') {\n                    idFunction = function(ressource) {return ressource[opt.id];};\n                } else if (typeof opt.id === 'function') {\n                    idFunction = opt.id;\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                },\n                id: idFunction,\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","angular.module('ev-fdm').directive('evAddTagInList', [\n    function() {\n        return {\n            restrict: 'EA',\n            transclude: true,\n            scope: {\n                elements: '=',\n                addElement: '=',\n                maxElements: '=',\n                iconName: '@',\n                buttonText: '@',\n                tooltipText: '@',\n            },\n            template:\n                '<span ng-hide=\"elements.length >= maxElements\"> ' +\n                    '<button type=\"button\" ' +\n                        'class=\"btn btn-tertiary btn-env\" ' +\n                        'tabIndex=\"-1\"' +\n                        'tooltip=\"{{ tooltipText }}\"' +\n                        'tooltip-placement=\"top\"' +\n                        'tabIndex=\"-1\"' +\n                        'ng-hide=\"context.showSelect\" ' +\n                        'ng-click=\"context.showSelect = true\"> ' +\n                        '<span class=\"icon {{ iconName }}\"></span> ' +\n                        '{{ buttonText }} ' +\n                    '</button> ' +\n                    '<span ng-show=\"context.showSelect\"> ' +\n                        '<div class=\"transclude-addtaginlist\"></div>' +\n                    '</span> ' +\n                '</span> ',\n            link: function(scope, element, attrs, controller, transcludeFn) {\n                scope.context = {\n                    showSelect: false,\n                };\n\n                transcludeFn(function(clone, transcludedScope) {\n                    transcludedScope.add = function(element) {\n                        return scope.addElement(scope.elements, element);\n                    };\n\n                    // append body to template\n                    element.find('.transclude-addtaginlist').append(clone);\n                });\n            },\n        };\n    },\n]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get = function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang = function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-lg\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{active: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('[type=checkbox]')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            controller: ['$scope', function ($scope) {\n                $scope.idRand = String(Math.random());\n            }],\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"selected\"><label ng-attr-for=\"{{idRand}}\"></label></span>'\n            // template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"allSelected\" ng-click=\"toggleSelectAll()\"><label ng-attr-for=\"{{idRand}}\"></label></span>',\n            //'<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n                scope.idRand = String(Math.random());\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var _this = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort);\n                var reverseSortSet = reverseSortGet.assign;\n                var sortKeyGet = $parse($attrs.sortBy);\n                var sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    _this.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    _this.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if (key == this.sortKey) {\n                        // get back to the default state here (remove the sorting)\n                        // reverseSort flow: false (default) -> true -> sorketKey = '' (reset);\n                        if (this.reverseSort) {\n                            this.sortKey = '';\n                        } else {\n                            this.reverseSort = !this.reverseSort;\n                        }\n                    } else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if (reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if (sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n            },\n        ],};\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if (ctrl.sortKey === key) {\n                        element.removeClass('no-sort');\n                        if (ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        } else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    } else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            },\n        };\n    });\n","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&',\n                iconRemoveClass: '@',\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"label-btn\" ' +\n                                'ng-click=\"remove($index)\"><span class=\"{{ iconRemoveClass || \\'icon-bin\\' }}\"></span></button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^?evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred);\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit && evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","angular.module('ev-fdm')\n.service('DownloadService', ['$window', '$document', function($window, $document) {\n    var iframe = null;\n    return {\n        /**\n         * Download a specific url using an iframe\n         *\n         * @param  {string}  url         the url you want to download\n         * @param  {boolean} useFullHost either you want to prepend the full host or not (without trailing slash!)\n         */\n        download: function(url, useFullHost) {\n            if(!iframe) {\n                iframe = $document[0].createElement('iframe');\n                iframe.style.display = 'none';\n                $document[0].body.appendChild(iframe);\n            }\n\n            if(useFullHost) {\n                var fullHost = $window.location.protocol + '//' + $window.location.host;\n                url = fullHost + url;\n            }\n\n            iframe.src = url;\n        }\n    };\n}]);\n","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","angular.module('ev-fdm')\n    .filter('htmlToPlainText', function() {\n        return function(text) {\n            return String(text).replace(/<[^>]+>/gm, '');\n        };\n    }\n);","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildEmbedParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildParameters = function(options, defaultEmbed) {\n            var parameters = {};\n\n            options = options || {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(defaultEmbed));\n            } else if (defaultEmbed && defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = changesData[embedName];\n                            } else if (typeof changesData[embedName].data !== 'object' ||\n                                       Array.isArray(changesData[embedName].data)) {\n                                objectData[embedName].data = changesData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = RestangularStorage.buildParameters(options, this.defaultEmbed);\n\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildEmbedParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed, options) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildEmbedParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed, options) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed, options) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildEmbedParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed, options) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed, options) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildEmbedParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});","angular.module('ev-leaflet', ['leaflet-directive'])\n    .provider('evLeaflet', function() {\n        this.$get = function() {\n            return {\n                icons: this.icons,\n                tiles: this.tiles\n            };\n        };\n\n        this.setIcons = function(icons) {\n            this.icons = icons;\n        };\n\n        this.setTiles = function(tiles) {\n            this.tiles = tiles;\n        };\n    })\n    .directive('evLeaflet', ['leafletData', 'evLeaflet', '$log', function (leafletData, evLeaflet, $log) {\n        return {\n            template: '<leaflet class=\"ev-leaflet\" defaults=\"defaults\" markers=\"markers\" center=\"center\" tiles=\"tiles\" bounds=\"bounds\"></leaflet>',\n            restrict: 'AE',\n            scope: {\n                coordinates: '=',\n                defaultCoordinates: '=?',\n                boundingbox: '=?',\n                editable: '='\n            },\n            controller: function($scope) {\n\n                // Icons settings\n                var baseIcon = {\n                    iconSize:   [40, 40],\n                    shadowSize: [1, 1],\n                    iconAnchor: [1, 20]\n                };\n\n                var icons = evLeaflet.icons;\n\n                if ('default' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.default);\n                }\n                if ('draggable' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.draggable);\n                }\n\n                var tiles = evLeaflet.tiles;\n                if (tiles) {\n                    $scope.tiles = tiles;\n                }\n\n                $scope.defaults = {\n                    scrollWheelZoom: false,\n                    doubleClickZoom: false\n                };\n\n                // Setting a marker in location\n                $scope.markers = {\n                    marker: {\n                        focus: true\n                    }\n                };\n\n                // Double binding between coordinates and marker's position\n                $scope.$watch('coordinates.latitude', function(lat) {\n                    if (isNaN(lat) || lat == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.latitude != null) {\n                            lat = $scope.defaultCoordinates.latitude;\n                        } else {\n                            lat = 0;\n                        }\n                        $log.warn('ev-leaflet: latitude is not a number');\n                    }\n\n                    if ($scope.markers.marker.lat != lat) {\n                        $scope.markers.marker.lat = lat;\n                        centerOnMarkerOrBoungingbox();\n                    }\n                });\n\n                $scope.$watch('coordinates.longitude', function(lng) {\n                    if (isNaN(lng) || lng == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.longitude != null) {\n                            lng = $scope.defaultCoordinates.longitude;\n                        } else {\n                            lng = 0;\n                        }\n                        $log.warn('ev-leaflet: longitude is not a number');\n                    }\n\n                    if ($scope.markers.marker.lng != lng) {\n                        $scope.markers.marker.lng = lng;\n                        centerOnMarkerOrBoungingbox();\n                    }\n                });\n\n                centerOnMarkerOrBoungingbox();\n\n                $scope.$watch('boundingbox', function(boundingbox) {\n                    centerOnMarkerOrBoungingbox();\n                });\n\n                $scope.$watch('markers.marker.lat', function(lat) {\n                    if (lat != null && $scope.editable) {\n                        $scope.coordinates.latitude = lat;\n                    }\n                });\n\n                $scope.$watch('markers.marker.lng', function(lng) {\n                    if (lng != null && $scope.editable) {\n                        $scope.coordinates.longitude = lng;\n                    }\n                });\n\n                // Setting map center\n                function centerOnMarkerOrBoungingbox() {\n                    if ($scope.boundingbox) {\n                        if (!$scope.bounds) {\n                            $scope.bounds = {\n                                southWest: {},\n                                northEast: {},\n                            };\n                        }\n                        $scope.bounds.southWest.lat = $scope.boundingbox.southLatitude;\n                        $scope.bounds.southWest.lng = $scope.boundingbox.westLongitude;\n                        $scope.bounds.northEast.lat = $scope.boundingbox.northLatitude;\n                        $scope.bounds.northEast.lng = $scope.boundingbox.eastLongitude;\n                        return;\n                    }\n\n                    if (!$scope.center) {\n                        $scope.center = { zoom: 8 };\n                    }\n                    $scope.center.lat = $scope.markers.marker.lat;\n                    $scope.center.lng = $scope.markers.marker.lng;\n                }\n\n                $scope.$watch('editable', function () {\n                    var edited = $scope.editable;\n                    $scope.markers.marker.icon = edited ? icons.draggable : icons['default'];\n                    $scope.markers.marker.draggable = edited;\n                });\n            }\n        };\n    }]);\n","/* jshint camelcase: false */\n/* global tinymce */\n/**\n * Directive to override some settings in tinymce\n * Usage:\n * <ev-tinymce\n *     min-chars=\"1000\"                        -- minChars this input accept (default: none)\n *     max-chars=\"1000\"                        -- maxChars this input accept (default: unlimited)\n *     min-words=\"1000\"                        -- minWords this input accept (default: none)\n *     max-words=\"1000\"                        -- maxWords this input accept (default: unlimited)\n *     ng-model=\"message.body\"                 -- ng-model\n *     tinymce-options=\"tinymceOptions\"        -- override default options with yours (object expected)\n *  ></ev-tinymce>\n */\n(function (tinyMCE) {\n    var defaultOptions = {\n        menubar: false,\n        statusbar: false,\n        //resize: false,\n        toolbar: 'bold italic underline | alignleft aligncenter alignright | bullist',\n        skin: false,\n        'verify_html': true,\n        'convert_fonts_to_spans': true,\n        //'content_css': '/bower_components/ev-fdm/dist/css/ev-fdm.min.css',\n        inline: true,\n        browser_spellcheck : true,\n\n        // We choose to have a restrictive approach here.\n        // The aim is to output the cleanest html possible.\n        // See http://www.tinymce.com/wiki.php/Configuration:valid_elements\n        // 'valid_elements':\n        //     'strong,em' +\n        //     'span[!style<text-decoration: underline;],' +\n        //     '@[style<text-align: right;?text-align: left;?text-align: center;],' +\n        //     'p,!div,ul,li'\n    };\n\n    // u2019 and x27 : apostrophes\n    // u00C0-\\u1FFF : accents\n    var countregexp = /[\\w\\u2019\\x27\\-\\u00C0-\\u1FFF]+/g;\n    function countWords(text) {\n        var wordArray = text.match(countregexp);\n        if (wordArray) {\n            return wordArray.length;\n        }\n        return 0;\n    }\n\n\nangular.module('ev-tinymce', [])\n    .provider('evTinymce', function() {\n        var configs = {};\n\n        this.register = function(name, value) {\n            if (configs.hasOwnProperty(name)) {\n                throw new Error('A config named \"' + name + '\" was already registered');\n            }\n            configs[name] = value;\n        };\n\n        this.get = function(name) {\n            return configs[name];\n        };\n\n        this.$get = function() { return configs; };\n    })\n    .directive('evTinymce', ['$timeout', 'evTinymce', function($timeout, evTinymce) {\n        var generatedIds = 0;\n        return {\n            template: '<div class=\"tiny-mce-wrapper form-control\">'\n                + '<div class=\"ev-placeholder-container\"></div>'\n                + '<div class=\"ev-tinymce-content\"></div>'\n                + '<div ng-click=\"focusTinymce()\" class=\"ev-tinymce-toolbar\"></div>'\n                + '<div class=\"counter-info\"></div>'\n                + '</div>',\n            restrict: 'AE',\n            replace: true,\n            require: '?ngModel',\n\n            scope: {\n                tinymceOptions: '=',\n            },\n\n            link: function (scope, elm, attrs, ngModel) {\n                var tinyId = 'uiTinymce' + generatedIds++;\n                var tinyElm = elm.find('.ev-tinymce-content');\n                tinyElm.attr('id', tinyId);\n                elm.find('.ev-tinymce-toolbar').attr('id', tinyId + 'toolbar');\n\n                var tinyInstance;\n                var getTinyInstance = function() {\n                    if (!tinyInstance) {\n                        tinyInstance = tinyMCE.get(tinyId);\n                    }\n                    return tinyInstance;\n                };\n                var options = angular.extend({\n                    fixed_toolbar_container: '#' + tinyId + 'toolbar',\n                }, defaultOptions, evTinymce[attrs.configKey], scope.tinymceOptions);\n\n                // /**\n                //  * This part is used for the max-chars attribute.\n                //  * It allows us to easily limit the number of characters typed in the editor\n                //  */\n                var minChars = options.minChars = attrs.minChars || options.minChars || null;\n                var maxChars = options.maxChars = attrs.maxChars || options.maxChars || null;\n                var minWords = options.minWords = attrs.minWords || options.minWords || null;\n                var maxWords = options.maxWords = attrs.maxWords || options.maxWords || null;\n                // // We set the max char warning when the THRESHOLD is reached\n                // // Here, it's 85% of max chars\n                var THRESHOLD = 85;\n\n                // /**\n                //  * Update the information area about the textEditor state (maxChars, ..)\n                //  */\n                var updateCounter = function(currentValue, minValue, maxValue) {\n                    var counterInfosElm = elm.parent().find('.counter-info');\n                    counterInfosElm.text(currentValue + (maxValue ? ' / ' + maxValue : ''));\n\n                    if (maxValue) {\n                        var isThresholdReached = ((currentValue / maxValue) * 100) > THRESHOLD;\n                        counterInfosElm.toggleClass('counter-warning', isThresholdReached);\n                    }\n\n                    var isMinLimitNotReached = minValue && currentValue < minValue;\n                    var isMaxLimitReached = maxValue && currentValue >= maxValue;\n                    counterInfosElm.toggleClass('counter-reached', !!(isMinLimitNotReached || isMaxLimitReached));\n                };\n\n                var hasFocus = false;\n                var placeholder = false;\n                var currentHtml = '';\n                var currentText = '';\n\n                var setPlaceholder = function() {\n                    var editor = getTinyInstance();\n                    tinymce.DOM.addClass(tinyElm, 'placeholder-light');\n                    editor.setContent(attrs.placeholder);\n                };\n\n                var updatePlaceholder = function(newText) {\n                    var editor = getTinyInstance();\n                    if (hasFocus) {\n                        if (currentText === attrs.placeholder) {\n                            editor.setContent('');\n                            editor.selection.setCursorLocation();\n                            tinymce.DOM.removeClass(tinyElm, 'placeholder-light');\n                        }\n                    } else {\n                        if (newText !== attrs.placeholder) {\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                var updateView = function () {\n                    var editor = getTinyInstance();\n                    var newHtml = tinyElm.html();\n                    var newText = tinyElm.text();\n                    var newTextOverLimit = false, currentTextOverLimit = false;\n                    var newCount, minCount, maxCount;\n\n                    if (placeholder && newText === attrs.placeholder) {\n                        currentHtml = newHtml;\n                        currentText = newText;\n                        if (maxChars || minChars || maxWords || minWords) {\n                            newCount = 0;\n                        }\n                    } else {\n                        if (maxChars || minChars) {\n                            newCount = newText.length;\n                        } else if (maxWords || minWords) {\n                            newCount = countWords(newText);\n                        }\n\n                        if (minChars) {\n                            minCount = minChars;\n                        } else if (minWords) {\n                            minCount = minWords;\n                        }\n\n                        if (maxChars) {\n                            maxCount = maxChars;\n                            newTextOverLimit = newCount > maxChars;\n                        } else if (maxWords) {\n                            maxCount = maxWords;\n                            newTextOverLimit = newCount > maxWords;\n                        }\n\n                        /*\n                         * Specific case where the old and new text are both over the limit of max chars.\n                         * This case can occur on the first initialization, if data from DB are over the\n                         * limit.\n                         * For now, we substring the content (but that break the html and everything..)\n                         */\n                        if (newTextOverLimit && (currentTextOverLimit || !currentText.length)) {\n                            var shorterText = newText.substr(0, maxChars);\n                            // be careful, setContent call this method again\n                            editor.setContent(shorterText, { format: 'text' });\n                        } else if (newTextOverLimit) {\n                            editor.setContent(currentHtml); // be careful, setContent call this method again\n                        } else {\n                            $timeout(function() {\n                                ngModel.$setViewValue(newText === '' || newText === attrs.placeholder ? '' : newHtml);\n                            });\n                            currentHtml = newHtml;\n                            currentText = newText;\n                        }\n                    }\n\n                    // newCount not null nor undefined\n                    if (newCount != null) {\n                        updateCounter(newCount, minCount, maxCount);\n                    }\n\n\n                    placeholder = newText === '' || newText === attrs.placeholder;\n\n                    if (placeholder && attrs.placeholder) {\n                        updatePlaceholder(newText);\n                    }\n                };\n\n                ngModel.$render = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        if (ngModel.$viewValue) {\n                            editor.setContent(ngModel.$viewValue);\n                        } else if (attrs.placeholder) {\n                            placeholder = true;\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                scope.focusTinymce = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.focus();\n                    }\n                };\n\n                /* Options */\n\n                var setup = function(editor) {\n                    editor.on('init', function() {\n                        if (ngModel.$viewValue) {\n                            ngModel.$render();\n                        }\n                    });\n                    // Update model on button click\n                    editor.on('ExecCommand', function (e) {\n                        updateView();\n                    });\n                    // Update model on keypress\n                    editor.on('KeyUp', function (e) {\n                        updateView();\n                    });\n                    // Update model on change, i.e. copy/pasted text, plugins altering content\n                    editor.on('SetContent', function (e) {\n                        if (!e.initial) {\n                            updateView();\n                        }\n                    });\n                    editor.on('blur', function(e) {\n                        if (hasFocus) {\n                            hasFocus = false;\n                            updateView();\n                        }\n                        tinyElm.blur();\n                    });\n\n                    editor.on('focus', function (e) {\n                        if (!hasFocus) {\n                            hasFocus = true;\n                            updateView();\n                        }\n                    });\n                };\n\n                // extend options with initial uiTinymceConfig and options from directive attribute value\n                options.setup = setup;\n                options.elems = tinyId;\n                options.mode = 'exact';\n\n                tinyMCE.init(options);\n\n                scope.$on('$destroy', function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.destroy();\n                    }\n                });\n\n                tinyMCE.execCommand('mceToggleEditor', false, tinyId);\n            },\n        };\n    }]);\n}) (window.tinyMCE);\n","/* global tinymce */\n\ntinymce.PluginManager.add('evelements', function(editor) {\n    var evelementsConfig = editor.settings.evelements;\n    var evelementsOptions = editor.settings.evelementsOptions;\n\n    function setElement(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            if (node && elementConfig.matches(node)) {\n                dom.remove(node, true);\n            } else {\n                editor.insertContent(\n                    dom.createHTML(\n                        elementConfig.name,\n                        {},\n                        dom.encode(editor.selection.getContent({ format: 'text' }))\n                    )\n                );\n            }\n        };\n    }\n\n    function showDialog(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            var attributes = null;\n\n            if (node && elementConfig.matches(node)) {\n                attributes = {};\n                var attribs = dom.getAttribs(node);\n                for (var i = 0; i < attribs.length; ++i) {\n                    var item = attribs[i];\n                    attributes[item.name] = item.value;\n                }\n            } else {\n                node = null;\n            }\n\n            var key = elementConfig.key || elementConfig.name;\n            var callback = evelementsOptions[key] && evelementsOptions[key].callback;\n            var text = node ? ('innerText' in node ? node.innerText : node.textContent)\n                                 : editor.selection.getContent({ format: 'text' });\n            (callback || elementConfig.callback)(attributes, function(newAttributes, text) {\n                if (node) {\n                    editor.focus();\n                    if (!newAttributes && !text) {\n                        dom.remove(node, true);\n                        editor.undoManager.add();\n                        return;\n                    }\n                    dom.removeAllAttribs(node);\n                    dom.setAttribs(node, newAttributes);\n                    if (text) {\n                        if ('innerText' in node) {\n                            node.innerText = text;\n                        } else {\n                            node.textContent = text;\n                        }\n                    }\n                    editor.selection.select(node);\n                    editor.undoManager.add();\n                } else {\n                    editor.focus();\n                    node = dom.createHTML(elementConfig.name, newAttributes, text && dom.encode(text));\n                    editor.selection.setContent(node);\n                    editor.undoManager.add();\n                }\n            }, text, evelementsOptions);\n        };\n    }\n\n    if (typeof evelementsConfig === 'string') {\n        evelementsConfig = evelementsConfig.split(' ');\n    }\n\n    evelementsConfig.forEach(function(elementConfig) {\n        if (typeof elementConfig === 'string') {\n            elementConfig = {\n                name: elementConfig\n            };\n        }\n\n        elementConfig.matches = elementConfig.matches || function(node) {\n            return node.nodeName.toLowerCase() === elementConfig.name;\n        };\n\n        var callbackAction = elementConfig.callback ? showDialog(elementConfig) : setElement(elementConfig);\n\n        editor.addButton('ev' + (elementConfig.key || elementConfig.name), {\n            text: elementConfig.title !== undefined ? elementConfig.title : elementConfig.name,\n            icon: elementConfig.icon,\n            tooltip: elementConfig.tooltip || ('Set this text as ' + elementConfig.name),\n            shortcut: elementConfig.shortcut,\n            onclick: callbackAction,\n            stateSelector: elementConfig.selector || elementConfig.name,\n        });\n\n        if (elementConfig.shortcut) {\n            editor.addShortcut(elementConfig.shortcut, '', callbackAction);\n        }\n    });\n});\n","/* global tinymce, console */\n\ntinymce.PluginManager.add('evimage', function(editor) {\n    console.log('evimage is deprecated: use evelements');\n    function showDialog() {\n        var dom = editor.dom;\n        var node = editor.selection.getNode();\n        var attributes = null;\n\n        if (node && node.getAttribute('data-picture-id')) {\n            attributes = {\n                src: dom.getAttrib(node, 'src'),\n                alt: dom.getAttrib(node, 'alt'),\n                'class': dom.getAttrib(node, 'class'),\n                'data-picture-id': dom.getAttrib(node, 'data-picture-id')\n            };\n        }\n\n        editor.settings.evimage(attributes, function(attributesNew) {\n            if (attributes) {\n                dom.removeAllAttribs(node);\n                dom.setAttribs(node, attributesNew);\n            } else {\n                editor.selection.setContent(editor.dom.createHTML('img', attributesNew));\n            }\n        });\n    }\n\n    editor.addButton('evimage', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onclick: showDialog,\n        stateSelector: 'img[data-picture-id]:not([data-mce-object],[data-mce-placeholder])'\n    });\n\n    editor.addMenuItem('evimage', {\n        icon: 'image',\n        text: 'Insert image',\n        onclick: showDialog,\n        context: 'insert',\n        prependToContext: true\n    });\n\n    editor.addCommand('mceImage', showDialog);\n});\n","(function () {\n    'use strict';\n    angular.module('ev-upload', ['ev-fdm']);\n}) ();","; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureButtonUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-button-upload\n    =================\n    Hi! I'm a directive used for uploading pictures but I'm just a button.\n    If you want a more advanced one, you can use the evPictureUpload\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `pictureSuccess`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                pictures: '=',\n                buttonText: '@',\n                tooltipText: '@',\n                iconName: '@',\n                url: '@',\n                language: '=',\n                maxFiles: '@',\n                addPicture: '&',\n                onPictureAdded: '&'\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"addPicture({picture: file})\"' +\n                'upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<button type=\"button\" tabIndex=\"-1\" class=\"btn btn-tertiary btn-env ev-upload-clickable\"' +\n                            'tooltip=\"{{tooltipText}}\"' +\n                            'tooltip-placement=\"top\">' +\n                        '<span class=\"icon {{iconName}}\"></span> ' +\n                       '{{buttonText}}' +\n                    '</button>' +\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Transfert en cours\"| i18n}} </div>' +\n                    '<p> {{upload.done}} / {{upload.total}} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope, elem, attrs) {\n                $scope.uploading = false;\n\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url,\n                    maxFiles: $scope.maxFiles || 100\n                };\n\n                $scope.pictures = $scope.pictures || [];\n\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = {\n                        done: 0,\n                        total: '?'\n                    };\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success () {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été transférées avec succès'\n                                });\n                            },\n                            function error () {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.WARNING,\n                                    text: 'Certaines images n\\'ont pas pu être transférées.'\n                                });\n                            },\n                            function onNotify (progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                // This allow us to override the add picture\n                if(!attrs.addPicture) {\n                    $scope.addPicture = function(picture) {\n                        picture = picture.picture;\n                        var pictureData = picture.data[0];\n                        if($scope.language) {\n                            if (Array.isArray(pictureData.legend)) {\n                                pictureData.legend = {};\n                            }\n                            if (!pictureData.legend[$scope.language]) {\n                                pictureData.legend[$scope.language] = { name: '' };\n                            }\n                        }\n\n                        $scope.pictures.unshift(pictureData);\n                        $scope.onPictureAdded();\n                    };\n                }\n            }\n        };\n}]);\n}) ();\n","/* jshint maxlen: 200 */\n; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-upload\n    =================\n    Hi! I'm a directive used for uploading pictures. I'm based on the `ev-upload` directive. But I can also\n    manage flickr uploads !\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `addPicture`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                addPicture: '=',\n                url: '@',\n                language: '='\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"pictureUploaded(file)\"' +\n                'class=\"ev-picture-upload\" upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\">{{ \"Faites glisser vos images ici\" | i18n }}</div>' +\n                    '<table style=\"width:100%\"><tr><td style=\"width:114px\">'+\n                            '<button type=\"button\" tabIndex=\"-1\" class=\"btn ev-upload-clickable\">' +\n                                '{{ \"Importer...\" | i18n}}' +\n                            '</button>' +\n                        '</td>'+\n                        '<td style=\"width:30px´; line-height: 36px;\">'+\n                            '{{ \"ou\" | i18n }}' +\n                        '</td>'+\n                        '<td>'+\n                            '<ng-form novalidate name=\"flickr\" ' +\n                                'ng-class=\"{\\'has-error\\': flickr.$dirty && flickr.$invalid}\">' +\n                                '<input name=\"fUrl\" placeholder=\"{{\\'Lien Flickr\\' | i18n}}\" ' +\n                                    'ng-model=\"$parent.flickrUrl\" ng-pattern=\"flickrUrlPattern\" ' +\n                                    'class=\"form-control\" ng-change=\"uploadFlickrUrl(flickr)\"/>' +\n                                '<div ng-show=\"flickr.fUrl.$dirty && flickr.fUrl.$invalid\">' +\n                                    '<p class=\"control-label\" for=\"fUrl\" data-ng-show=\"flickr.fUrl.$error.pattern\">'+\n                                        '{{ \"L\\'url doit être une photo flickr\" | i18n}}</p>' +\n                                '</div>' +\n                            '</ng-form>' +\n                        '</td></tr></table>'+\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Upload en cours\"| i18n}} </div>' +\n                    '<div class=\"spinner\"></div>' +\n                    '<p> {{upload.done}} / {{upload.total}} {{ \"photo(s) uploadée(s)\" | i18n }} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope) {\n                $scope.flickrUrlPattern = /^(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+.*$/;\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url\n                };\n            },\n            controller: function ($scope) {\n                $scope.uploading = false;\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n                $scope.uploadFlickrUrl = function (flickrForm) {\n                    /* Trailing the ends in order to have a https://www.flickr.com/photos/{user-id}/{photo-id} url\n                        Warning: `.*` is greedy, so an address like:\n                            https://www.flickr.com/photos/{user-id}/{photo-id}/blabla/1512\n                        will not be parsed nicely\n                     */\n                    if (!flickrForm.$valid || !$scope.flickrUrl) {\n                        return;\n                    }\n                    var flickrUrl = /(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+/ .exec($scope.flickrUrl)[0];\n                    var uploadPromise = $http.post($scope.url, {'flickr-url': flickrUrl});\n                    uploadPromise\n                        .success(function (pictureUploaded) {\n                            var picture = pictureUploaded.data[0];\n                            $scope.addPicture(picture);\n                        })\n                        .success(function () {\n                            flickrForm.$setPristine();\n                            $scope.flickrUrl = \"\";\n                        });\n\n                    $scope.newUpload(uploadPromise);\n                    $scope.upload = {\n                        done: 0,\n                        total: 1,\n                        progress: 0\n                    };\n                };\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = null;\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success() {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été uploadées avec succès'\n                                });\n                            },\n                            function error(xhr) {\n                                const response = (typeof(xhr.data) == 'object') ? xhr.data : JSON.parse(xhr.response);\n                                NotificationsService.add({\n                                    type: NotificationsService.type.ERROR,\n                                    text: (xhr.status === 400 && response !== null)\n                                                ? response.error.message\n                                                : 'Certaines images n\\'ont pas pu être uploadées.',\n                                    delay: 10,\n                                });\n                            },\n                            function onNotify(progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                $scope.pictureUploaded = function(pictureUploaded) {\n                    var picture = pictureUploaded.data[0];\n                    $scope.addPicture(picture);\n                };\n            }\n        };\n}]);\n}) ();\n","/* global Dropzone */\n; (function (Dropzone) {\n    'use strict';\n    angular.module('ev-upload')\n        .directive('evUpload', ['$log', '$q', '$timeout', function ($log, $q, $timeout) {\n\n    /*  ev-upload\n        =========\n        Hi! I'm a directive used for uploading files.\n\n        You can give me three callback: `uploadStart`, `fileSuccess` and `fileAdded`\n        - `uploadStart` will be called when a new multiple upload start (for instance, when the user dropped some files\n            on the dropzone). It will be call with an argument: the promise for the status of the whole upload.\n        - `fileSuccess` will be called each time a file has successfully been uploaded, with the data returned by the\n            server.\n        - `fileAdded` will be called each time a file is added to the queue. It will be called with 3 arguments :\n            - dropzoneFile : the Dropzone file being uploaded\n            - promise : the promise associated with the file\n            - cancel : a function that can be called to cancel the upload of the file.\n\n        Clickable Element : you can define a clickable element inside the directive with the\n                            class '.ev-upload-clickable'\n\n        Dropzone Element : you can define a clickable element inside the directive with the class '.ev-upload-dropzone'\n                           If the class is not present, it will use the root element.\n\n        My inner heart is powered by Dropzone. You can pass any settings to it through my `settings` parameter.\n        Consequently, you can do whatever you want. Be wise :)\n\n        ** Careful, if you change the settings parameters, all the current upload will be canceled, as a new dropzone\n        object will be created. **\n    */\n\n        var BASE_CONFIG = {\n            previewTemplate: false,\n            previewsContainer: false,\n            autoQueue: true,\n            maxFilesize: 25,\n            maxFiles: 100,\n\n            uploadMultiple: false,\n            parallelUploads: 3\n        };\n\n            return {\n                transclude: true,\n                restrict: 'EA',\n                replace: true,\n                scope: {\n                    settings: '=',\n                    uploadStart: '&upload',\n                    fileSuccess: '&',\n                    fileAdded: '&'\n                },\n                template: '<div class=\"ev-upload\"><div ng-transclude> </div></div>',\n                link: function ($scope, elem, attrs) {\n\n                    $scope.fileSuccess = $scope.fileSuccess || function() {};\n                    $scope.fileAdded = $scope.fileAdded || function() {};\n\n                    var dropzone = null;\n                    var progress = null;\n\n                    var filesPromises = {};\n                    function getBytes (status) {\n                        return dropzone.getAcceptedFiles().reduce(function (bytes, file) {\n                            return bytes + file.upload[status];\n                        }, 0);\n                    }\n\n                    function getDropzoneElement() {\n                        var dz = elem.find('.ev-upload-dropzone');\n                        if (dz.length === 0) {\n                            dz = elem;\n                        }\n                        dz.addClass(\"dz-default\");\n                        dz.addClass(\"dz-message\");\n                        return dz[0];\n                    }\n\n                    function getClickableElement() {\n                        return elem.find('.ev-upload-clickable')[0];\n                    }\n\n                    $scope.$watch('settings', function (settings) {\n                        if (!settings.url) {\n                            $log.warn('No url provided to the upload zone');\n                            return;\n                        }\n                        if (dropzone !== null) {\n                            dropzone.destroy();\n                        }\n                        settings = angular.extend(BASE_CONFIG, settings);\n                        dropzone = new Dropzone(\n                            getDropzoneElement(),\n                            angular.extend({clickable: getClickableElement()},settings)\n                        );\n                        // the promise for the whole upload\n\n                        $scope.currentUpload = null;\n\n                        // When a file is added to the queue\n                        dropzone.on('addedfile', function (file) {\n                            if ($scope.currentUpload === null) {\n                                $scope.$apply(startNewUpload);\n                            }\n                            var deferred = $q.defer();\n                            filesPromises[file.name] = deferred;\n                            var cancel = function () {\n                                dropzone.removeFile(file);\n                            };\n                            $scope.$apply(function($scope) {\n                                $scope.fileAdded({\n                                    dropzoneFile: file,\n                                    promise: deferred.promise,\n                                    cancel: cancel\n                                });\n                            });\n                        });\n\n                        dropzone.on('uploadprogress', function (file, progress) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].notify(progress);\n                            });\n                        });\n\n                        dropzone.on('success', function (file, response) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].resolve({file: response});\n                                $scope.fileSuccess({file: response});\n                            });\n                        });\n\n                        dropzone.on('error', function (file, response, xhr) {\n                            if (!response && xhr.status === 500) {\n                                response = settings.dictResponseError || 'Unexpected error during the upload';\n                            }\n                            if (response === 'Upload canceled.') {\n                                response = settings.dictCanceledUpload || 'The upload has been canceled';\n                            }\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].reject(response);\n                            });\n                        });\n\n                        dropzone.on('canceled', function (file) {\n                            var deferred = filesPromises[file.name];\n                            $scope.$apply(function ($scope) {\n                                deferred.reject(settings.dictCanceledUpload || 'The upload has been canceled');\n                            });\n                        });\n\n                        dropzone.on('complete', function (file) {\n                            if(angular.isDefined(progress)){\n                                progress.done += 1;\n                            }\n                        });\n\n                    }, true);\n\n                    // Create a new overall upload object\n                    function startNewUpload($scope) {\n                        progress = {\n                            done: 0,\n                            progress: 0\n                        };\n\n                        // upload object, encapsulate the state of the current (multi file) upload\n                        var upload = {\n                            deferred: $q.defer(),\n                            hasFileErrored: false,\n                            hasFileErroredResponse: null,\n                        };\n\n                        var computeOverallProgress = function () {\n                            progress.progress = 100 * getBytes('bytesSent') / getBytes('total');\n                            progress.total = dropzone.getAcceptedFiles().length;\n                            upload.deferred.notify(progress);\n                        };\n\n                        // De-register all events\n                        dropzone\n                            .off('uploadprogress', computeOverallProgress)\n                            .off('maxfilesexceeded');\n\n                        computeOverallProgress();\n\n                        dropzone.once('error', function (response) {\n                            upload.hasFileErroredResponse = response.xhr;\n                            upload.hasFileErrored = true;\n                        });\n\n\n                        dropzone.on('uploadprogress', computeOverallProgress);\n\n                        var isUploadComplete = function () {\n                            return !dropzone.files.filter(function (file) {\n                                return file.status === Dropzone.QUEUED ||\n                                file.status === Dropzone.ADDED ||\n                                file.status === Dropzone.UPLOADING;\n                            }).length;\n                        };\n\n                        var stopIfComplete = function () {\n                            $scope.$apply(function ($scope) {\n                                $timeout(function () {\n                                    if ( !isUploadComplete() ) { return; }\n                                    dropzone.off('complete', stopIfComplete);\n                                    $timeout(function () {\n                                        if (upload.hasFileErrored) {\n                                            upload.deferred.reject(upload.hasFileErroredResponse);\n                                        } else {\n                                            upload.deferred.resolve();\n                                        }\n                                    });\n                                });\n                            });\n                        };\n\n                        dropzone.on('maxfilesexceeded', function() {\n                            upload.deferred.reject('maxfilesexceeded');\n                        });\n                        dropzone.on('complete', stopIfComplete);\n\n                        $scope.currentUpload = upload.deferred.promise;\n                        $scope.uploadStart({promise: upload.deferred.promise});\n                        $scope.currentUpload.finally(function () {\n                            dropzone.removeAllFiles(true);\n                            $scope.currentUpload = null;\n                        });\n\n                    }\n\n                    $scope.$on('$destroy', function () {\n                        dropzone.destroy();\n                    });\n                }\n            };\n        }]);\n}(Dropzone));\n"],"sourceRoot":"/source/"}