{"version":3,"sources":["/source/core/directives/EvMenuDirective.js","/source/core/factories/FilterServiceFactory.js","/source/core/app.js","/source/core/animations/PictureListAnimation.js","/source/core/animations/TagListAnimation.js","/source/core/controllers/ListController.js","/source/core/controllers/NotificationsController.js","/source/core/controllers/SearchController.js","/source/core/directives/AccordionDirective.js","/source/core/directives/ActivableDirective.js","/source/core/directives/AddTagInListDirective.js","/source/core/directives/ClearableDirective.js","/source/core/directives/DatePickerDirective.js","/source/core/directives/DownloadDirective.js","/source/core/directives/EditSection.js","/source/core/directives/EnterDirective.js","/source/core/directives/ErrorMessageDirective.js","/source/core/directives/ErrorsDirective.js","/source/core/directives/FlagDirective.js","/source/core/directives/FocusDirective.js","/source/core/directives/FormGroupDirective.js","/source/core/directives/LinkDisabledDirective.js","/source/core/directives/LoadingDotsDirective.js","/source/core/directives/MouseFollowerDirective.js","/source/core/directives/PaginationDirective.js","/source/core/directives/PictureListDirective.js","/source/core/directives/PopoverExtendDirective.js","/source/core/directives/PromiseDirective.js","/source/core/directives/PromiseProgressDirective.js","/source/core/directives/ResizableColumnDirective.js","/source/core/directives/ResolvingStateDirective.js","/source/core/directives/ResponsiveViewportDirective.js","/source/core/directives/SelectLanguageDirective.js","/source/core/directives/SelectableDirective.js","/source/core/directives/SortableDirective.js","/source/core/directives/StopEventPropagationDirective.js","/source/core/directives/SubmitDirective.js","/source/core/directives/TabDirective.js","/source/core/directives/TagListDirective.js","/source/core/directives/ThrottleDirective.js","/source/core/directives/ValidableDirective.js","/source/core/directives/ValueDirective.js","/source/core/factories/ConfirmBox.js","/source/core/factories/Select2Configuration.js","/source/core/filters/CleanupDate.js","/source/core/filters/HtmlToPlainTextFilter.js","/source/core/filters/Map.js","/source/core/filters/PrettySecsFilter.js","/source/core/filters/ReplaceFilter.js","/source/core/filters/SumFilter.js","/source/core/filters/TextSelectFilter.js","/source/core/filters/UnsafeFilter.js","/source/core/services/DownloadService.js","/source/core/services/FilteringService.js","/source/core/services/ModalService.js","/source/core/services/NotificationsService.js","/source/core/services/PanelService.js","/source/core/services/SortService.js","/source/core/services/UtilService.js","/source/core/storages/RestangularStorage.js","/source/core/directives/FormDirectives/DisableValidationDirective.js","/source/core/directives/FormDirectives/StrictMinDirective.js","/source/plugins/leaflet/LeafletDirective.js","/source/plugins/upload/app.js","/source/plugins/upload/directives/pictureButtonUploadDirective.js","/source/plugins/upload/directives/pictureUploadDirective.js","/source/plugins/upload/directives/uploadDirective.js","/source/plugins/tinymce/directives/tinymceDirective.js","/source/plugins/tinymce/plugins/evelements.js","/source/plugins/tinymce/plugins/evimage.js"],"names":["MenuManagerProvider","findTab","stateName","res","angular","forEach","self","tabs","tab","state","selectTab","activeTab","lastTab","active","this","addTab","push","$get","$rootScope","$state","$on","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","go","FilterServiceFactory","$timeout","FilterService","filters","listeners","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","isFunction","addListener","scope","removeListener","listener","index","splice","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","options","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","restangularProvider","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","window","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","className","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","setElements","requestCounter","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","bind","sortChanged","filtersChanged","toggleDetailView","toggleView","activeElement","setActiveElement","page","doIfLast","counter","fetch","then","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","view","routingArgs","goToViewStatePath","id","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","directive","accordionDirective","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","length","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","value","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","oldActiveElement","on","$","target","closest","ctrlKey","shiftKey","$apply","transclude","addElement","maxElements","iconName","buttonText","tooltipText","attrs","transcludeFn","context","showSelect","clone","transcludedScope","add","find","append","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$http","$document","downloadService","elm","get","download","success","data","url","notificationsService","args","title","headerTitle","noteditable","notdeletable","templateUrl","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","cancel","onCancel","onDelete","result","successDeleteMessage","errorDeleteMessage","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","which","ngEnter","preventDefault","input","error","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","put","showTimeout","triggerHandler","applyClass","classes","promiseGetter","promise","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","message","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","key","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","idRand","String","random","$watchCollection","allSelected","_this","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","maxAlertMessage","onTagDeleted","iconRemoveClass","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","$modal","positive","negative","open","backdrop","dataProvider","formatter","resultModifier","minimumInputLength","dataProviderFilter","idFunction","timeout","opt","ressource","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","resources","resource","results","more","tmp","shift","formatResult","container","escapeMarkup","formatSelection","initSelection","y","m","day","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","isObject","hasOwnProperty","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","service","iframe","useFullHost","createElement","display","appendChild","fullHost","location","protocol","host","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","$q","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","cache","updateLayout","containers","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","generateId","prefix","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildEmbedParameters","parameters","concat","buildParameters","number","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","all","getList","getFirst","getById","one","restangularizeElement","preventObjectUpdate","updateAll","patch","patchAll","create","post","deleteAll","saveAll","getNew","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters","icons","tiles","setIcons","setTiles","leafletData","evLeaflet","$log","coordinates","defaultCoordinates","boundingbox","centerOnMarkerOrBoungingbox","bounds","southWest","northEast","lat","southLatitude","lng","westLongitude","northLatitude","eastLongitude","center","zoom","markers","marker","baseIcon","iconSize","shadowSize","iconAnchor","draggable","scrollWheelZoom","doubleClickZoom","isNaN","latitude","warn","longitude","edited","icon","maxFiles","addPicture","onPictureAdded","uploading","settings","acceptedFiles","newUpload","upload","uploadPromise","picture","pictureData","legend","flickrUrlPattern","uploadFlickrUrl","flickrForm","flickrUrl","exec","flickr-url","pictureUploaded","$setPristine","response","status","Dropzone","BASE_CONFIG","previewTemplate","previewsContainer","autoQueue","maxFilesize","uploadMultiple","parallelUploads","uploadStart","fileSuccess","fileAdded","getBytes","dropzone","getAcceptedFiles","bytes","file","getDropzoneElement","dz","getClickableElement","startNewUpload","deferred","defer","hasFileErrored","computeOverallProgress","notify","off","once","isUploadComplete","files","QUEUED","ADDED","UPLOADING","stopIfComplete","reject","resolve","currentUpload","removeAllFiles","filesPromises","destroy","clickable","removeFile","dropzoneFile","xhr","dictResponseError","dictCanceledUpload","tinyMCE","countWords","wordArray","match","countregexp","defaultOptions","menubar","statusbar","toolbar","skin","verify_html","convert_fonts_to_spans","inline","browser_spellcheck","configs","register","evTinymce","tinymceOptions","ngModel","tinyId","tinyElm","tinyInstance","getTinyInstance","fixed_toolbar_container","configKey","minChars","maxChars","minWords","maxWords","THRESHOLD","updateCounter","currentValue","minValue","maxValue","counterInfosElm","isThresholdReached","isMinLimitNotReached","isMaxLimitReached","hasFocus","placeholder","currentHtml","currentText","setPlaceholder","editor","tinymce","DOM","setContent","updatePlaceholder","newText","selection","setCursorLocation","updateView","newCount","minCount","maxCount","newHtml","newTextOverLimit","currentTextOverLimit","shorterText","substr","format","$render","focusTinymce","setup","initial","blur","elems","mode","init","execCommand","PluginManager","setElement","elementConfig","dom","node","getNode","matches","insertContent","createHTML","encode","getContent","showDialog","attributes","attribs","getAttribs","item","evelementsOptions","innerText","textContent","newAttributes","undoManager","removeAllAttribs","setAttribs","evelementsConfig","evelements","nodeName","callbackAction","addButton","tooltip","shortcut","onclick","stateSelector","selector","addShortcut","getAttribute","getAttrib","alt","data-picture-id","evimage","attributesNew","addMenuItem","prependToContext","addCommand"],"mappings":"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","file":"ev-fdm.min.js","sourcesContent":["'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.elementName = elementName;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.$scope = $scope;\n            this.$scope.filters = {};\n            this.$scope.sortKey = this.defaultSortKey;\n            this.$scope.reverseSort = this.defaultReverseSort;\n\n            this.setElements(elements);\n            this.requestCounter = 0;\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', this.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(newPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', this.$scope.sortKey, this.$scope.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n\n            /*\n                Filter method that should be called from the template\n             */\n            this.$scope.filtersChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                this.toggleView('view', element);\n            }.bind(this);\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === this.elementName) {\n                    this.$scope.activeElement = null;\n                }\n                else {\n                    this.setActiveElement();\n                }\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::updated', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::created', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::deleted', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            var doIfLast = function(counter) {\n                return function (elements) {\n                    if (counter == this.requestCounter) {\n                        // It means no request have been lauchned afterward\n                        this.setElements(elements);\n                    }\n                    return elements;\n                }.bind(this)\n            }.bind(this)\n            this.requestCounter += 1;\n            return this.fetch(page, filters, sortKey, reverseSort)\n                .then(doIfLast(this.requestCounter))\n        };\n\n        ListController.prototype.setElements = function(elements) {\n            this.$scope[this.elementName] = elements;\n            this.$scope.currentPage = elements.pagination.current_page;\n            this.$scope.pageCount = elements.pagination.total_pages;\n            this.$scope.totalElement = elements.pagination.total;\n\n            if(!this.$scope.selectedElements || !this.$scope[this.elementName]) {\n                this.$scope.selectedElements  = [];\n            }\n            else {\n                var selectedElementsIds = this.$scope[this.elementName].map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.$scope[this.elementName], function(element) {\n                    if (restangular.configuration.getIdFromElem(element) == $state.params[this.activeIdSelector]) {\n                        this.$scope.activeElement = element;\n                    }\n                }.bind(this));\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","angular.module('ev-fdm').directive('evAddTagInList', [\n    function() {\n        return {\n            restrict: 'EA',\n            transclude: true,\n            scope: {\n                elements: '=',\n                addElement: '=',\n                maxElements: '=',\n                iconName: '@',\n                buttonText: '@',\n                tooltipText: '@',\n            },\n            template:\n                '<span ng-hide=\"elements.length >= maxElements\"> ' +\n                    '<button type=\"button\" ' +\n                        'class=\"btn btn-tertiary btn-env\" ' +\n                        'tabIndex=\"-1\"' +\n                        'tooltip=\"{{ tooltipText }}\"' +\n                        'tooltip-placement=\"top\"' +\n                        'tabIndex=\"-1\"' +\n                        'ng-hide=\"context.showSelect\" ' +\n                        'ng-click=\"context.showSelect = true\"> ' +\n                        '<span class=\"icon {{ iconName }}\"></span> ' +\n                        '{{ buttonText }} ' +\n                    '</button> ' +\n                    '<span ng-show=\"context.showSelect\"> ' +\n                        '<div class=\"transclude-addtaginlist\"></div>' +\n                    '</span> ' +\n                '</span> ',\n            link: function(scope, element, attrs, controller, transcludeFn) {\n                scope.context = {\n                    showSelect: false,\n                };\n\n                transcludeFn(function(clone, transcludedScope) {\n                    transcludedScope.add = function(element) {\n                        return scope.addElement(scope.elements, element);\n                    };\n\n                    // append body to template\n                    element.find('.transclude-addtaginlist').append(clone);\n                });\n            },\n        };\n    },\n]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get = function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang = function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-lg\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{active: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('[type=checkbox]')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            controller: ['$scope', function ($scope) {\n                $scope.idRand = String(Math.random());\n            }],\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"selected\"><label ng-attr-for=\"{{idRand}}\"></label></span>'\n            // template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"allSelected\" ng-click=\"toggleSelectAll()\"><label ng-attr-for=\"{{idRand}}\"></label></span>',\n            //'<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n                scope.idRand = String(Math.random());\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var _this = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort);\n                var reverseSortSet = reverseSortGet.assign;\n                var sortKeyGet = $parse($attrs.sortBy);\n                var sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    _this.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    _this.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if (key == this.sortKey) {\n                        // get back to the default state here (remove the sorting)\n                        // reverseSort flow: false (default) -> true -> sorketKey = '' (reset);\n                        if (this.reverseSort) {\n                            this.sortKey = '';\n                        } else {\n                            this.reverseSort = !this.reverseSort;\n                        }\n                    } else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if (reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if (sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n            },\n        ],};\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if (ctrl.sortKey === key) {\n                        element.removeClass('no-sort');\n                        if (ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        } else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    } else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            },\n        };\n    });\n","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&',\n                iconRemoveClass: '@',\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"label-btn\" ' +\n                                'ng-click=\"remove($index)\"><span class=\"{{ iconRemoveClass || \\'icon-bin\\' }}\"></span></button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^?evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred);\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit && evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            var idFunction;\n            var timeout = 600;\n            var opt = {};\n            if (typeof dataProvider === 'object') {\n                opt = dataProvider;\n                formatter = opt.formatter;\n                resultModifier = opt.resultModifier;\n                minimumInputLength = opt.minimumInputLength;\n                key = opt.key;\n                dataProviderFilter = opt.dataProviderFilter;\n                dataProvider = opt.dataProvider;\n                timeout = opt.timeout || timeout;\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n\n                if (typeof opt.id === 'string') {\n                    idFunction = function(ressource) {return ressource[opt.id];};\n                } else if (typeof opt.id === 'function') {\n                    idFunction = opt.id;\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                },\n                id: idFunction,\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","angular.module('ev-fdm')\n    .filter('htmlToPlainText', function() {\n        return function(text) {\n            return String(text).replace(/<[^>]+>/gm, '');\n        };\n    }\n);","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n.service('DownloadService', ['$window', '$document', function($window, $document) {\n    var iframe = null;\n    return {\n        /**\n         * Download a specific url using an iframe\n         *\n         * @param  {string}  url         the url you want to download\n         * @param  {boolean} useFullHost either you want to prepend the full host or not (without trailing slash!)\n         */\n        download: function(url, useFullHost) {\n            if(!iframe) {\n                iframe = $document[0].createElement('iframe');\n                iframe.style.display = 'none';\n                $document[0].body.appendChild(iframe);\n            }\n\n            if(useFullHost) {\n                var fullHost = $window.location.protocol + '//' + $window.location.host;\n                url = fullHost + url;\n            }\n\n            iframe.src = url;\n        }\n    };\n}]);\n","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildEmbedParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildParameters = function(options, defaultEmbed) {\n            var parameters = {};\n\n            options = options || {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(defaultEmbed));\n            } else if (defaultEmbed && defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = changesData[embedName];\n                            } else if (typeof changesData[embedName].data !== 'object' ||\n                                       Array.isArray(changesData[embedName].data)) {\n                                objectData[embedName].data = changesData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = RestangularStorage.buildParameters(options, this.defaultEmbed);\n\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildEmbedParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed, options) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildEmbedParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed, options) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed, options) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildEmbedParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed, options) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed, options) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildEmbedParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildEmbedParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});","angular.module('ev-leaflet', ['leaflet-directive'])\n    .provider('evLeaflet', function() {\n        this.$get = function() {\n            return {\n                icons: this.icons,\n                tiles: this.tiles\n            };\n        };\n\n        this.setIcons = function(icons) {\n            this.icons = icons;\n        };\n\n        this.setTiles = function(tiles) {\n            this.tiles = tiles;\n        };\n    })\n    .directive('evLeaflet', ['leafletData', 'evLeaflet', '$log', function (leafletData, evLeaflet, $log) {\n        return {\n            template: '<leaflet class=\"ev-leaflet\" defaults=\"defaults\" markers=\"markers\" center=\"center\" tiles=\"tiles\" bounds=\"bounds\"></leaflet>',\n            restrict: 'AE',\n            scope: {\n                coordinates: '=',\n                defaultCoordinates: '=?',\n                boundingbox: '=?',\n                editable: '='\n            },\n            controller: function($scope) {\n\n                // Icons settings\n                var baseIcon = {\n                    iconSize:   [40, 40],\n                    shadowSize: [1, 1],\n                    iconAnchor: [1, 20]\n                };\n\n                var icons = evLeaflet.icons;\n\n                if ('default' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.default);\n                }\n                if ('draggable' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.draggable);\n                }\n\n                var tiles = evLeaflet.tiles;\n                if (tiles) {\n                    $scope.tiles = tiles;\n                }\n\n                $scope.defaults = {\n                    scrollWheelZoom: false,\n                    doubleClickZoom: false\n                };\n\n                // Setting a marker in location\n                $scope.markers = {\n                    marker: {\n                        focus: true\n                    }\n                };\n\n                // Double binding between coordinates and marker's position\n                $scope.$watch('coordinates.latitude', function(lat) {\n                    if (isNaN(lat) || lat == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.latitude != null) {\n                            lat = $scope.defaultCoordinates.latitude;\n                        } else {\n                            lat = 0;\n                        }\n                        $log.warn('ev-leaflet: latitude is not a number');\n                    }\n\n                    if ($scope.markers.marker.lat != lat) {\n                        $scope.markers.marker.lat = lat;\n                        centerOnMarkerOrBoungingbox();\n                    }\n                });\n\n                $scope.$watch('coordinates.longitude', function(lng) {\n                    if (isNaN(lng) || lng == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.longitude != null) {\n                            lng = $scope.defaultCoordinates.longitude;\n                        } else {\n                            lng = 0;\n                        }\n                        $log.warn('ev-leaflet: longitude is not a number');\n                    }\n\n                    if ($scope.markers.marker.lng != lng) {\n                        $scope.markers.marker.lng = lng;\n                        centerOnMarkerOrBoungingbox();\n                    }\n                });\n\n                centerOnMarkerOrBoungingbox();\n\n                $scope.$watch('boundingbox', function(boundingbox) {\n                    centerOnMarkerOrBoungingbox();\n                });\n\n                $scope.$watch('markers.marker.lat', function(lat) {\n                    if (lat != null && $scope.editable) {\n                        $scope.coordinates.latitude = lat;\n                    }\n                });\n\n                $scope.$watch('markers.marker.lng', function(lng) {\n                    if (lng != null && $scope.editable) {\n                        $scope.coordinates.longitude = lng;\n                    }\n                });\n\n                // Setting map center\n                function centerOnMarkerOrBoungingbox() {\n                    if ($scope.boundingbox) {\n                        if (!$scope.bounds) {\n                            $scope.bounds = {\n                                southWest: {},\n                                northEast: {},\n                            };\n                        }\n                        $scope.bounds.southWest.lat = $scope.boundingbox.southLatitude;\n                        $scope.bounds.southWest.lng = $scope.boundingbox.westLongitude;\n                        $scope.bounds.northEast.lat = $scope.boundingbox.northLatitude;\n                        $scope.bounds.northEast.lng = $scope.boundingbox.eastLongitude;\n                        return;\n                    }\n\n                    if (!$scope.center) {\n                        $scope.center = { zoom: 8 };\n                    }\n                    $scope.center.lat = $scope.markers.marker.lat;\n                    $scope.center.lng = $scope.markers.marker.lng;\n                }\n\n                $scope.$watch('editable', function () {\n                    var edited = $scope.editable;\n                    $scope.markers.marker.icon = edited ? icons.draggable : icons['default'];\n                    $scope.markers.marker.draggable = edited;\n                });\n            }\n        };\n    }]);\n","(function () {\n    'use strict';\n    angular.module('ev-upload', ['ev-fdm']);\n}) ();","; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureButtonUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-button-upload\n    =================\n    Hi! I'm a directive used for uploading pictures but I'm just a button.\n    If you want a more advanced one, you can use the evPictureUpload\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `pictureSuccess`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                pictures: '=',\n                buttonText: '@',\n                tooltipText: '@',\n                iconName: '@',\n                url: '@',\n                language: '=',\n                maxFiles: '@',\n                addPicture: '&',\n                onPictureAdded: '&'\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"addPicture({picture: file})\"' +\n                'upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<button type=\"button\" tabIndex=\"-1\" class=\"btn btn-tertiary btn-env ev-upload-clickable\"' +\n                            'tooltip=\"{{tooltipText}}\"' +\n                            'tooltip-placement=\"top\">' +\n                        '<span class=\"icon {{iconName}}\"></span> ' +\n                       '{{buttonText}}' +\n                    '</button>' +\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Transfert en cours\"| i18n}} </div>' +\n                    '<p> {{upload.done}} / {{upload.total}} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope, elem, attrs) {\n                $scope.uploading = false;\n\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url,\n                    maxFiles: $scope.maxFiles || 100\n                };\n\n                $scope.pictures = $scope.pictures || [];\n\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = {\n                        done: 0,\n                        total: '?'\n                    };\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success () {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été transférées avec succès'\n                                });\n                            },\n                            function error () {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.WARNING,\n                                    text: 'Certaines images n\\'ont pas pu être transférées.'\n                                });\n                            },\n                            function onNotify (progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                // This allow us to override the add picture\n                if(!attrs.addPicture) {\n                    $scope.addPicture = function(picture) {\n                        picture = picture.picture;\n                        var pictureData = picture.data[0];\n                        if($scope.language) {\n                            if (Array.isArray(pictureData.legend)) {\n                                pictureData.legend = {};\n                            }\n                            if (!pictureData.legend[$scope.language]) {\n                                pictureData.legend[$scope.language] = { name: '' };\n                            }\n                        }\n\n                        $scope.pictures.unshift(pictureData);\n                        $scope.onPictureAdded();\n                    };\n                }\n            }\n        };\n}]);\n}) ();\n","/* jshint maxlen: 200 */\n; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-upload\n    =================\n    Hi! I'm a directive used for uploading pictures. I'm based on the `ev-upload` directive. But I can also\n    manage flickr uploads !\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `addPicture`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                addPicture: '=',\n                url: '@',\n                language: '='\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"pictureUploaded(file)\"' +\n                'class=\"ev-picture-upload\" upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\">{{ \"Faites glisser vos images ici\" | i18n }}</div>' +\n                    '<table style=\"width:100%\"><tr><td style=\"width:114px\">'+\n                            '<button type=\"button\" tabIndex=\"-1\" class=\"btn ev-upload-clickable\">' +\n                                '{{ \"Importer...\" | i18n}}' +\n                            '</button>' +\n                        '</td>'+\n                        '<td style=\"width:30px´; line-height: 36px;\">'+\n                            '{{ \"ou\" | i18n }}' +\n                        '</td>'+\n                        '<td>'+\n                            '<ng-form novalidate name=\"flickr\" ' +\n                                'ng-class=\"{\\'has-error\\': flickr.$dirty && flickr.$invalid}\">' +\n                                '<input name=\"fUrl\" placeholder=\"{{\\'Lien Flickr\\' | i18n}}\" ' +\n                                    'ng-model=\"$parent.flickrUrl\" ng-pattern=\"flickrUrlPattern\" ' +\n                                    'class=\"form-control\" ng-change=\"uploadFlickrUrl(flickr)\"/>' +\n                                '<div ng-show=\"flickr.fUrl.$dirty && flickr.fUrl.$invalid\">' +\n                                    '<p class=\"control-label\" for=\"fUrl\" data-ng-show=\"flickr.fUrl.$error.pattern\">'+\n                                        '{{ \"L\\'url doit être une photo flickr\" | i18n}}</p>' +\n                                '</div>' +\n                            '</ng-form>' +\n                        '</td></tr></table>'+\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Upload en cours\"| i18n}} </div>' +\n                    '<div class=\"spinner\"></div>' +\n                    '<p> {{upload.done}} / {{upload.total}} {{ \"photo(s) uploadée(s)\" | i18n }} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope) {\n                $scope.flickrUrlPattern = /^(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+.*$/;\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url\n                };\n            },\n            controller: function ($scope) {\n                $scope.uploading = false;\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n                $scope.uploadFlickrUrl = function (flickrForm) {\n                    /* Trailing the ends in order to have a https://www.flickr.com/photos/{user-id}/{photo-id} url\n                        Warning: `.*` is greedy, so an address like:\n                            https://www.flickr.com/photos/{user-id}/{photo-id}/blabla/1512\n                        will not be parsed nicely\n                     */\n                    if (!flickrForm.$valid || !$scope.flickrUrl) {\n                        return;\n                    }\n                    var flickrUrl = /(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+/ .exec($scope.flickrUrl)[0];\n                    var uploadPromise = $http.post($scope.url, {'flickr-url': flickrUrl});\n                    uploadPromise\n                        .success(function (pictureUploaded) {\n                            var picture = pictureUploaded.data[0];\n                            $scope.addPicture(picture);\n                        })\n                        .success(function () {\n                            flickrForm.$setPristine();\n                            $scope.flickrUrl = \"\";\n                        });\n\n                    $scope.newUpload(uploadPromise);\n                    $scope.upload = {\n                        done: 0,\n                        total: 1,\n                        progress: 0\n                    };\n                };\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = null;\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success() {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été uploadées avec succès'\n                                });\n                            },\n                            function error(response) {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.ERROR,\n                                    text: response.status === 400 ? response.data.error.message\n                                                    : 'Certaines images n\\'ont pas pu être uploadées.',\n                                    delay: 10,\n                                });\n                            },\n                            function onNotify(progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                $scope.pictureUploaded = function(pictureUploaded) {\n                    var picture = pictureUploaded.data[0];\n                    $scope.addPicture(picture);\n                };\n            }\n        };\n}]);\n}) ();\n","/* global Dropzone */\n; (function (Dropzone) {\n    'use strict';\n    angular.module('ev-upload')\n        .directive('evUpload', ['$log', '$q', '$timeout', function ($log, $q, $timeout) {\n\n    /*  ev-upload\n        =========\n        Hi! I'm a directive used for uploading files.\n\n        You can give me three callback: `uploadStart`, `fileSuccess` and `fileAdded`\n        - `uploadStart` will be called when a new multiple upload start (for instance, when the user dropped some files\n            on the dropzone). It will be call with an argument: the promise for the status of the whole upload.\n        - `fileSuccess` will be called each time a file has successfully been uploaded, with the data returned by the\n            server.\n        - `fileAdded` will be called each time a file is added to the queue. It will be called with 3 arguments :\n            - dropzoneFile : the Dropzone file being uploaded\n            - promise : the promise associated with the file\n            - cancel : a function that can be called to cancel the upload of the file.\n\n        Clickable Element : you can define a clickable element inside the directive with the\n                            class '.ev-upload-clickable'\n\n        Dropzone Element : you can define a clickable element inside the directive with the class '.ev-upload-dropzone'\n                           If the class is not present, it will use the root element.\n\n        My inner heart is powered by Dropzone. You can pass any settings to it through my `settings` parameter.\n        Consequently, you can do whatever you want. Be wise :)\n\n        ** Careful, if you change the settings parameters, all the current upload will be canceled, as a new dropzone\n        object will be created. **\n    */\n\n        var BASE_CONFIG = {\n            previewTemplate: false,\n            previewsContainer: false,\n            autoQueue: true,\n            maxFilesize: 12,\n            maxFiles: 100,\n\n            uploadMultiple: false,\n            parallelUploads: 3\n        };\n\n            return {\n                transclude: true,\n                restrict: 'EA',\n                replace: true,\n                scope: {\n                    settings: '=',\n                    uploadStart: '&upload',\n                    fileSuccess: '&',\n                    fileAdded: '&'\n                },\n                template: '<div class=\"ev-upload\"><div ng-transclude> </div></div>',\n                link: function ($scope, elem, attrs) {\n\n                    $scope.fileSuccess = $scope.fileSuccess || function() {};\n                    $scope.fileAdded = $scope.fileAdded || function() {};\n\n                    var dropzone = null;\n                    var progress = null;\n\n                    var filesPromises = {};\n                    function getBytes (status) {\n                        return dropzone.getAcceptedFiles().reduce(function (bytes, file) {\n                            return bytes + file.upload[status];\n                        }, 0);\n                    }\n\n                    function getDropzoneElement() {\n                        var dz = elem.find('.ev-upload-dropzone');\n                        if (dz.length === 0) {\n                            dz = elem;\n                        }\n                        dz.addClass(\"dz-default\");\n                        dz.addClass(\"dz-message\");\n                        return dz[0];\n                    }\n\n                    function getClickableElement() {\n                        return elem.find('.ev-upload-clickable')[0];\n                    }\n\n                    $scope.$watch('settings', function (settings) {\n                        if (!settings.url) {\n                            $log.warn('No url provided to the upload zone');\n                            return;\n                        }\n                        if (dropzone !== null) {\n                            dropzone.destroy();\n                        }\n                        settings = angular.extend(BASE_CONFIG, settings);\n                        dropzone = new Dropzone(\n                            getDropzoneElement(),\n                            angular.extend({clickable: getClickableElement()},settings)\n                        );\n                        // the promise for the whole upload\n\n                        $scope.currentUpload = null;\n\n                        // When a file is added to the queue\n                        dropzone.on('addedfile', function (file) {\n                            if ($scope.currentUpload === null) {\n                                $scope.$apply(startNewUpload);\n                            }\n                            var deferred = $q.defer();\n                            filesPromises[file.name] = deferred;\n                            var cancel = function () {\n                                dropzone.removeFile(file);\n                            };\n                            $scope.$apply(function($scope) {\n                                $scope.fileAdded({\n                                    dropzoneFile: file,\n                                    promise: deferred.promise,\n                                    cancel: cancel\n                                });\n                            });\n                        });\n\n                        dropzone.on('uploadprogress', function (file, progress) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].notify(progress);\n                            });\n                        });\n\n                        dropzone.on('success', function (file, response) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].resolve({file: response});\n                                $scope.fileSuccess({file: response});\n                            });\n                        });\n\n                        dropzone.on('error', function (file, response, xhr) {\n                            if (!response && xhr.status === 500) {\n                                response = settings.dictResponseError || 'Unexpected error during the upload';\n                            }\n                            if (response === 'Upload canceled.') {\n                                response = settings.dictCanceledUpload || 'The upload has been canceled';\n                            }\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].reject(response);\n                            });\n                        });\n\n                        dropzone.on('canceled', function (file) {\n                            var deferred = filesPromises[file.name];\n                            $scope.$apply(function ($scope) {\n                                deferred.reject(settings.dictCanceledUpload || 'The upload has been canceled');\n                            });\n                        });\n\n                        dropzone.on('complete', function (file) {\n                            if(angular.isDefined(progress)){\n                                progress.done += 1;\n                            }\n                        });\n\n                    }, true);\n\n                    // Create a new overall upload object\n                    function startNewUpload($scope) {\n                        progress = {\n                            done: 0,\n                            progress: 0\n                        };\n\n                        // upload object, encapsulate the state of the current (multi file) upload\n                        var upload = {\n                            deferred: $q.defer(),\n                            hasFileErrored: false,\n                        };\n\n                        var computeOverallProgress = function () {\n                            progress.progress = 100 * getBytes('bytesSent') / getBytes('total');\n                            progress.total = dropzone.getAcceptedFiles().length;\n                            upload.deferred.notify(progress);\n                        };\n\n                        // De-register all events\n                        dropzone\n                            .off('uploadprogress', computeOverallProgress)\n                            .off('maxfilesexceeded');\n\n                        computeOverallProgress();\n\n                        dropzone.once('error', function () {\n                            upload.hasFileErrored = true;\n                        });\n\n\n                        dropzone.on('uploadprogress', computeOverallProgress);\n\n                        var isUploadComplete = function () {\n                            return !dropzone.files.filter(function (file) {\n                                return file.status === Dropzone.QUEUED ||\n                                file.status === Dropzone.ADDED ||\n                                file.status === Dropzone.UPLOADING;\n                            }).length;\n                        };\n\n                        var stopIfComplete = function () {\n                            $scope.$apply(function ($scope) {\n                                $timeout(function () {\n                                    if ( !isUploadComplete() ) { return; }\n                                    dropzone.off('complete', stopIfComplete);\n                                    $timeout(function () {\n                                        if (upload.hasFileErrored) {\n                                            upload.deferred.reject('filehaserrored');\n                                        } else {\n                                            upload.deferred.resolve();\n                                        }\n                                    });\n                                });\n                            });\n                        };\n\n                        dropzone.on('maxfilesexceeded', function() {\n                            upload.deferred.reject('maxfilesexceeded');\n                        });\n                        dropzone.on('complete', stopIfComplete);\n\n                        $scope.currentUpload = upload.deferred.promise;\n                        $scope.uploadStart({promise: upload.deferred.promise});\n                        $scope.currentUpload.finally(function () {\n                            dropzone.removeAllFiles(true);\n                            $scope.currentUpload = null;\n                        });\n\n                    }\n\n                    $scope.$on('$destroy', function () {\n                        dropzone.destroy();\n                    });\n                }\n            };\n        }]);\n}(Dropzone));\n","/* jshint camelcase: false */\n/* global tinymce */\n/**\n * Directive to override some settings in tinymce\n * Usage:\n * <ev-tinymce\n *     min-chars=\"1000\"                        -- minChars this input accept (default: none)\n *     max-chars=\"1000\"                        -- maxChars this input accept (default: unlimited)\n *     min-words=\"1000\"                        -- minWords this input accept (default: none)\n *     max-words=\"1000\"                        -- maxWords this input accept (default: unlimited)\n *     ng-model=\"message.body\"                 -- ng-model\n *     tinymce-options=\"tinymceOptions\"        -- override default options with yours (object expected)\n *  ></ev-tinymce>\n */\n(function (tinyMCE) {\n    var defaultOptions = {\n        menubar: false,\n        statusbar: false,\n        //resize: false,\n        toolbar: 'bold italic underline | alignleft aligncenter alignright | bullist',\n        skin: false,\n        'verify_html': true,\n        'convert_fonts_to_spans': true,\n        //'content_css': '/bower_components/ev-fdm/dist/css/ev-fdm.min.css',\n        inline: true,\n        browser_spellcheck : true,\n\n        // We choose to have a restrictive approach here.\n        // The aim is to output the cleanest html possible.\n        // See http://www.tinymce.com/wiki.php/Configuration:valid_elements\n        // 'valid_elements':\n        //     'strong,em' +\n        //     'span[!style<text-decoration: underline;],' +\n        //     '@[style<text-align: right;?text-align: left;?text-align: center;],' +\n        //     'p,!div,ul,li'\n    };\n\n    // u2019 and x27 : apostrophes\n    // u00C0-\\u1FFF : accents\n    var countregexp = /[\\w\\u2019\\x27\\-\\u00C0-\\u1FFF]+/g;\n    function countWords(text) {\n        var wordArray = text.match(countregexp);\n        if (wordArray) {\n            return wordArray.length;\n        }\n        return 0;\n    }\n\n\nangular.module('ev-tinymce', [])\n    .provider('evTinymce', function() {\n        var configs = {};\n\n        this.register = function(name, value) {\n            if (configs.hasOwnProperty(name)) {\n                throw new Error('A config named \"' + name + '\" was already registered');\n            }\n            configs[name] = value;\n        };\n\n        this.get = function(name) {\n            return configs[name];\n        };\n\n        this.$get = function() { return configs; };\n    })\n    .directive('evTinymce', ['$timeout', 'evTinymce', function($timeout, evTinymce) {\n        var generatedIds = 0;\n        return {\n            template: '<div class=\"tiny-mce-wrapper form-control\">'\n                + '<div class=\"ev-placeholder-container\"></div>'\n                + '<div class=\"ev-tinymce-content\"></div>'\n                + '<div ng-click=\"focusTinymce()\" class=\"ev-tinymce-toolbar\"></div>'\n                + '<div class=\"counter-info\"></div>'\n                + '</div>',\n            restrict: 'AE',\n            replace: true,\n            require: '?ngModel',\n\n            scope: {\n                tinymceOptions: '=',\n            },\n\n            link: function (scope, elm, attrs, ngModel) {\n                var tinyId = 'uiTinymce' + generatedIds++;\n                var tinyElm = elm.find('.ev-tinymce-content');\n                tinyElm.attr('id', tinyId);\n                elm.find('.ev-tinymce-toolbar').attr('id', tinyId + 'toolbar');\n\n                var tinyInstance;\n                var getTinyInstance = function() {\n                    if (!tinyInstance) {\n                        tinyInstance = tinyMCE.get(tinyId);\n                    }\n                    return tinyInstance;\n                };\n                var options = angular.extend({\n                    fixed_toolbar_container: '#' + tinyId + 'toolbar',\n                }, defaultOptions, evTinymce[attrs.configKey], scope.tinymceOptions);\n\n                // /**\n                //  * This part is used for the max-chars attribute.\n                //  * It allows us to easily limit the number of characters typed in the editor\n                //  */\n                var minChars = options.minChars = attrs.minChars || options.minChars || null;\n                var maxChars = options.maxChars = attrs.maxChars || options.maxChars || null;\n                var minWords = options.minWords = attrs.minWords || options.minWords || null;\n                var maxWords = options.maxWords = attrs.maxWords || options.maxWords || null;\n                // // We set the max char warning when the THRESHOLD is reached\n                // // Here, it's 85% of max chars\n                var THRESHOLD = 85;\n\n                // /**\n                //  * Update the information area about the textEditor state (maxChars, ..)\n                //  */\n                var updateCounter = function(currentValue, minValue, maxValue) {\n                    var counterInfosElm = elm.parent().find('.counter-info');\n                    counterInfosElm.text(currentValue + (maxValue ? ' / ' + maxValue : ''));\n\n                    if (maxValue) {\n                        var isThresholdReached = ((currentValue / maxValue) * 100) > THRESHOLD;\n                        counterInfosElm.toggleClass('counter-warning', isThresholdReached);\n                    }\n\n                    var isMinLimitNotReached = minValue && currentValue < minValue;\n                    var isMaxLimitReached = maxValue && currentValue >= maxValue;\n                    counterInfosElm.toggleClass('counter-reached', !!(isMinLimitNotReached || isMaxLimitReached));\n                };\n\n                var hasFocus = false;\n                var placeholder = false;\n                var currentHtml = '';\n                var currentText = '';\n\n                var setPlaceholder = function() {\n                    var editor = getTinyInstance();\n                    tinymce.DOM.addClass(tinyElm, 'placeholder-light');\n                    editor.setContent(attrs.placeholder);\n                };\n\n                var updatePlaceholder = function(newText) {\n                    var editor = getTinyInstance();\n                    if (hasFocus) {\n                        if (currentText === attrs.placeholder) {\n                            editor.setContent('');\n                            editor.selection.setCursorLocation();\n                            tinymce.DOM.removeClass(tinyElm, 'placeholder-light');\n                        }\n                    } else {\n                        if (newText !== attrs.placeholder) {\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                var updateView = function () {\n                    var editor = getTinyInstance();\n                    var newHtml = tinyElm.html();\n                    var newText = tinyElm.text();\n                    var newTextOverLimit = false, currentTextOverLimit = false;\n                    var newCount, minCount, maxCount;\n\n                    if (placeholder && newText === attrs.placeholder) {\n                        currentHtml = newHtml;\n                        currentText = newText;\n                        if (maxChars || minChars || maxWords || minWords) {\n                            newCount = 0;\n                        }\n                    } else {\n                        if (maxChars || minChars) {\n                            newCount = newText.length;\n                        } else if (maxWords || minWords) {\n                            newCount = countWords(newText);\n                        }\n\n                        if (minChars) {\n                            minCount = minChars;\n                        } else if (minWords) {\n                            minCount = minWords;\n                        }\n\n                        if (maxChars) {\n                            maxCount = maxChars;\n                            newTextOverLimit = newCount > maxChars;\n                        } else if (maxWords) {\n                            maxCount = maxWords;\n                            newTextOverLimit = newCount > maxWords;\n                        }\n\n                        /*\n                         * Specific case where the old and new text are both over the limit of max chars.\n                         * This case can occur on the first initialization, if data from DB are over the\n                         * limit.\n                         * For now, we substring the content (but that break the html and everything..)\n                         */\n                        if (newTextOverLimit && (currentTextOverLimit || !currentText.length)) {\n                            var shorterText = newText.substr(0, maxChars);\n                            // be careful, setContent call this method again\n                            editor.setContent(shorterText, { format: 'text' });\n                        } else if (newTextOverLimit) {\n                            editor.setContent(currentHtml); // be careful, setContent call this method again\n                        } else {\n                            $timeout(function() {\n                                ngModel.$setViewValue(newText === '' || newText === attrs.placeholder ? '' : newHtml);\n                            });\n                            currentHtml = newHtml;\n                            currentText = newText;\n                        }\n                    }\n\n                    // newCount not null nor undefined\n                    if (newCount != null) {\n                        updateCounter(newCount, minCount, maxCount);\n                    }\n\n\n                    placeholder = newText === '' || newText === attrs.placeholder;\n\n                    if (placeholder && attrs.placeholder) {\n                        updatePlaceholder(newText);\n                    }\n                };\n\n                ngModel.$render = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        if (ngModel.$viewValue) {\n                            editor.setContent(ngModel.$viewValue);\n                        } else if (attrs.placeholder) {\n                            placeholder = true;\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                scope.focusTinymce = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.focus();\n                    }\n                };\n\n                /* Options */\n\n                var setup = function(editor) {\n                    editor.on('init', function() {\n                        if (ngModel.$viewValue) {\n                            ngModel.$render();\n                        }\n                    });\n                    // Update model on button click\n                    editor.on('ExecCommand', function (e) {\n                        updateView();\n                    });\n                    // Update model on keypress\n                    editor.on('KeyUp', function (e) {\n                        updateView();\n                    });\n                    // Update model on change, i.e. copy/pasted text, plugins altering content\n                    editor.on('SetContent', function (e) {\n                        if (!e.initial) {\n                            updateView();\n                        }\n                    });\n                    editor.on('blur', function(e) {\n                        if (hasFocus) {\n                            hasFocus = false;\n                            updateView();\n                        }\n                        tinyElm.blur();\n                    });\n\n                    editor.on('focus', function (e) {\n                        if (!hasFocus) {\n                            hasFocus = true;\n                            updateView();\n                        }\n                    });\n                };\n\n                // extend options with initial uiTinymceConfig and options from directive attribute value\n                options.setup = setup;\n                options.elems = tinyId;\n                options.mode = 'exact';\n\n                tinyMCE.init(options);\n\n                scope.$on('$destroy', function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.destroy();\n                    }\n                });\n\n                tinyMCE.execCommand('mceToggleEditor', false, tinyId);\n            },\n        };\n    }]);\n}) (window.tinyMCE);\n","/* global tinymce */\n\ntinymce.PluginManager.add('evelements', function(editor) {\n    var evelementsConfig = editor.settings.evelements;\n    var evelementsOptions = editor.settings.evelementsOptions;\n\n    function setElement(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            if (node && elementConfig.matches(node)) {\n                dom.remove(node, true);\n            } else {\n                editor.insertContent(\n                    dom.createHTML(\n                        elementConfig.name,\n                        {},\n                        dom.encode(editor.selection.getContent({ format: 'text' }))\n                    )\n                );\n            }\n        };\n    }\n\n    function showDialog(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            var attributes = null;\n\n            if (node && elementConfig.matches(node)) {\n                attributes = {};\n                var attribs = dom.getAttribs(node);\n                for (var i = 0; i < attribs.length; ++i) {\n                    var item = attribs[i];\n                    attributes[item.name] = item.value;\n                }\n            } else {\n                node = null;\n            }\n\n            var key = elementConfig.key || elementConfig.name;\n            var callback = evelementsOptions[key] && evelementsOptions[key].callback;\n            var text = node ? ('innerText' in node ? node.innerText : node.textContent)\n                                 : editor.selection.getContent({ format: 'text' });\n            (callback || elementConfig.callback)(attributes, function(newAttributes, text) {\n                if (node) {\n                    editor.focus();\n                    if (!newAttributes && !text) {\n                        dom.remove(node, true);\n                        editor.undoManager.add();\n                        return;\n                    }\n                    dom.removeAllAttribs(node);\n                    dom.setAttribs(node, newAttributes);\n                    if (text) {\n                        if ('innerText' in node) {\n                            node.innerText = text;\n                        } else {\n                            node.textContent = text;\n                        }\n                    }\n                    editor.selection.select(node);\n                    editor.undoManager.add();\n                } else {\n                    editor.focus();\n                    node = dom.createHTML(elementConfig.name, newAttributes, text && dom.encode(text));\n                    editor.selection.setContent(node);\n                    editor.undoManager.add();\n                }\n            }, text, evelementsOptions);\n        };\n    }\n\n    if (typeof evelementsConfig === 'string') {\n        evelementsConfig = evelementsConfig.split(' ');\n    }\n\n    evelementsConfig.forEach(function(elementConfig) {\n        if (typeof elementConfig === 'string') {\n            elementConfig = {\n                name: elementConfig\n            };\n        }\n\n        elementConfig.matches = elementConfig.matches || function(node) {\n            return node.nodeName.toLowerCase() === elementConfig.name;\n        };\n\n        var callbackAction = elementConfig.callback ? showDialog(elementConfig) : setElement(elementConfig);\n\n        editor.addButton('ev' + (elementConfig.key || elementConfig.name), {\n            text: elementConfig.title !== undefined ? elementConfig.title : elementConfig.name,\n            icon: elementConfig.icon,\n            tooltip: elementConfig.tooltip || ('Set this text as ' + elementConfig.name),\n            shortcut: elementConfig.shortcut,\n            onclick: callbackAction,\n            stateSelector: elementConfig.selector || elementConfig.name,\n        });\n\n        if (elementConfig.shortcut) {\n            editor.addShortcut(elementConfig.shortcut, '', callbackAction);\n        }\n    });\n});\n","/* global tinymce, console */\n\ntinymce.PluginManager.add('evimage', function(editor) {\n    console.log('evimage is deprecated: use evelements');\n    function showDialog() {\n        var dom = editor.dom;\n        var node = editor.selection.getNode();\n        var attributes = null;\n\n        if (node && node.getAttribute('data-picture-id')) {\n            attributes = {\n                src: dom.getAttrib(node, 'src'),\n                alt: dom.getAttrib(node, 'alt'),\n                'class': dom.getAttrib(node, 'class'),\n                'data-picture-id': dom.getAttrib(node, 'data-picture-id')\n            };\n        }\n\n        editor.settings.evimage(attributes, function(attributesNew) {\n            if (attributes) {\n                dom.removeAllAttribs(node);\n                dom.setAttribs(node, attributesNew);\n            } else {\n                editor.selection.setContent(editor.dom.createHTML('img', attributesNew));\n            }\n        });\n    }\n\n    editor.addButton('evimage', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onclick: showDialog,\n        stateSelector: 'img[data-picture-id]:not([data-mce-object],[data-mce-placeholder])'\n    });\n\n    editor.addMenuItem('evimage', {\n        icon: 'image',\n        text: 'Insert image',\n        onclick: showDialog,\n        context: 'insert',\n        prependToContext: true\n    });\n\n    editor.addCommand('mceImage', showDialog);\n});\n"],"sourceRoot":"/source/"}