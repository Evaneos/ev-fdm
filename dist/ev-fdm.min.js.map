{"version":3,"sources":["/source/core/directives/EvMenuDirective.js","/source/core/factories/FilterServiceFactory.js","/source/core/app.js","/source/core/animations/PictureListAnimation.js","/source/core/animations/TagListAnimation.js","/source/core/controllers/ListController.js","/source/core/controllers/NotificationsController.js","/source/core/controllers/SearchController.js","/source/core/directives/AccordionDirective.js","/source/core/directives/ActivableDirective.js","/source/core/directives/ClearableDirective.js","/source/core/directives/DatePickerDirective.js","/source/core/directives/DownloadDirective.js","/source/core/directives/EditSection.js","/source/core/directives/EnterDirective.js","/source/core/directives/ErrorMessageDirective.js","/source/core/directives/ErrorsDirective.js","/source/core/directives/FlagDirective.js","/source/core/directives/FocusDirective.js","/source/core/directives/FormGroupDirective.js","/source/core/directives/LinkDisabledDirective.js","/source/core/directives/LoadingDotsDirective.js","/source/core/directives/MouseFollowerDirective.js","/source/core/directives/PaginationDirective.js","/source/core/directives/PictureListDirective.js","/source/core/directives/PopoverExtendDirective.js","/source/core/directives/PromiseDirective.js","/source/core/directives/PromiseProgressDirective.js","/source/core/directives/ResizableColumnDirective.js","/source/core/directives/ResolvingStateDirective.js","/source/core/directives/ResponsiveViewportDirective.js","/source/core/directives/SelectLanguageDirective.js","/source/core/directives/SelectableDirective.js","/source/core/directives/SortableDirective.js","/source/core/directives/StopEventPropagationDirective.js","/source/core/directives/SubmitDirective.js","/source/core/directives/TabDirective.js","/source/core/directives/TagListDirective.js","/source/core/directives/ThrottleDirective.js","/source/core/directives/ValidableDirective.js","/source/core/directives/ValueDirective.js","/source/core/factories/ConfirmBox.js","/source/core/factories/Select2Configuration.js","/source/core/filters/CleanupDate.js","/source/core/filters/Map.js","/source/core/filters/PrettySecsFilter.js","/source/core/filters/ReplaceFilter.js","/source/core/filters/SumFilter.js","/source/core/filters/TextSelectFilter.js","/source/core/filters/UnsafeFilter.js","/source/core/services/DownloadService.js","/source/core/services/FilteringService.js","/source/core/services/ModalService.js","/source/core/services/NotificationsService.js","/source/core/services/PanelService.js","/source/core/services/SortService.js","/source/core/services/UtilService.js","/source/core/storages/RestangularStorage.js","/source/core/directives/FormDirectives/DisableValidationDirective.js","/source/core/directives/FormDirectives/StrictMinDirective.js","/source/plugins/leaflet/LeafletDirective.js","/source/plugins/tinymce/directives/tinymceDirective.js","/source/plugins/tinymce/plugins/evelements.js","/source/plugins/tinymce/plugins/evimage.js","/source/plugins/upload/app.js","/source/plugins/upload/directives/pictureButtonUploadDirective.js","/source/plugins/upload/directives/pictureUploadDirective.js","/source/plugins/upload/directives/uploadDirective.js"],"names":["MenuManagerProvider","findTab","stateName","res","angular","forEach","self","tabs","tab","state","selectTab","activeTab","lastTab","active","this","addTab","push","$get","$rootScope","$state","$on","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","go","FilterServiceFactory","$timeout","FilterService","filters","listeners","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","isFunction","addListener","scope","removeListener","listener","index","splice","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","options","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","restangularProvider","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","window","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","className","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","setElements","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","bind","sortChanged","filtersChanged","toggleDetailView","toggleView","activeElement","setActiveElement","page","fetch","then","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","view","routingArgs","goToViewStatePath","id","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","directive","accordionDirective","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","length","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","value","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","oldActiveElement","on","$","target","closest","ctrlKey","shiftKey","$apply","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","attrs","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$http","$document","downloadService","elm","get","download","success","data","url","notificationsService","transclude","args","title","headerTitle","noteditable","notdeletable","templateUrl","transcludeFn","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","cancel","onCancel","onDelete","result","successDeleteMessage","errorDeleteMessage","clone","transcludedScope","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","find","append","which","ngEnter","preventDefault","input","error","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","put","showTimeout","triggerHandler","applyClass","classes","promiseGetter","promise","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","message","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","key","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","idRand","String","random","$watchCollection","allSelected","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","maxElements","maxAlertMessage","onTagDeleted","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","$modal","positive","negative","open","backdrop","dataProvider","formatter","resultModifier","minimumInputLength","dataProviderFilter","idFunction","timeout","opt","ressource","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","resources","resource","results","more","tmp","shift","formatResult","container","escapeMarkup","formatSelection","initSelection","y","m","day","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","isObject","hasOwnProperty","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","service","iframe","useFullHost","createElement","display","appendChild","fullHost","location","protocol","host","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","add","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","$q","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","cache","updateLayout","containers","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","generateId","prefix","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildParameters","parameters","concat","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","number","all","getList","getFirst","getById","one","restangularizeElement","preventObjectUpdate","updateAll","patch","patchAll","create","post","deleteAll","saveAll","getNew","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters","icons","setIcons","leafletData","evLeaflet","$log","coordinates","defaultCoordinates","centerOnMarker","center","lat","markers","marker","lng","zoom","baseIcon","iconSize","shadowSize","iconAnchor","draggable","scrollWheelZoom","doubleClickZoom","isNaN","latitude","warn","longitude","edited","icon","tinyMCE","countWords","wordArray","match","countregexp","defaultOptions","menubar","statusbar","toolbar","skin","verify_html","convert_fonts_to_spans","inline","browser_spellcheck","configs","register","evTinymce","tinymceOptions","ngModel","tinyId","tinyElm","tinyInstance","getTinyInstance","fixed_toolbar_container","configKey","minChars","maxChars","minWords","maxWords","THRESHOLD","updateCounter","currentValue","minValue","maxValue","counterInfosElm","isThresholdReached","isMinLimitNotReached","isMaxLimitReached","hasFocus","placeholder","currentHtml","currentText","setPlaceholder","editor","tinymce","DOM","setContent","updatePlaceholder","newText","selection","setCursorLocation","updateView","newCount","minCount","maxCount","newHtml","newTextOverLimit","currentTextOverLimit","shorterText","substr","format","$render","focusTinymce","setup","initial","blur","elems","mode","init","destroy","execCommand","PluginManager","setElement","elementConfig","dom","node","getNode","matches","insertContent","createHTML","encode","getContent","showDialog","attributes","attribs","getAttribs","item","evelementsOptions","innerText","textContent","newAttributes","undoManager","removeAllAttribs","setAttribs","evelementsConfig","settings","evelements","nodeName","callbackAction","addButton","tooltip","shortcut","onclick","stateSelector","selector","addShortcut","getAttribute","getAttrib","alt","data-picture-id","evimage","attributesNew","addMenuItem","context","prependToContext","addCommand","buttonText","tooltipText","iconName","maxFiles","addPicture","onPictureAdded","uploading","acceptedFiles","newUpload","upload","uploadPromise","picture","pictureData","legend","flickrUrlPattern","uploadFlickrUrl","flickrForm","flickrUrl","exec","flickr-url","pictureUploaded","$setPristine","Dropzone","BASE_CONFIG","previewTemplate","previewsContainer","autoQueue","maxFilesize","uploadMultiple","parallelUploads","uploadStart","fileSuccess","fileAdded","getBytes","status","dropzone","getAcceptedFiles","bytes","file","getDropzoneElement","dz","getClickableElement","startNewUpload","computeOverallProgress","deferred","notify","off","defer","hasFileErrored","once","isUploadComplete","files","QUEUED","ADDED","UPLOADING","stopIfComplete","reject","resolve","currentUpload","removeAllFiles","filesPromises","clickable","removeFile","dropzoneFile","response","xhr","dictResponseError","dictCanceledUpload"],"mappings":"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","file":"ev-fdm.min.js","sourcesContent":["'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.elementName = elementName;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.$scope = $scope;\n            this.$scope.filters = {};\n            this.$scope.sortKey = this.defaultSortKey;\n            this.$scope.reverseSort = this.defaultReverseSort;\n\n            this.setElements(elements);\n\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', this.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(newPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', this.$scope.sortKey, this.$scope.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n\n            /*\n                Filter method that should be called from the template\n             */\n            this.$scope.filtersChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                this.toggleView('view', element);\n            }.bind(this);\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === this.elementName) {\n                    this.$scope.activeElement = null;\n                }\n                else {\n                    this.setActiveElement();\n                }\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::updated', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::created', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::deleted', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            return this.fetch(page, filters, sortKey, reverseSort).then(function(elements) {\n                this.setElements(elements);\n                return elements;\n            }.bind(this));\n        };\n\n        ListController.prototype.setElements = function(elements) {\n            this.$scope[this.elementName] = elements;\n            this.$scope.currentPage = elements.pagination.current_page;\n            this.$scope.pageCount = elements.pagination.total_pages;\n            this.$scope.totalElement = elements.pagination.total;\n\n            if(!this.$scope.selectedElements || !this.$scope[this.elementName]) {\n                this.$scope.selectedElements  = [];\n            }\n            else {\n                var selectedElementsIds = this.$scope[this.elementName].map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.$scope[this.elementName], function(element) {\n                    if (restangular.configuration.getIdFromElem(element) == $state.params[this.activeIdSelector]) {\n                        this.$scope.activeElement = element;\n                    }\n                }.bind(this));\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get = function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang = function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-md\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{active: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('[type=checkbox]')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            controller: ['$scope', function ($scope) {\n                $scope.idRand = String(Math.random());\n            }],\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"selected\"><label ng-attr-for=\"{{idRand}}\"></label></span>'\n            // template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"allSelected\" ng-click=\"toggleSelectAll()\"><label ng-attr-for=\"{{idRand}}\"></label></span>',\n            //'<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n                scope.idRand = String(Math.random());\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var self = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort),\n                    reverseSortSet = reverseSortGet.assign,\n                    sortKeyGet = $parse($attrs.sortBy),\n                    sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    self.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    self.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if(key == this.sortKey) {\n                        this.reverseSort = !this.reverseSort;\n                    }\n                    else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if(reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if(sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n\n            }]\n        };\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if(ctrl.sortKey === key){\n                        element.removeClass('no-sort');\n                        if(ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        }\n                        else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    }\n                    else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            }\n        }\n    });","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&'\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"label-btn\" ' +\n                                'ng-click=\"remove($index)\"><span class=\"icon-bin\"></span></button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred && model.evChanged);\n\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            var idFunction;\n            var timeout = 600;\n            var opt = {};\n            if (typeof dataProvider === 'object') {\n                opt = dataProvider;\n                formatter = opt.formatter;\n                resultModifier = opt.resultModifier;\n                minimumInputLength = opt.minimumInputLength;\n                key = opt.key;\n                dataProviderFilter = opt.dataProviderFilter;\n                dataProvider = opt.dataProvider;\n                timeout = opt.timeout || timeout;\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n\n                if (typeof opt.id === 'string') {\n                    idFunction = function(ressource) {return ressource[opt.id];};\n                } else if (typeof opt.id === 'function') {\n                    idFunction = opt.id;\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                },\n                id: idFunction,\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n.service('DownloadService', ['$window', '$document', function($window, $document) {\n    var iframe = null;\n    return {\n        /**\n         * Download a specific url using an iframe\n         *\n         * @param  {string}  url         the url you want to download\n         * @param  {boolean} useFullHost either you want to prepend the full host or not (without trailing slash!)\n         */\n        download: function(url, useFullHost) {\n            if(!iframe) {\n                iframe = $document[0].createElement('iframe');\n                iframe.style.display = 'none';\n                $document[0].body.appendChild(iframe);\n            }\n\n            if(useFullHost) {\n                var fullHost = $window.location.protocol + '//' + $window.location.host;\n                url = fullHost + url;\n            }\n\n            iframe.src = url;\n        }\n    };\n}]);\n","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = changesData[embedName];\n                            } else if (typeof changesData[embedName].data !== 'object' ||\n                                       Array.isArray(changesData[embedName].data)) {\n                                objectData[embedName].data = changesData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = {};\n\n            options = options || {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(this.defaultEmbed));\n            }\n            else if (this.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(this.defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed, options) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed, options) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed, options) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed, options) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed, options) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});","angular.module('ev-leaflet', ['leaflet-directive'])\n    .provider('evLeaflet', function() {\n        this.$get =function () {\n            return {icons: this.icons};\n        };\n\n        this.setIcons =function (icons) {\n            this.icons = icons;\n        };\n    })\n    .directive('evLeaflet', ['leafletData', 'evLeaflet', '$log', function (leafletData, evLeaflet, $log) {\n        return {\n            template: '<leaflet class=\"ev-leaflet\" defaults=\"defaults\" markers=\"markers\" center=\"center\"></leaflet>',\n            restrict: 'AE',\n            scope: {\n                coordinates: '=',\n                defaultCoordinates: '=?',\n                editable: '='\n            },\n            controller: function($scope) {\n\n                // Icons settings\n                var baseIcon = {\n                    iconSize:   [40, 40],\n                    shadowSize: [1, 1],\n                    iconAnchor: [1, 20]\n                };\n\n                var icons = evLeaflet.icons;\n\n                if ('default' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.default);\n                }\n                if ('draggable' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.draggable);\n                }\n\n\n                $scope.defaults = {\n                    scrollWheelZoom: false,\n                    doubleClickZoom: false\n                };\n\n                // Setting a marker in location\n                $scope.markers = {\n                    marker: {\n                        focus: true\n                    }\n                };\n\n                // Double binding between coordinates and marker's position\n                $scope.$watch('coordinates.latitude', function(lat) {\n                    if (isNaN(lat) || lat == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.latitude != null) {\n                            lat = $scope.defaultCoordinates.latitude;\n                        } else {\n                            lat = 0;\n                        }\n                        $log.warn('ev-leaflet: latitude is not a number');\n                    }\n                    $scope.markers.marker.lat = lat;\n                    centerOnMarker();\n                });\n\n                $scope.$watch('coordinates.longitude', function(lng) {\n                    if (isNaN(lng) || lng == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.longitude != null) {\n                            lng = $scope.defaultCoordinates.longitude;\n                        } else {\n                            lng = 0;\n                        }\n                        $log.warn('ev-leaflet: longitude is not a number');\n                    }\n                    $scope.markers.marker.lng = lng;\n                    centerOnMarker();\n                });\n\n                centerOnMarker();\n\n\n                $scope.$watch('markers.marker.lat', function(lat) {\n                    if (lat != null && $scope.editable) {\n                        $scope.coordinates.latitude = lat;\n                    }\n                });\n\n                $scope.$watch('markers.marker.lng', function(lng) {\n                    if (lng != null && $scope.editable) {\n                        $scope.coordinates.longitude = lng;\n                    }\n                });\n\n                // Setting map center\n                function centerOnMarker() {\n                    if (!$scope.center) {\n                        $scope.center = {\n                            lat: $scope.markers.marker.lat,\n                            lng: $scope.markers.marker.lng,\n                            zoom: 8\n                        };\n                    } else {\n                        $scope.center.lat = $scope.markers.marker.lat;\n                        $scope.center.lng = $scope.markers.marker.lng;\n                    }\n                }\n\n                $scope.$watch('editable', function () {\n                    var edited = $scope.editable;\n                    $scope.markers.marker.icon = edited ? icons.draggable : icons['default'];\n                    $scope.markers.marker.draggable = edited;\n                });\n            }\n        };\n    }]);\n","/* jshint camelcase: false */\n/* global tinymce */\n/**\n * Directive to override some settings in tinymce\n * Usage:\n * <ev-tinymce\n *     min-chars=\"1000\"                        -- minChars this input accept (default: none)\n *     max-chars=\"1000\"                        -- maxChars this input accept (default: unlimited)\n *     min-words=\"1000\"                        -- minWords this input accept (default: none)\n *     max-words=\"1000\"                        -- maxWords this input accept (default: unlimited)\n *     ng-model=\"message.body\"                 -- ng-model\n *     tinymce-options=\"tinymceOptions\"        -- override default options with yours (object expected)\n *  ></ev-tinymce>\n */\n(function (tinyMCE) {\n    var defaultOptions = {\n        menubar: false,\n        statusbar: false,\n        //resize: false,\n        toolbar: 'bold italic underline | alignleft aligncenter alignright | bullist',\n        skin: false,\n        'verify_html': true,\n        'convert_fonts_to_spans': true,\n        //'content_css': '/bower_components/ev-fdm/dist/css/ev-fdm.min.css',\n        inline: true,\n        browser_spellcheck : true,\n\n        // We choose to have a restrictive approach here.\n        // The aim is to output the cleanest html possible.\n        // See http://www.tinymce.com/wiki.php/Configuration:valid_elements\n        // 'valid_elements':\n        //     'strong,em' +\n        //     'span[!style<text-decoration: underline;],' +\n        //     '@[style<text-align: right;?text-align: left;?text-align: center;],' +\n        //     'p,!div,ul,li'\n    };\n\n    // u2019 and x27 : apostrophes\n    // u00C0-\\u1FFF : accents\n    var countregexp = /[\\w\\u2019\\x27\\-\\u00C0-\\u1FFF]+/g;\n    function countWords(text) {\n        var wordArray = text.match(countregexp);\n        if (wordArray) {\n            return wordArray.length;\n        }\n        return 0;\n    }\n\n\nangular.module('ev-tinymce', [])\n    .provider('evTinymce', function() {\n        var configs = {};\n\n        this.register = function(name, value) {\n            if (configs.hasOwnProperty(name)) {\n                throw new Error('A config named \"' + name + '\" was already registered');\n            }\n            configs[name] = value;\n        };\n\n        this.get = function(name) {\n            return configs[name];\n        };\n\n        this.$get = function() { return configs; };\n    })\n    .directive('evTinymce', ['$timeout', 'evTinymce', function($timeout, evTinymce) {\n        var generatedIds = 0;\n        return {\n            template: '<div class=\"tiny-mce-wrapper form-control\">'\n                + '<div class=\"ev-placeholder-container\"></div>'\n                + '<div class=\"ev-tinymce-content\"></div>'\n                + '<div ng-click=\"focusTinymce()\" class=\"ev-tinymce-toolbar\"></div>'\n                + '<div class=\"counter-info\"></div>'\n                + '</div>',\n            restrict: 'AE',\n            replace: true,\n            require: '?ngModel',\n\n            scope: {\n                tinymceOptions: '=',\n            },\n\n            link: function (scope, elm, attrs, ngModel) {\n                var tinyId = 'uiTinymce' + generatedIds++;\n                var tinyElm = elm.find('.ev-tinymce-content');\n                tinyElm.attr('id', tinyId);\n                elm.find('.ev-tinymce-toolbar').attr('id', tinyId + 'toolbar');\n\n                var tinyInstance;\n                var getTinyInstance = function() {\n                    if (!tinyInstance) {\n                        tinyInstance = tinyMCE.get(tinyId);\n                    }\n                    return tinyInstance;\n                };\n                var options = angular.extend({\n                    fixed_toolbar_container: '#' + tinyId + 'toolbar',\n                }, defaultOptions, evTinymce[attrs.configKey], scope.tinymceOptions);\n\n                // /**\n                //  * This part is used for the max-chars attribute.\n                //  * It allows us to easily limit the number of characters typed in the editor\n                //  */\n                var minChars = options.minChars = attrs.minChars || options.minChars || null;\n                var maxChars = options.maxChars = attrs.maxChars || options.maxChars || null;\n                var minWords = options.minWords = attrs.minWords || options.minWords || null;\n                var maxWords = options.maxWords = attrs.maxWords || options.maxWords || null;\n                // // We set the max char warning when the THRESHOLD is reached\n                // // Here, it's 85% of max chars\n                var THRESHOLD = 85;\n\n                // /**\n                //  * Update the information area about the textEditor state (maxChars, ..)\n                //  */\n                var updateCounter = function(currentValue, minValue, maxValue) {\n                    var counterInfosElm = elm.parent().find('.counter-info');\n                    counterInfosElm.text(currentValue + (maxValue ? ' / ' + maxValue : ''));\n\n                    if (maxValue) {\n                        var isThresholdReached = ((currentValue / maxValue) * 100) > THRESHOLD;\n                        counterInfosElm.toggleClass('counter-warning', isThresholdReached);\n                    }\n\n                    var isMinLimitNotReached = minValue && currentValue < minValue;\n                    var isMaxLimitReached = maxValue && currentValue >= maxValue;\n                    counterInfosElm.toggleClass('counter-reached', !!(isMinLimitNotReached || isMaxLimitReached));\n                };\n\n                var hasFocus = false;\n                var placeholder = false;\n                var currentHtml = '';\n                var currentText = '';\n\n                var setPlaceholder = function() {\n                    var editor = getTinyInstance();\n                    tinymce.DOM.addClass(tinyElm, 'placeholder-light');\n                    editor.setContent(attrs.placeholder);\n                };\n\n                var updatePlaceholder = function(newText) {\n                    var editor = getTinyInstance();\n                    if (hasFocus) {\n                        if (currentText === attrs.placeholder) {\n                            editor.setContent('');\n                            editor.selection.setCursorLocation();\n                            tinymce.DOM.removeClass(tinyElm, 'placeholder-light');\n                        }\n                    } else {\n                        if (newText !== attrs.placeholder) {\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                var updateView = function () {\n                    var editor = getTinyInstance();\n                    var newHtml = tinyElm.html();\n                    var newText = tinyElm.text();\n                    var newTextOverLimit = false, currentTextOverLimit = false;\n                    var newCount, minCount, maxCount;\n\n                    if (placeholder && newText === attrs.placeholder) {\n                        currentHtml = newHtml;\n                        currentText = newText;\n                        if (maxChars || minChars || maxWords || minWords) {\n                            newCount = 0;\n                        }\n                    } else {\n                        if (maxChars || minChars) {\n                            newCount = newText.length;\n                        } else if (maxWords || minWords) {\n                            newCount = countWords(newText);\n                        }\n\n                        if (minChars) {\n                            minCount = minChars;\n                        } else if (minWords) {\n                            minCount = minWords;\n                        }\n\n                        if (maxChars) {\n                            maxCount = maxChars;\n                            newTextOverLimit = newCount > maxChars;\n                        } else if (maxWords) {\n                            maxCount = maxWords;\n                            newTextOverLimit = newCount > maxWords;\n                        }\n\n                        /*\n                         * Specific case where the old and new text are both over the limit of max chars.\n                         * This case can occur on the first initialization, if data from DB are over the\n                         * limit.\n                         * For now, we substring the content (but that break the html and everything..)\n                         */\n                        if (newTextOverLimit && (currentTextOverLimit || !currentText.length)) {\n                            var shorterText = newText.substr(0, maxChars);\n                            // be careful, setContent call this method again\n                            editor.setContent(shorterText, { format: 'text' });\n                        } else if (newTextOverLimit) {\n                            editor.setContent(currentHtml); // be careful, setContent call this method again\n                        } else {\n                            $timeout(function() {\n                                ngModel.$setViewValue(newText === '' || newText === attrs.placeholder ? '' : newHtml);\n                            });\n                            currentHtml = newHtml;\n                            currentText = newText;\n                        }\n                    }\n\n                    // newCount not null nor undefined\n                    if (newCount != null) {\n                        updateCounter(newCount, minCount, maxCount);\n                    }\n\n\n                    placeholder = newText === '' || newText === attrs.placeholder;\n\n                    if (placeholder && attrs.placeholder) {\n                        updatePlaceholder(newText);\n                    }\n                };\n\n                ngModel.$render = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        if (ngModel.$viewValue) {\n                            editor.setContent(ngModel.$viewValue);\n                        } else if (attrs.placeholder) {\n                            placeholder = true;\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                scope.focusTinymce = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.focus();\n                    }\n                };\n\n                /* Options */\n\n                var setup = function(editor) {\n                    editor.on('init', function() {\n                        if (ngModel.$viewValue) {\n                            ngModel.$render();\n                        }\n                    });\n                    // Update model on button click\n                    editor.on('ExecCommand', function (e) {\n                        updateView();\n                    });\n                    // Update model on keypress\n                    editor.on('KeyUp', function (e) {\n                        updateView();\n                    });\n                    // Update model on change, i.e. copy/pasted text, plugins altering content\n                    editor.on('SetContent', function (e) {\n                        if (!e.initial) {\n                            updateView();\n                        }\n                    });\n                    editor.on('blur', function(e) {\n                        if (hasFocus) {\n                            hasFocus = false;\n                            updateView();\n                        }\n                        tinyElm.blur();\n                    });\n\n                    editor.on('focus', function (e) {\n                        if (!hasFocus) {\n                            hasFocus = true;\n                            updateView();\n                        }\n                    });\n                };\n\n                // extend options with initial uiTinymceConfig and options from directive attribute value\n                options.setup = setup;\n                options.elems = tinyId;\n                options.mode = 'exact';\n\n                tinyMCE.init(options);\n\n                scope.$on('$destroy', function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.destroy();\n                    }\n                });\n\n                tinyMCE.execCommand('mceToggleEditor', false, tinyId);\n            },\n        };\n    }]);\n}) (window.tinyMCE);\n","/* global tinymce */\n\ntinymce.PluginManager.add('evelements', function(editor) {\n    var evelementsConfig = editor.settings.evelements;\n    var evelementsOptions = editor.settings.evelementsOptions;\n\n    function setElement(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            if (node && elementConfig.matches(node)) {\n                dom.remove(node, true);\n            } else {\n                editor.insertContent(\n                    dom.createHTML(\n                        elementConfig.name,\n                        {},\n                        dom.encode(editor.selection.getContent({ format: 'text' }))\n                    )\n                );\n            }\n        };\n    }\n\n    function showDialog(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            var attributes = null;\n\n            if (node && elementConfig.matches(node)) {\n                attributes = {};\n                var attribs = dom.getAttribs(node);\n                for (var i = 0; i < attribs.length; ++i) {\n                    var item = attribs[i];\n                    attributes[item.name] = item.value;\n                }\n            } else {\n                node = null;\n            }\n\n            var key = elementConfig.key || elementConfig.name;\n            var callback = evelementsOptions[key] && evelementsOptions[key].callback;\n            var text = node ? ('innerText' in node ? node.innerText : node.textContent)\n                                 : editor.selection.getContent({ format: 'text' });\n            (callback || elementConfig.callback)(attributes, function(newAttributes, text) {\n                if (node) {\n                    editor.focus();\n                    if (!newAttributes && !text) {\n                        dom.remove(node, true);\n                        editor.undoManager.add();\n                        return;\n                    }\n                    dom.removeAllAttribs(node);\n                    dom.setAttribs(node, newAttributes);\n                    if (text) {\n                        if ('innerText' in node) {\n                            node.innerText = text;\n                        } else {\n                            node.textContent = text;\n                        }\n                    }\n                    editor.selection.select(node);\n                    editor.undoManager.add();\n                } else {\n                    editor.focus();\n                    node = dom.createHTML(elementConfig.name, newAttributes, text && dom.encode(text));\n                    editor.selection.setContent(node);\n                    editor.undoManager.add();\n                }\n            }, text, evelementsOptions);\n        };\n    }\n\n    if (typeof evelementsConfig === 'string') {\n        evelementsConfig = evelementsConfig.split(' ');\n    }\n\n    evelementsConfig.forEach(function(elementConfig) {\n        if (typeof elementConfig === 'string') {\n            elementConfig = {\n                name: elementConfig\n            };\n        }\n\n        elementConfig.matches = elementConfig.matches || function(node) {\n            return node.nodeName.toLowerCase() === elementConfig.name;\n        };\n\n        var callbackAction = elementConfig.callback ? showDialog(elementConfig) : setElement(elementConfig);\n\n        editor.addButton('ev' + (elementConfig.key || elementConfig.name), {\n            text: elementConfig.title !== undefined ? elementConfig.title : elementConfig.name,\n            icon: elementConfig.icon,\n            tooltip: elementConfig.tooltip || ('Set this text as ' + elementConfig.name),\n            shortcut: elementConfig.shortcut,\n            onclick: callbackAction,\n            stateSelector: elementConfig.selector || elementConfig.name,\n        });\n\n        if (elementConfig.shortcut) {\n            editor.addShortcut(elementConfig.shortcut, '', callbackAction);\n        }\n    });\n});\n","/* global tinymce, console */\n\ntinymce.PluginManager.add('evimage', function(editor) {\n    console.log('evimage is deprecated: use evelements');\n    function showDialog() {\n        var dom = editor.dom;\n        var node = editor.selection.getNode();\n        var attributes = null;\n\n        if (node && node.getAttribute('data-picture-id')) {\n            attributes = {\n                src: dom.getAttrib(node, 'src'),\n                alt: dom.getAttrib(node, 'alt'),\n                'class': dom.getAttrib(node, 'class'),\n                'data-picture-id': dom.getAttrib(node, 'data-picture-id')\n            };\n        }\n\n        editor.settings.evimage(attributes, function(attributesNew) {\n            if (attributes) {\n                dom.removeAllAttribs(node);\n                dom.setAttribs(node, attributesNew);\n            } else {\n                editor.selection.setContent(editor.dom.createHTML('img', attributesNew));\n            }\n        });\n    }\n\n    editor.addButton('evimage', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onclick: showDialog,\n        stateSelector: 'img[data-picture-id]:not([data-mce-object],[data-mce-placeholder])'\n    });\n\n    editor.addMenuItem('evimage', {\n        icon: 'image',\n        text: 'Insert image',\n        onclick: showDialog,\n        context: 'insert',\n        prependToContext: true\n    });\n\n    editor.addCommand('mceImage', showDialog);\n});\n","(function () {\n    'use strict';\n    angular.module('ev-upload', ['ev-fdm']);\n}) ();","; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureButtonUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-button-upload\n    =================\n    Hi! I'm a directive used for uploading pictures but I'm just a button.\n    If you want a more advanced one, you can use the evPictureUpload\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `pictureSuccess`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                pictures: '=',\n                buttonText: '@',\n                tooltipText: '@',\n                iconName: '@',\n                url: '@',\n                language: '=',\n                maxFiles: '@',\n                addPicture: '&',\n                onPictureAdded: '&'\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"addPicture({picture: file})\"' +\n                'upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<button type=\"button\" tabIndex=\"-1\" class=\"btn btn-tertiary btn-env ev-upload-clickable\"' +\n                            'tooltip=\"{{tooltipText}}\"' +\n                            'tooltip-placement=\"top\">' +\n                        '<span class=\"icon {{iconName}}\"></span> ' +\n                       '{{buttonText}}' +\n                    '</button>' +\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Transfert en cours\"| i18n}} </div>' +\n                    '<p> {{upload.done}} / {{upload.total}} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope, elem, attrs) {\n                $scope.uploading = false;\n\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url,\n                    maxFiles: $scope.maxFiles || 100\n                };\n\n                $scope.pictures = $scope.pictures || [];\n\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = {\n                        done: 0,\n                        total: '?'\n                    };\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success () {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été transférées avec succès'\n                                });\n                            },\n                            function error () {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.WARNING,\n                                    text: 'Certaines images n\\'ont pas pu être transférées.'\n                                });\n                            },\n                            function onNotify (progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                // This allow us to override the add picture\n                if(!attrs.addPicture) {\n                    $scope.addPicture = function(picture) {\n                        picture = picture.picture;\n                        var pictureData = picture.data[0];\n                        if($scope.language) {\n                            if (Array.isArray(pictureData.legend)) {\n                                pictureData.legend = {};\n                            }\n                            if (!pictureData.legend[$scope.language]) {\n                                pictureData.legend[$scope.language] = { name: '' };\n                            }\n                        }\n\n                        $scope.pictures.unshift(pictureData);\n                        $scope.onPictureAdded();\n                    };\n                }\n            }\n        };\n}]);\n}) ();\n","/* jshint maxlen: 200 */\n; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-upload\n    =================\n    Hi! I'm a directive used for uploading pictures. I'm based on the `ev-upload` directive. But I can also\n    manage flickr uploads !\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `addPicture`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                addPicture: '=',\n                url: '@',\n                language: '='\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"pictureUploaded(file)\"' +\n                'class=\"ev-picture-upload\" upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\">{{ \"Faites glisser vos images ici\" | i18n }}</div>' +\n                    '<table style=\"width:100%\"><tr><td style=\"width:114px\">'+\n                            '<button type=\"button\" tabIndex=\"-1\" class=\"btn ev-upload-clickable\">' +\n                                '{{ \"Importer...\" | i18n}}' +\n                            '</button>' +\n                        '</td>'+\n                        '<td style=\"width:30px´; line-height: 36px;\">'+\n                            '{{ \"ou\" | i18n }}' +\n                        '</td>'+\n                        '<td>'+\n                            '<ng-form novalidate name=\"flickr\" ' +\n                                'ng-class=\"{\\'has-error\\': flickr.$dirty && flickr.$invalid}\">' +\n                                '<input name=\"fUrl\" placeholder=\"{{\\'Lien Flickr\\' | i18n}}\" ' +\n                                    'ng-model=\"$parent.flickrUrl\" ng-pattern=\"flickrUrlPattern\" ' +\n                                    'class=\"form-control\" ng-change=\"uploadFlickrUrl(flickr)\"/>' +\n                                '<div ng-show=\"flickr.fUrl.$dirty && flickr.fUrl.$invalid\">' +\n                                    '<p class=\"control-label\" for=\"fUrl\" data-ng-show=\"flickr.fUrl.$error.pattern\">'+\n                                        '{{ \"L\\'url doit être une photo flickr\" | i18n}}</p>' +\n                                '</div>' +\n                            '</ng-form>' +\n                        '</td></tr></table>'+\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Upload en cours\"| i18n}} </div>' +\n                    '<div class=\"spinner\"></div>' +\n                    '<p> {{upload.done}} / {{upload.total}} {{ \"photo(s) uploadée(s)\" | i18n }} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope) {\n                $scope.flickrUrlPattern = /^(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+.*$/;\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url\n                };\n            },\n            controller: function ($scope) {\n                $scope.uploading = false;\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n                $scope.uploadFlickrUrl = function (flickrForm) {\n                    /* Trailing the ends in order to have a https://www.flickr.com/photos/{user-id}/{photo-id} url\n                        Warning: `.*` is greedy, so an address like:\n                            https://www.flickr.com/photos/{user-id}/{photo-id}/blabla/1512\n                        will not be parsed nicely\n                     */\n                    if (!flickrForm.$valid || !$scope.flickrUrl) {\n                        return;\n                    }\n                    var flickrUrl = /(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+/ .exec($scope.flickrUrl)[0];\n                    var uploadPromise = $http.post($scope.url, {'flickr-url': flickrUrl});\n                    uploadPromise\n                        .success(function (pictureUploaded) {\n                            var picture = pictureUploaded.data[0];\n                            $scope.addPicture(picture);\n                        })\n                        .success(function () {\n                            flickrForm.$setPristine();\n                            $scope.flickrUrl = \"\";\n                        });\n\n                    $scope.newUpload(uploadPromise);\n                    $scope.upload = {\n                        done: 0,\n                        total: 1,\n                        progress: 0\n                    };\n                };\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = null;\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success () {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été uploadées avec succès'\n                                });\n                            },\n                            function error () {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.WARNING,\n                                    text: 'Certaines images n\\'ont pas pu être uploadées.'\n                                });\n                            },\n                            function onNotify (progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                $scope.pictureUploaded = function(pictureUploaded) {\n                    var picture = pictureUploaded.data[0];\n                    $scope.addPicture(picture);\n                };\n            }\n        };\n}]);\n}) ();\n","/* global Dropzone */\n; (function (Dropzone) {\n    'use strict';\n    angular.module('ev-upload')\n        .directive('evUpload', ['$log', '$q', '$timeout', function ($log, $q, $timeout) {\n\n    /*  ev-upload\n        =========\n        Hi! I'm a directive used for uploading files.\n\n        You can give me three callback: `uploadStart`, `fileSuccess` and `fileAdded`\n        - `uploadStart` will be called when a new multiple upload start (for instance, when the user dropped some files\n            on the dropzone). It will be call with an argument: the promise for the status of the whole upload.\n        - `fileSuccess` will be called each time a file has successfully been uploaded, with the data returned by the\n            server.\n        - `fileAdded` will be called each time a file is added to the queue. It will be called with 3 arguments :\n            - dropzoneFile : the Dropzone file being uploaded\n            - promise : the promise associated with the file\n            - cancel : a function that can be called to cancel the upload of the file.\n\n        Clickable Element : you can define a clickable element inside the directive with the\n                            class '.ev-upload-clickable'\n\n        Dropzone Element : you can define a clickable element inside the directive with the class '.ev-upload-dropzone'\n                           If the class is not present, it will use the root element.\n\n        My inner heart is powered by Dropzone. You can pass any settings to it through my `settings` parameter.\n        Consequently, you can do whatever you want. Be wise :)\n\n        ** Careful, if you change the settings parameters, all the current upload will be canceled, as a new dropzone\n        object will be created. **\n    */\n\n        var BASE_CONFIG = {\n            previewTemplate: false,\n            previewsContainer: false,\n            autoQueue: true,\n            maxFilesize: 12,\n            maxFiles: 100,\n\n            uploadMultiple: false,\n            parallelUploads: 3\n        };\n\n            return {\n                transclude: true,\n                restrict: 'EA',\n                replace: true,\n                scope: {\n                    settings: '=',\n                    uploadStart: '&upload',\n                    fileSuccess: '&',\n                    fileAdded: '&'\n                },\n                template: '<div class=\"ev-upload\"><div ng-transclude> </div></div>',\n                link: function ($scope, elem, attrs) {\n\n                    $scope.fileSuccess = $scope.fileSuccess || function() {};\n                    $scope.fileAdded = $scope.fileAdded || function() {};\n\n                    var dropzone = null;\n                    var progress = null;\n\n                    var filesPromises = {};\n                    function getBytes (status) {\n                        return dropzone.getAcceptedFiles().reduce(function (bytes, file) {\n                            return bytes + file.upload[status];\n                        }, 0);\n                    }\n\n                    function getDropzoneElement() {\n                        var dz = elem.find('.ev-upload-dropzone');\n                        if (dz.length === 0) {\n                            dz = elem;\n                        }\n                        dz.addClass(\"dz-default\");\n                        dz.addClass(\"dz-message\");\n                        return dz[0];\n                    }\n\n                    function getClickableElement() {\n                        return elem.find('.ev-upload-clickable')[0];\n                    }\n\n                    $scope.$watch('settings', function (settings) {\n                        if (!settings.url) {\n                            $log.warn('No url provided to the upload zone');\n                            return;\n                        }\n                        if (dropzone !== null) {\n                            dropzone.destroy();\n                        }\n                        settings = angular.extend(BASE_CONFIG, settings);\n                        dropzone = new Dropzone(\n                            getDropzoneElement(),\n                            angular.extend({clickable: getClickableElement()},settings)\n                        );\n                        // the promise for the whole upload\n\n                        $scope.currentUpload = null;\n\n                        // When a file is added to the queue\n                        dropzone.on('addedfile', function (file) {\n                            if ($scope.currentUpload === null) {\n                                $scope.$apply(startNewUpload);\n                            }\n                            var deferred = $q.defer();\n                            filesPromises[file.name] = deferred;\n                            var cancel = function () {\n                                dropzone.removeFile(file);\n                            };\n                            $scope.$apply(function($scope) {\n                                $scope.fileAdded({\n                                    dropzoneFile: file,\n                                    promise: deferred.promise,\n                                    cancel: cancel\n                                });\n                            });\n                        });\n\n                        dropzone.on('uploadprogress', function (file, progress) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].notify(progress);\n                            });\n                        });\n\n                        dropzone.on('success', function (file, response) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].resolve({file: response});\n                                $scope.fileSuccess({file: response});\n                            });\n                        });\n\n                        dropzone.on('error', function (file, response, xhr) {\n                            if (!response && xhr.status === 500) {\n                                response = settings.dictResponseError || 'Unexpected error during the upload';\n                            }\n                            if (response === 'Upload canceled.') {\n                                response = settings.dictCanceledUpload || 'The upload has been canceled';\n                            }\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].reject(response);\n                            });\n                        });\n\n                        dropzone.on('canceled', function (file) {\n                            var deferred = filesPromises[file.name];\n                            $scope.$apply(function ($scope) {\n                                deferred.reject(settings.dictCanceledUpload || 'The upload has been canceled');\n                            });\n                        });\n\n                        dropzone.on('complete', function (file) {\n                            if(angular.isDefined(progress)){\n                                progress.done += 1;\n                            }\n                        });\n\n                    }, true);\n\n                    // Create a new overall upload object\n                    function startNewUpload($scope) {\n                        progress = {\n                            done: 0,\n                            progress: 0\n                        };\n\n                        var computeOverallProgress = function () {\n                            progress.progress = 100 * getBytes('bytesSent') / getBytes('total');\n                            progress.total = dropzone.getAcceptedFiles().length;\n                            upload.deferred.notify(progress);\n                        };\n\n                        // De-register all events\n                        dropzone\n                            .off('uploadprogress', computeOverallProgress)\n                            .off('maxfilesexceeded');\n\n                        // upload object, encapsulate the state of the current (multi file) upload\n                        var upload = {\n                            deferred: $q.defer(),\n                            hasFileErrored: false,\n                        };\n                        computeOverallProgress();\n\n                        dropzone.once('error', function() {\n                            upload.hasFileErrored = true;\n                        });\n\n\n                        dropzone.on('uploadprogress', computeOverallProgress);\n\n                        var isUploadComplete = function () {\n                            return !dropzone.files.filter(function (file) {\n                                return file.status === Dropzone.QUEUED ||\n                                file.status === Dropzone.ADDED ||\n                                file.status === Dropzone.UPLOADING;\n                            }).length;\n                        };\n\n                        var stopIfComplete = function () {\n                            $scope.$apply(function ($scope) {\n                                $timeout(function () {\n                                    if ( !isUploadComplete() ) { return; }\n                                    dropzone.off('complete', stopIfComplete);\n                                    $timeout(function () {\n                                        if (upload.hasFileErrored) {\n                                            upload.deferred.reject('filehaserrored');\n                                        } else {\n                                            upload.deferred.resolve();\n                                        }\n                                    });\n                                });\n                            });\n                        };\n\n                        dropzone.on('maxfilesexceeded', function() {\n                            upload.deferred.reject('maxfilesexceeded');\n                        });\n                        dropzone.on('complete', stopIfComplete);\n\n                        $scope.currentUpload = upload.deferred.promise;\n                        $scope.uploadStart({promise: upload.deferred.promise});\n                        $scope.currentUpload.finally(function () {\n                            dropzone.removeAllFiles(true);\n                            $scope.currentUpload = null;\n                        });\n\n                    }\n\n                    $scope.$on('$destroy', function () {\n                        dropzone.destroy();\n                    });\n                }\n            };\n        }]);\n}(Dropzone));"],"sourceRoot":"/source/"}