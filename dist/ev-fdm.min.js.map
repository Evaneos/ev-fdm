{"version":3,"sources":["/source/core/directives/EvMenuDirective.js","/source/core/factories/FilterServiceFactory.js","/source/core/storages/AjaxStorage.js","/source/core/storages/Storage.js","/source/core/app.js","/source/core/animations/PictureListAnimation.js","/source/core/animations/TagListAnimation.js","/source/core/controllers/ListController.js","/source/core/controllers/NotificationsController.js","/source/core/controllers/SearchController.js","/source/core/directives/AccordionDirective.js","/source/core/directives/ActivableDirective.js","/source/core/directives/ClearableDirective.js","/source/core/directives/DatePickerDirective.js","/source/core/directives/DownloadDirective.js","/source/core/directives/EditSection.js","/source/core/directives/EnterDirective.js","/source/core/directives/ErrorMessageDirective.js","/source/core/directives/ErrorsDirective.js","/source/core/directives/FlagDirective.js","/source/core/directives/FocusDirective.js","/source/core/directives/FormGroupDirective.js","/source/core/directives/LinkDisabledDirective.js","/source/core/directives/LoadingDotsDirective.js","/source/core/directives/MouseFollowerDirective.js","/source/core/directives/PaginationDirective.js","/source/core/directives/PictureListDirective.js","/source/core/directives/PopoverExtendDirective.js","/source/core/directives/PromiseDirective.js","/source/core/directives/PromiseProgressDirective.js","/source/core/directives/ResizableColumnDirective.js","/source/core/directives/ResolvingStateDirective.js","/source/core/directives/ResponsiveViewportDirective.js","/source/core/directives/SelectLanguageDirective.js","/source/core/directives/SelectableDirective.js","/source/core/directives/SortableDirective.js","/source/core/directives/StopEventPropagationDirective.js","/source/core/directives/SubmitDirective.js","/source/core/directives/TabDirective.js","/source/core/directives/TagListDirective.js","/source/core/directives/ThrottleDirective.js","/source/core/directives/ValidableDirective.js","/source/core/directives/ValueDirective.js","/source/core/factories/ConfirmBox.js","/source/core/factories/Select2Configuration.js","/source/core/filters/CleanupDate.js","/source/core/filters/CssifyFilter.js","/source/core/filters/Map.js","/source/core/filters/PrettySecsFilter.js","/source/core/filters/ReplaceFilter.js","/source/core/filters/SumFilter.js","/source/core/filters/TextSelectFilter.js","/source/core/filters/UnsafeFilter.js","/source/core/services/DownloadService.js","/source/core/services/FilteringService.js","/source/core/services/ModalService.js","/source/core/services/NotificationsService.js","/source/core/services/PanelService.js","/source/core/services/SortService.js","/source/core/services/UtilService.js","/source/core/storages/AbstractAutocompleteStorage.js","/source/core/storages/RestangularStorage.js","/source/core/storages/localstorageService.js","/source/core/directives/FormDirectives/DisableValidationDirective.js","/source/core/directives/FormDirectives/StrictMinDirective.js","/source/plugins/leaflet/LeafletDirective.js","/source/plugins/tinymce/directives/tinymceDirective.js","/source/plugins/tinymce/plugins/evelements.js","/source/plugins/tinymce/plugins/evimage.js","/source/plugins/upload/app.js","/source/plugins/upload/directives/pictureButtonUploadDirective.js","/source/plugins/upload/directives/pictureUploadDirective.js","/source/plugins/upload/directives/uploadDirective.js"],"names":["MenuManagerProvider","findTab","stateName","res","angular","forEach","self","tabs","tab","state","selectTab","activeTab","lastTab","active","this","addTab","push","$get","$rootScope","$on","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","$state","go","FilterServiceFactory","$timeout","FilterService","filters","listeners","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","isFunction","addListener","scope","removeListener","listener","index","splice","AjaxStorage","$http","$q","$cacheFactory","utilService","$log","launchRequest","options","cache","key","JSON","stringify","cached","httpCache","get","id","generateId","requestConfig","url","method","responseType","headers","Content-Type","data","promise","then","response","success","result","warn","error","errors","authenticated","window","location","href","reject","put","Storage","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","setElements","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","bind","sortChanged","filtersChanged","toggleDetailView","toggleView","activeElement","setActiveElement","page","fetch","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","view","routingArgs","goToViewStatePath","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","directive","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","length","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","value","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","on","$","target","closest","ctrlKey","shiftKey","$apply","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","attrs","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$document","downloadService","elm","download","notificationsService","transclude","args","title","headerTitle","noteditable","notdeletable","templateUrl","transcludeFn","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","cancel","onCancel","onDelete","successDeleteMessage","errorDeleteMessage","clone","transcludedScope","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","find","append","which","ngEnter","preventDefault","input","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","showTimeout","triggerHandler","applyClass","classes","promiseGetter","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","message","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","$watchCollection","allSelected","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","className","maxElements","maxAlertMessage","onTagDeleted","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","$modal","positive","negative","open","backdrop","dataProvider","formatter","resultModifier","minimumInputLength","dataProviderFilter","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","resources","resource","results","more","tmp","shift","formatResult","formatSelection","initSelection","y","m","day","possibilities","prop","hasOwnProperty","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","isObject","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","service","iframe","createElement","display","appendChild","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","add","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","updateLayout","containers","container","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","prefix","random","AbstractAutocompleteStorage","AbstractStorage","generateAutocompleteConfig","searchCallback","matchingCallback","minLength","me","q","searchParam","toUpperCase","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildParameters","parameters","concat","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","number","all","getList","getFirst","getById","one","restangularizeElement","updateAll","patch","preventObjectUpdate","patchAll","create","post","deleteAll","saveAll","getNew","angularLocalStorage","constant","expiry","path","setItem","removeItem","cookie","notify","substr","browserSupportsLocalStorage","addToLocalStorage","newvalue","storageType","addToCookies","toJson","localStorage","getFromLocalStorage","getFromCookies","item","getItem","charAt","fromJson","removeFromLocalStorage","removeFromCookies","getKeysForLocalStorage","prefixLength","Description","clearAllFromLocalStorage","clearAllFromCookies","browserSupportsCookies","cookieEnabled","expiryDate","Date","setTime","getTime","toGMTString","encodeURIComponent","cookies","thisCookie","decodeURIComponent","isSupported","set","clearAll","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters","icons","setIcons","leafletData","evLeaflet","coordinates","defaultCoordinates","centerOnMarker","center","lat","markers","marker","lng","zoom","baseIcon","iconSize","shadowSize","iconAnchor","draggable","scrollWheelZoom","doubleClickZoom","isNaN","latitude","longitude","edited","icon","tinyMCE","defaultOptions","menubar","statusbar","toolbar","skin","verify_html","convert_fonts_to_spans","inline","browser_spellcheck","configs","register","evTinymce","tinymceOptions","ngModel","tinyId","tinyElm","tinyInstance","getTinyInstance","fixed_toolbar_container","configKey","maxChars","THRESHOLD","updateCharCounter","currentChars","maxCharInfosElm","isThresholdReached","isMaxLimitReached","hasFocus","placeholder","currentHtml","currentText","setPlaceholder","editor","tinymce","DOM","setContent","updatePlaceholder","newText","selection","setCursorLocation","updateView","newHtml","newTextOverLimit","currentTextOverLimit","shorterText","format","$render","focusTinymce","setup","initial","blur","elems","mode","init","destroy","execCommand","PluginManager","setElement","elementConfig","dom","node","getNode","matches","insertContent","createHTML","encode","getContent","showDialog","attributes","attribs","getAttribs","evelementsOptions","innerText","textContent","newAttributes","undoManager","removeAllAttribs","setAttribs","evelementsConfig","settings","evelements","nodeName","callbackAction","addButton","tooltip","shortcut","onclick","stateSelector","selector","addShortcut","getAttribute","getAttrib","alt","data-picture-id","evimage","attributesNew","addMenuItem","context","prependToContext","addCommand","buttonText","tooltipText","iconName","maxFiles","addPicture","onPictureAdded","uploading","acceptedFiles","newUpload","upload","uploadPromise","picture","pictureData","legend","flickrUrlPattern","uploadFlickrUrl","flickrForm","flickrUrl","exec","flickr-url","pictureUploaded","$setPristine","Dropzone","BASE_CONFIG","previewTemplate","previewsContainer","autoQueue","maxFilesize","uploadMultiple","parallelUploads","uploadStart","fileSuccess","fileAdded","getBytes","status","dropzone","getAcceptedFiles","bytes","file","getDropzoneElement","dz","getClickableElement","startNewUpload","computeOverallProgress","deferred","off","defer","hasFileErrored","once","isUploadComplete","files","QUEUED","ADDED","UPLOADING","stopIfComplete","resolve","currentUpload","removeAllFiles","filesPromises","clickable","removeFile","dropzoneFile","xhr","dictResponseError","dictCanceledUpload"],"mappings":"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","file":"ev-fdm.min.js","sourcesContent":["'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","'use strict';\n\nfunction AjaxStorage($http, $q, $cacheFactory, utilService, $log) {\n\n    var httpCache = $cacheFactory('customHttpCache');\n\n    function launchRequest(options) {\n\n        if(options.cache) {\n            var key = JSON.stringify(options),\n                cached = httpCache.get(key);\n\n            if(cached) {\n                return cached;\n            }\n        }\n\n        // Add the request id... Ah, history...\n        options.id = utilService.generateId('proxy:request:');\n        var requestConfig = {\n            url         : '/backoffice/common/xhr',\n            method      : 'POST',\n            responseType: 'json',\n            headers     : {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n            },\n            data: options\n        };\n\n        // We have to use then instead of success/error since they prevent from changing the value in the promise\n        // We don't treat the error case since the server always returns a 200 status code\n        var promise = $http(requestConfig)\n            .then(function(response) {\n\n                // php's xhr is not really consistent, let's be more\n                if (!response.data.success) {\n                    $log.warn(response.data.error, response.data.errors);\n\n                    // Not authenticated, redirect on homepage\n                    if (response.data.result[options.id].authenticated === false) {\n                        window.location.href = '/login?expired=1';\n                    }\n\n                    return $q.reject(response.data.result[options.id]);\n                }\n\n                return response.data.result[options.id].data;\n            });\n\n        if(options.cache) {\n            httpCache.put(key, promise);\n        }\n\n        return promise;\n    }\n\n    return {\n        launchRequest: launchRequest\n    };\n\n}\n\nangular.module('ev-fdm')\n    .service('AjaxStorage', ['$http', '$q', '$cacheFactory', 'UtilService', '$log', AjaxStorage]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nfunction Storage(AjaxStorage) {\n\n        return {\n\n            get: function(options) {\n                return AjaxStorage.launchRequest(options);\n            }\n        };\n}\n\nmodule.service('Storage', ['AjaxStorage', Storage]);","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.elementName = elementName;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.$scope = $scope;\n            this.$scope.filters = {};\n            this.$scope.sortKey = this.defaultSortKey;\n            this.$scope.reverseSort = this.defaultReverseSort;\n\n            this.setElements(elements);\n\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', this.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                this.update(newPage, this.$scope.filters, this.sortKey, this.reverseSort);\n            }.bind(this);\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', this.$scope.sortKey, this.$scope.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n\n            /*\n                Filter method that should be called from the template\n             */\n            this.$scope.filtersChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                this.toggleView('view', element);\n            }.bind(this);\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === this.elementName) {\n                    this.$scope.activeElement = null;\n                }\n                else {\n                    this.setActiveElement();\n                }\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::updated', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::created', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::deleted', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            return this.fetch(page, filters, sortKey, reverseSort).then(function(elements) {\n                this.setElements(elements);\n                return elements;\n            }.bind(this));\n        };\n\n        ListController.prototype.setElements = function(elements) {\n            this.$scope[this.elementName] = elements;\n            this.$scope.currentPage = elements.pagination.current_page;\n            this.$scope.pageCount = elements.pagination.total_pages;\n            this.$scope.totalElement = elements.pagination.total;\n\n            if(!this.$scope.selectedElements || !this.$scope[this.elementName]) {\n                this.$scope.selectedElements  = [];\n            }\n            else {\n                var selectedElementsIds = this.$scope[this.elementName].map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.$scope[this.elementName], function(element) {\n                    if (restangular.configuration.getIdFromElem(element) == $state.params[this.activeIdSelector]) {\n                        this.$scope.activeElement = element;\n                    }\n                }.bind(this));\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get = function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang = function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-lg\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{selected: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('.checkbox')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var self = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort),\n                    reverseSortSet = reverseSortGet.assign,\n                    sortKeyGet = $parse($attrs.sortBy),\n                    sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    self.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    self.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if(key == this.sortKey) {\n                        this.reverseSort = !this.reverseSort;\n                    }\n                    else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if(reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if(sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n\n            }]\n        };\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if(ctrl.sortKey === key){\n                        element.removeClass('no-sort');\n                        if(ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        }\n                        else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    }\n                    else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            }\n        }\n    });","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&'\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"close inline\" ' +\n                                'ng-click=\"remove($index)\">×</button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred && model.evChanged);\n\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            if (typeof dataProvider === 'object') {\n                formatter = dataProvider.formatter;\n                resultModifier = dataProvider.resultModifier;\n                minimumInputLength = dataProvider.minimumInputLength;\n                key = dataProvider.key;\n                dataProviderFilter = dataProvider.dataProviderFilter;\n                dataProvider = dataProvider.dataProvider;\n\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                }\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","'use strict';\n\n/**\n * Meant to be used for stuff like this:\n * {{ message.isFromTraveller | cssify:{1:'message-traveller', 0:'message-agent'} }}\n * We want to display a css class depending on a given value,\n * and we do not want our controller to store a data for that\n * We can use this filter, and feed it with an object with the matching key,value we want\n */\nangular.module('ev-fdm')\n    .filter('cssify', function() {\n        return function(input, possibilities) {\n            var res = '';\n            if (possibilities)\n            {\n                for (var prop in possibilities) {\n                    if (possibilities.hasOwnProperty(prop)) { \n                        if (input == prop){\n                            res = possibilities[prop];\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return res;\n        };\n    });","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n.service('DownloadService', ['$document', function($document) {\n   var iframe = null;\n   return {\n       download: function(url) {\n           if(!iframe) {\n               iframe = $document[0].createElement('iframe');\n               iframe.style.display = 'none';\n               $document[0].body.appendChild(iframe);\n           }\n           iframe.src = url;\n       }\n   };\n}]);","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\nvar AbstractAutocompleteStorage = function (AbstractStorage, $timeout) {\n    _.extend (this, AbstractStorage);\n    this.AbstractStorage = AbstractStorage;\n    this.$timeout = $timeout;\n};\n\nAbstractAutocompleteStorage.prototype.generateAutocompleteConfig = function (searchCallback, matchingCallback, minLength) {\n    var me = this;\n\n    var filterTextTimeout;\n    return {\n        minimumInputLength: minLength,\n        allowClear: true,\n        initSelection: function() {\n            return '';\n        },\n        query: function(q) {\n            var res = [],\n                searchParam = q.term;\n\n            if (filterTextTimeout) {\n                me.$timeout.cancel(filterTextTimeout);\n            }\n\n            // Fetches the result from the data store\n            filterTextTimeout = me.$timeout(function() {\n                searchCallback.call(me, searchParam.toUpperCase()).then(function (result){\n                        var res = matchingCallback (result);\n                        q.callback ({ results : res });\n                    }\n                );\n            }, 600);\n\n        }\n    };\n};\n\n// Demonstrate how to register services\n// In this case it is a simple value service.\nmodule.service('AbstractAutocompleteStorage', ['Storage', '$timeout', AbstractAutocompleteStorage]);\n","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = changesData[embedName];\n                            } else if (typeof changesData[embedName].data !== 'object' ||\n                                       Array.isArray(changesData[embedName].data)) {\n                                objectData[embedName].data = changesData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(this.defaultEmbed));\n            }\n            else if (this.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(this.defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    RestangularStorage.updateObjectFromResult(element, result);\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed, options) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed, options) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed, options) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed, options) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","'use strict';\n\n/* Start angularLocalStorage */\n\nvar angularLocalStorage = angular.module('LocalStorageModule', []);\n\n// You should set a prefix to avoid overwriting any local storage variables from the rest of your app\n// e.g. angularLocalStorage.constant('prefix', 'youAppName');\nangularLocalStorage.value('prefix', 'ls');\n// Cookie options (usually in case of fallback)\n// expiry = Number of days before cookies expire // 0 = Does not expire\n// path = The web path the cookie represents\nangularLocalStorage.constant('cookie', { expiry:30, path: '/'});\nangularLocalStorage.constant('notify', { setItem: true, removeItem: false} );\n\nangularLocalStorage.service('localStorageService', [\n  '$rootScope',\n  'prefix',\n  'cookie',\n  'notify',\n  function($rootScope, prefix, cookie, notify) {\n\n  // If there is a prefix set in the config lets use that with an appended period for readability\n  //var prefix = angularLocalStorage.constant;\n  if (prefix.substr(-1)!=='.') {\n    prefix = !!prefix ? prefix + '.' : '';\n  }\n\n  // Checks the browser to see if local storage is supported\n  var browserSupportsLocalStorage = function () {\n    try {\n        return ('localStorage' in window && window['localStorage'] !== null);\n    } catch (e) {\n        $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n        return false;\n    }\n  };\n\n  // Directly adds a value to local storage\n  // If local storage is not available in the browser use cookies\n  // Example use: localStorageService.add('library','angular');\n  var addToLocalStorage = function (key, value) {\n\n    // If this browser does not support local storage use cookies\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      if (notify.setItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.setitem', {key: key, newvalue: value, storageType: 'cookie'});\n      }\n      return addToCookies(key, value);\n    }\n\n    // Let's convert undefined values to null to get the value consistent\n    if (typeof value == \"undefined\") value = null;\n\n    try {\n      if (angular.isObject(value) || angular.isArray(value)) {\n          value = angular.toJson(value);\n      }\n      localStorage.setItem(prefix+key, value);\n      if (notify.setItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.setitem', {key: key, newvalue: value, storageType: 'localStorage'});\n      }\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return addToCookies(key, value);\n    }\n    return true;\n  };\n\n  // Directly get a value from local storage\n  // Example use: localStorageService.get('library'); // returns 'angular'\n  var getFromLocalStorage = function (key) {\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      return getFromCookies(key);\n    }\n\n    var item = localStorage.getItem(prefix+key);\n    if (!item) return null;\n    if (item.charAt(0) === \"{\" || item.charAt(0) === \"[\") {\n        return angular.fromJson(item);\n    }\n    return item;\n  };\n\n  // Remove an item from local storage\n  // Example use: localStorageService.remove('library'); // removes the key/value pair of library='angular'\n  var removeFromLocalStorage = function (key) {\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n       if (notify.removeItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.removeitem', {key: key, storageType: 'cookie'});\n      }\n      return removeFromCookies(key);\n    }\n\n    try {\n      localStorage.removeItem(prefix+key);\n      if (notify.removeItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.removeitem', {key: key, storageType: 'localStorage'});\n      }\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return removeFromCookies(key);\n    }\n    return true;\n  };\n\n  // Return array of keys for local storage\n  // Example use: var keys = localStorageService.keys()\n  var getKeysForLocalStorage = function () {\n\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      return false;\n    }\n\n    var prefixLength = prefix.length;\n    var keys = [];\n    for (var key in localStorage) {\n      // Only return keys that are for this app\n      if (key.substr(0,prefixLength) === prefix) {\n        try {\n          keys.push(key.substr(prefixLength))\n        } catch (e) {\n          $rootScope.$broadcast('LocalStorageModule.notification.error',e.Description);\n          return [];\n        }\n      }\n    }\n    return keys;\n  };\n\n  // Remove all data for this app from local storage\n  // Example use: localStorageService.clearAll();\n  // Should be used mostly for development purposes\n  var clearAllFromLocalStorage = function () {\n\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      return clearAllFromCookies();\n    }\n\n    var prefixLength = prefix.length;\n\n    for (var key in localStorage) {\n      // Only remove items that are for this app\n      if (key.substr(0,prefixLength) === prefix) {\n        try {\n          removeFromLocalStorage(key.substr(prefixLength));\n        } catch (e) {\n          $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n          return clearAllFromCookies();\n        }\n      }\n    }\n    return true;\n  };\n\n  // Checks the browser to see if cookies are supported\n  var browserSupportsCookies = function() {\n    try {\n      return navigator.cookieEnabled ||\n        (\"cookie\" in document && (document.cookie.length > 0 ||\n        (document.cookie = \"test\").indexOf.call(document.cookie, \"test\") > -1));\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return false;\n    }\n  };\n\n  // Directly adds a value to cookies\n  // Typically used as a fallback is local storage is not available in the browser\n  // Example use: localStorageService.cookie.add('library','angular');\n  var addToCookies = function (key, value) {\n\n    if (typeof value == \"undefined\") return false;\n\n    if (!browserSupportsCookies()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error','COOKIES_NOT_SUPPORTED');\n      return false;\n    }\n\n    try {\n      var expiry = '', expiryDate = new Date();\n      if (value === null) {\n        cookie.expiry = -1;\n        value = '';\n      }\n      if (cookie.expiry !== 0) {\n        expiryDate.setTime(expiryDate.getTime() + (cookie.expiry*24*60*60*1000));\n        expiry = \"; expires=\"+expiryDate.toGMTString();\n      }\n      if (!!key) {\n        document.cookie = prefix + key + \"=\" + encodeURIComponent(value) + expiry + \"; path=\"+cookie.path;\n      }\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return false;\n    }\n    return true;\n  };\n\n  // Directly get a value from a cookie\n  // Example use: localStorageService.cookie.get('library'); // returns 'angular'\n  var getFromCookies = function (key) {\n    if (!browserSupportsCookies()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error','COOKIES_NOT_SUPPORTED');\n      return false;\n    }\n\n    var cookies = document.cookie.split(';');\n    for(var i=0;i < cookies.length;i++) {\n      var thisCookie = cookies[i];\n      while (thisCookie.charAt(0)==' ') {\n        thisCookie = thisCookie.substring(1,thisCookie.length);\n      }\n      if (thisCookie.indexOf(prefix+key+'=') === 0) {\n        return decodeURIComponent(thisCookie.substring(prefix.length+key.length+1,thisCookie.length));\n      }\n    }\n    return null;\n  };\n\n  var removeFromCookies = function (key) {\n    addToCookies(key,null);\n  };\n\n  var clearAllFromCookies = function () {\n    var thisCookie = null, thisKey = null;\n    var prefixLength = prefix.length;\n    var cookies = document.cookie.split(';');\n    for(var i=0;i < cookies.length;i++) {\n      thisCookie = cookies[i];\n      while (thisCookie.charAt(0)==' ') {\n        thisCookie = thisCookie.substring(1,thisCookie.length);\n      }\n      key = thisCookie.substring(prefixLength,thisCookie.indexOf('='));\n      removeFromCookies(key);\n    }\n  };\n\n  return {\n    isSupported: browserSupportsLocalStorage,\n    set: addToLocalStorage, \n    add: addToLocalStorage, //DEPRECATED\n    get: getFromLocalStorage,\n    keys: getKeysForLocalStorage,\n    remove: removeFromLocalStorage,\n    clearAll: clearAllFromLocalStorage,\n    cookie: {\n      set: addToCookies,\n      add: addToCookies, //DEPRECATED\n      get: getFromCookies,\n      remove: removeFromCookies,\n      clearAll: clearAllFromCookies\n    }\n  };\n\n}]);","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});","angular.module('ev-leaflet', ['leaflet-directive'])\n    .provider('evLeaflet', function() {\n        this.$get =function () {\n            return {icons: this.icons};\n        };\n\n        this.setIcons =function (icons) {\n            this.icons = icons;\n        };\n    })\n    .directive('evLeaflet', ['leafletData', 'evLeaflet', '$log', function (leafletData, evLeaflet, $log) {\n        return {\n            template: '<leaflet class=\"ev-leaflet\" defaults=\"defaults\" markers=\"markers\" center=\"center\"></leaflet>',\n            restrict: 'AE',\n            scope: {\n                coordinates: '=',\n                defaultCoordinates: '=?',\n                editable: '='\n            },\n            controller: function($scope) {\n\n                // Icons settings\n                var baseIcon = {\n                    iconSize:   [40, 40],\n                    shadowSize: [1, 1],\n                    iconAnchor: [1, 20]\n                };\n\n                var icons = evLeaflet.icons;\n\n                if ('default' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.default);\n                }\n                if ('draggable' in icons) {\n                    angular.extend(angular.copy(baseIcon), icons.draggable);\n                }\n\n\n                $scope.defaults = {\n                    scrollWheelZoom: false,\n                    doubleClickZoom: false\n                };\n\n                // Setting a marker in location\n                $scope.markers = {\n                    marker: {\n                        focus: true\n                    }\n                };\n\n                // Double binding between coordinates and marker's position\n                $scope.$watch('coordinates.latitude', function(lat) {\n                    if (isNaN(lat) || lat == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.latitude != null) {\n                            lat = $scope.defaultCoordinates.latitude;\n                        } else {\n                            lat = 0;\n                        }\n                        $log.warn('ev-leaflet: latitude is not a number');\n                    }\n                    $scope.markers.marker.lat = lat;\n                    centerOnMarker();\n                });\n\n                $scope.$watch('coordinates.longitude', function(lng) {\n                    if (isNaN(lng) || lng == null) { // simple == : null or undefined\n                        if ($scope.defaultCoordinates && $scope.defaultCoordinates.longitude != null) {\n                            lng = $scope.defaultCoordinates.longitude;\n                        } else {\n                            lng = 0;\n                        }\n                        $log.warn('ev-leaflet: longitude is not a number');\n                    }\n                    $scope.markers.marker.lng = lng;\n                    centerOnMarker();\n                });\n\n                centerOnMarker();\n\n\n                $scope.$watch('markers.marker.lat', function(lat) {\n                    if (lat != null && $scope.editable) {\n                        $scope.coordinates.latitude = lat;\n                    }\n                });\n\n                $scope.$watch('markers.marker.lng', function(lng) {\n                    if (lng != null && $scope.editable) {\n                        $scope.coordinates.longitude = lng;\n                    }\n                });\n\n                // Setting map center\n                function centerOnMarker() {\n                    if (!$scope.center) {\n                        $scope.center = {\n                            lat: $scope.markers.marker.lat,\n                            lng: $scope.markers.marker.lng,\n                            zoom: 8\n                        };\n                    } else {\n                        $scope.center.lat = $scope.markers.marker.lat;\n                        $scope.center.lng = $scope.markers.marker.lng;\n                    }\n                }\n\n                $scope.$watch('editable', function () {\n                    var edited = $scope.editable;\n                    $scope.markers.marker.icon = edited ? icons.draggable : icons['default'];\n                    $scope.markers.marker.draggable = edited;\n                });\n            }\n        };\n    }]);\n","/* jshint camelcase: false */\n/* global tinymce */\n/**\n * Directive to override some settings in tinymce\n * Usage:\n * <ev-tinymce\n *     max-chars=\"1000\"                        -- maxChars this input accept (default: unlimited)\n *     ng-model=\"message.body\"                 -- ng-model\n *     tinymce-options=\"tinymceOptions\"        -- override default options with yours (object expected)\n *  ></ev-tinymce>\n */\n(function (tinyMCE) {\n    var defaultOptions = {\n        menubar: false,\n        statusbar: false,\n        //resize: false,\n        toolbar: 'bold italic underline | alignleft aligncenter alignright | bullist',\n        skin: false,\n        'verify_html': true,\n        'convert_fonts_to_spans': true,\n        //'content_css': '/bower_components/ev-fdm/dist/css/ev-fdm.min.css',\n        inline: true,\n        browser_spellcheck : true,\n\n        // We choose to have a restrictive approach here.\n        // The aim is to output the cleanest html possible.\n        // See http://www.tinymce.com/wiki.php/Configuration:valid_elements\n        // 'valid_elements':\n        //     'strong,em' +\n        //     'span[!style<text-decoration: underline;],' +\n        //     '@[style<text-align: right;?text-align: left;?text-align: center;],' +\n        //     'p,!div,ul,li'\n    };\n\n\nangular.module('ev-tinymce', [])\n    .provider('evTinymce', function() {\n        var configs = {};\n\n        this.register = function(name, value) {\n            if (configs.hasOwnProperty(name)) {\n                throw new Error('A config named \"' + name + '\" was already registered');\n            }\n            configs[name] = value;\n        };\n\n        this.get = function(name) {\n            return configs[name];\n        };\n\n        this.$get = function() { return configs; };\n    })\n    .directive('evTinymce', ['$timeout', 'evTinymce', function($timeout, evTinymce) {\n        var generatedIds = 0;\n        return {\n            template: '<div class=\"tiny-mce-wrapper\">'\n                + '<div class=\"ev-placeholder-container\"></div>'\n                + '<div class=\"ev-tinymce-content\"></div>'\n                + '<div ng-click=\"focusTinymce()\" class=\"ev-tinymce-toolbar\"></div>'\n                + '<div class=\"max-chars-info\"></div>'\n                + '</div>',\n            restrict: 'AE',\n            replace: true,\n            require: '?ngModel',\n\n            scope: {\n                tinymceOptions: '=',\n            },\n\n            link: function (scope, elm, attrs, ngModel) {\n                var tinyId = 'uiTinymce' + generatedIds++;\n                var tinyElm = elm.find('.ev-tinymce-content');\n                tinyElm.attr('id', tinyId);\n                elm.find('.ev-tinymce-toolbar').attr('id', tinyId + 'toolbar');\n\n                var tinyInstance;\n                var getTinyInstance = function() {\n                    if (!tinyInstance) {\n                        tinyInstance = tinyMCE.get(tinyId);\n                    }\n                    return tinyInstance;\n                };\n                var options = angular.extend({\n                    fixed_toolbar_container: '#' + tinyId + 'toolbar',\n                }, defaultOptions, evTinymce[attrs.configKey], scope.tinymceOptions);\n\n                // /**\n                //  * This part is used for the max-chars attibute.\n                //  * It allows us to easily limit the number of characters typed in the editor\n                //  */\n                var maxChars = options.maxChars = attrs.maxChars || options.maxChars || null;\n                // // We set the max char warning when the THRESHOLD is reached\n                // // Here, it's 85% of max chars\n                var THRESHOLD = 85;\n\n                // /**\n                //  * Update the information area about the textEditor state (maxChars, ..)\n                //  */\n                var updateCharCounter = function(currentChars, maxChars) {\n                    var maxCharInfosElm = elm.parent().find('.max-chars-info');\n                    maxCharInfosElm.text(currentChars + ' / ' + maxChars);\n\n                    var isThresholdReached = ((currentChars / maxChars) * 100) > THRESHOLD;\n                    var isMaxLimitReached  = currentChars >= maxChars;\n\n                    maxCharInfosElm.toggleClass('max-chars-warning', isThresholdReached);\n                    maxCharInfosElm.toggleClass('max-chars-reached', isMaxLimitReached);\n                };\n\n                var hasFocus = false;\n                var placeholder = false;\n                var currentHtml = '';\n                var currentText = '';\n\n                var setPlaceholder = function() {\n                    var editor = getTinyInstance();\n                    tinymce.DOM.addClass(tinyElm, 'placeholder-light');\n                    editor.setContent(attrs.placeholder);\n                };\n\n                var updatePlaceholder = function(newText) {\n                    var editor = getTinyInstance();\n                    if (hasFocus) {\n                        if (currentText === attrs.placeholder) {\n                            editor.setContent('');\n                            editor.selection.setCursorLocation();\n                            tinymce.DOM.removeClass(tinyElm, 'placeholder-light');\n                        }\n                    } else {\n                        if (newText !== attrs.placeholder) {\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                var updateView = function () {\n                    var editor = getTinyInstance();\n                    var newHtml = tinyElm.html();\n                    var newText = tinyElm.text();\n                    var newTextOverLimit = maxChars && newText.length > maxChars;\n                    var currentTextOverLimit = maxChars && currentText.length > maxChars;\n\n                    if (placeholder && newText === attrs.placeholder) {\n                        currentHtml = newHtml;\n                        currentText = newText;\n                    }\n                    /*\n                     * Specific case where the old and new text are both over the limit of max chars.\n                     * This case can occur on the first initilization, if data from DB are over the\n                     * limit.\n                     * For now, we substring the content (but that break the html and everything..)\n                     */\n                    else if (newTextOverLimit && (currentTextOverLimit || !currentText.length)) {\n                        var shorterText = newText.substr(0, maxChars);\n                        // be carefull, setContent call this method again\n                        editor.setContent(shorterText, { format: 'text' });\n                    } else if(currentTextOverLimit && newTextOverLimit) {\n                        editor.setContent(currentHtml); // be carefull, setContent call this method again\n                    } else {\n                        $timeout(function() {\n                            ngModel.$setViewValue(newText === '' || newText === attrs.placeholder ? '' : newHtml);\n                        });\n                        currentHtml = newHtml;\n                        currentText = newText;\n                    }\n\n                    if (maxChars) {\n                        updateCharCounter(currentText.length, maxChars);\n                    }\n\n                    placeholder = newText === '' || newText === attrs.placeholder;\n\n                    if (placeholder && attrs.placeholder) {\n                        updatePlaceholder(newText);\n                    }\n                };\n\n                ngModel.$render = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        if (ngModel.$viewValue) {\n                            editor.setContent(ngModel.$viewValue);\n                        } else if (attrs.placeholder) {\n                            placeholder = true;\n                            setPlaceholder();\n                        }\n                    }\n                };\n\n                scope.focusTinymce = function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.focus();\n                    }\n                };\n\n                /* Options */\n\n                var setup = function(editor) {\n                    editor.on('init', function() {\n                        if (ngModel.$viewValue) {\n                            ngModel.$render();\n                        }\n                    });\n                    // Update model on button click\n                    editor.on('ExecCommand', function (e) {\n                        updateView();\n                    });\n                    // Update model on keypress\n                    editor.on('KeyUp', function (e) {\n                        updateView();\n                    });\n                    // Update model on change, i.e. copy/pasted text, plugins altering content\n                    editor.on('SetContent', function (e) {\n                        if (!e.initial) {\n                            updateView();\n                        }\n                    });\n                    editor.on('blur', function(e) {\n                        if (hasFocus) {\n                            hasFocus = false;\n                            updateView();\n                        }\n                        tinyElm.blur();\n                    });\n\n                    editor.on('focus', function (e) {\n                        if (!hasFocus) {\n                            hasFocus = true;\n                            updateView();\n                        }\n                    });\n                };\n\n                // extend options with initial uiTinymceConfig and options from directive attribute value\n                options.setup = setup;\n                options.elems = tinyId;\n                options.mode = 'exact';\n\n                tinyMCE.init(options);\n\n                scope.$on('$destroy', function() {\n                    var editor = getTinyInstance();\n                    if (editor) {\n                        editor.destroy();\n                    }\n                });\n\n                tinyMCE.execCommand('mceToggleEditor', false, tinyId);\n            },\n        };\n    }]);\n}) (window.tinyMCE);\n","/* global tinymce */\n\ntinymce.PluginManager.add('evelements', function(editor) {\n    var evelementsConfig = editor.settings.evelements;\n    var evelementsOptions = editor.settings.evelementsOptions;\n\n    function setElement(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            if (node && elementConfig.matches(node)) {\n                dom.remove(node, true);\n            } else {\n                editor.insertContent(\n                    dom.createHTML(\n                        elementConfig.name,\n                        {},\n                        dom.encode(editor.selection.getContent({ format: 'text' }))\n                    )\n                );\n            }\n        };\n    }\n\n    function showDialog(elementConfig) {\n        return function() {\n            var dom = editor.dom;\n            var node = editor.selection.getNode();\n            var attributes = null;\n\n            if (node && elementConfig.matches(node)) {\n                attributes = {};\n                var attribs = dom.getAttribs(node);\n                for (var i = 0; i < attribs.length; ++i) {\n                    var item = attribs[i];\n                    attributes[item.name] = item.value;\n                }\n            } else {\n                node = null;\n            }\n\n            var key = elementConfig.key || elementConfig.name;\n            var callback = evelementsOptions[key] && evelementsOptions[key].callback;\n            var text = node ? ('innerText' in node ? node.innerText : node.textContent)\n                                 : editor.selection.getContent({ format: 'text' });\n            (callback || elementConfig.callback)(attributes, function(newAttributes, text) {\n                if (node) {\n                    editor.focus();\n                    if (!newAttributes && !text) {\n                        dom.remove(node, true);\n                        editor.undoManager.add();\n                        return;\n                    }\n                    dom.removeAllAttribs(node);\n                    dom.setAttribs(node, newAttributes);\n                    if (text) {\n                        if ('innerText' in node) {\n                            node.innerText = text;\n                        } else {\n                            node.textContent = text;\n                        }\n                    }\n                    editor.selection.select(node);\n                    editor.undoManager.add();\n                } else {\n                    editor.focus();\n                    node = dom.createHTML(elementConfig.name, newAttributes, text && dom.encode(text));\n                    editor.selection.setContent(node);\n                    editor.undoManager.add();\n                }\n            }, text, evelementsOptions);\n        };\n    }\n\n    if (typeof evelementsConfig === 'string') {\n        evelementsConfig = evelementsConfig.split(' ');\n    }\n\n    evelementsConfig.forEach(function(elementConfig) {\n        if (typeof elementConfig === 'string') {\n            elementConfig = {\n                name: elementConfig\n            };\n        }\n\n        elementConfig.matches = elementConfig.matches || function(node) {\n            return node.nodeName.toLowerCase() === elementConfig.name;\n        };\n\n        var callbackAction = elementConfig.callback ? showDialog(elementConfig) : setElement(elementConfig);\n\n        editor.addButton('ev' + (elementConfig.key || elementConfig.name), {\n            text: elementConfig.title !== undefined ? elementConfig.title : elementConfig.name,\n            icon: elementConfig.icon,\n            tooltip: elementConfig.tooltip || ('Set this text as ' + elementConfig.name),\n            shortcut: elementConfig.shortcut,\n            onclick: callbackAction,\n            stateSelector: elementConfig.selector || elementConfig.name,\n        });\n\n        if (elementConfig.shortcut) {\n            editor.addShortcut(elementConfig.shortcut, '', callbackAction);\n        }\n    });\n});\n","/* global tinymce, console */\n\ntinymce.PluginManager.add('evimage', function(editor) {\n    console.log('evimage is deprecated: use evelements');\n    function showDialog() {\n        var dom = editor.dom;\n        var node = editor.selection.getNode();\n        var attributes = null;\n\n        if (node && node.getAttribute('data-picture-id')) {\n            attributes = {\n                src: dom.getAttrib(node, 'src'),\n                alt: dom.getAttrib(node, 'alt'),\n                'class': dom.getAttrib(node, 'class'),\n                'data-picture-id': dom.getAttrib(node, 'data-picture-id')\n            };\n        }\n\n        editor.settings.evimage(attributes, function(attributesNew) {\n            if (attributes) {\n                dom.removeAllAttribs(node);\n                dom.setAttribs(node, attributesNew);\n            } else {\n                editor.selection.setContent(editor.dom.createHTML('img', attributesNew));\n            }\n        });\n    }\n\n    editor.addButton('evimage', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onclick: showDialog,\n        stateSelector: 'img[data-picture-id]:not([data-mce-object],[data-mce-placeholder])'\n    });\n\n    editor.addMenuItem('evimage', {\n        icon: 'image',\n        text: 'Insert image',\n        onclick: showDialog,\n        context: 'insert',\n        prependToContext: true\n    });\n\n    editor.addCommand('mceImage', showDialog);\n});\n","(function () {\n    'use strict';\n    angular.module('ev-upload', ['ev-fdm']);\n}) ();","; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureButtonUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-button-upload\n    =================\n    Hi! I'm a directive used for uploading pictures but I'm just a button.\n    If you want a more advanced one, you can use the evPictureUpload\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `pictureSuccess`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                pictures: '=',\n                buttonText: '@',\n                tooltipText: '@',\n                iconName: '@',\n                url: '@',\n                language: '=',\n                maxFiles: '@',\n                addPicture: '&',\n                onPictureAdded: '&'\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"addPicture({picture: file})\"' +\n                'upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<button type=\"button\" tabIndex=\"-1\" class=\"btn btn-tertiary btn-lime ev-upload-clickable\"' +\n                            'tooltip=\"{{tooltipText}}\"' +\n                            'tooltip-placement=\"top\">' +\n                        '<span class=\"icon {{iconName}}\"></span>' +\n                       '{{buttonText}}' +\n                    '</button>' +\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Transfert en cours\"| i18n}} </div>' +\n                    '<p> {{upload.done}} / {{upload.total}} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope, elem, attrs) {\n                $scope.uploading = false;\n\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url,\n                    maxFiles: $scope.maxFiles || 100\n                };\n\n                $scope.pictures = $scope.pictures || [];\n\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = {\n                        done: 0,\n                        total: '?'\n                    };\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success () {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été transférées avec succès'\n                                });\n                            },\n                            function error () {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.WARNING,\n                                    text: 'Certaines images n\\'ont pas pu être transférées.'\n                                });\n                            },\n                            function onNotify (progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                // This allow us to override the add picture\n                if(!attrs.addPicture) {\n                    $scope.addPicture = function(picture) {\n                        picture = picture.picture;\n                        var pictureData = picture.data[0];\n                        if($scope.language) {\n                            if (Array.isArray(pictureData.legend)) {\n                                pictureData.legend = {};\n                            }\n                            if (!pictureData.legend[$scope.language]) {\n                                pictureData.legend[$scope.language] = { name: '' };\n                            }\n                        }\n\n                        $scope.pictures.unshift(pictureData);\n                        $scope.onPictureAdded();\n                    };\n                }\n            }\n        };\n}]);\n}) ();\n","/* jshint maxlen: 200 */\n; (function () {\n'use strict';\nangular.module('ev-upload')\n    .directive('evPictureUpload', ['NotificationsService', '$http', function (NotificationsService, $http) {\n\n/*  ev-picture-upload\n    =================\n    Hi! I'm a directive used for uploading pictures. I'm based on the `ev-upload` directive. But I can also\n    manage flickr uploads !\n\n    You can parameter me with:\n    - `url`:  which is the place where I'll upload the pictures\n    - `addPicture`:  a function called each time a picture has successfully been uploaded (by flickr\n        or manually). The picture is passed as argument.\n\n*/\n        return {\n            restrict: 'AE',\n            scope: {\n                addPicture: '=',\n                url: '@',\n                language: '='\n            },\n            template:\n            '<ev-upload settings=\"settings\" file-success=\"pictureUploaded(file)\"' +\n                'class=\"ev-picture-upload\" upload=\"newUpload(promise)\">' +\n                '<div ng-hide=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\">{{ \"Faites glisser vos images ici\" | i18n }}</div>' +\n                    '<table style=\"width:100%\"><tr><td style=\"width:114px\">'+\n                            '<button type=\"button\" tabIndex=\"-1\" class=\"btn ev-upload-clickable\">' +\n                                '{{ \"Importer...\" | i18n}}' +\n                            '</button>' +\n                        '</td>'+\n                        '<td style=\"width:30px´; line-height: 36px;\">'+\n                            '{{ \"ou\" | i18n }}' +\n                        '</td>'+\n                        '<td>'+\n                            '<ng-form novalidate name=\"flickr\" ' +\n                                'ng-class=\"{\\'has-error\\': flickr.$dirty && flickr.$invalid}\">' +\n                                '<input name=\"fUrl\" placeholder=\"{{\\'Lien Flickr\\' | i18n}}\" ' +\n                                    'ng-model=\"$parent.flickrUrl\" ng-pattern=\"flickrUrlPattern\" ' +\n                                    'class=\"form-control\" ng-change=\"uploadFlickrUrl(flickr)\"/>' +\n                                '<div ng-show=\"flickr.fUrl.$dirty && flickr.fUrl.$invalid\">' +\n                                    '<p class=\"control-label\" for=\"fUrl\" data-ng-show=\"flickr.fUrl.$error.pattern\">'+\n                                        '{{ \"L\\'url doit être une photo flickr\" | i18n}}</p>' +\n                                '</div>' +\n                            '</ng-form>' +\n                        '</td></tr></table>'+\n                '</div>' +\n                '<div class=\"ev-picture-uploading\" ng-show=\"uploading\">' +\n                    '<div class=\"ev-picture-upload-label\"> {{\"Upload en cours\"| i18n}} </div>' +\n                    '<div class=\"spinner\"></div>' +\n                    '<p> {{upload.done}} / {{upload.total}} {{ \"photo(s) uploadée(s)\" | i18n }} </p>' +\n                '</div>' +\n                '<div ng-show=\"uploading\" ev-promise-progress=\"uploadPromise\"></div>' +\n            '</ev-upload>',\n\n            link: function ($scope) {\n                $scope.flickrUrlPattern = /^(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+.*$/;\n                $scope.settings = {\n                    acceptedFiles: 'image/*',\n                    url: $scope.url\n                };\n            },\n            controller: function ($scope) {\n                $scope.uploading = false;\n                $scope.$watch('url', function (url) {\n                    $scope.settings.url = url;\n                });\n                $scope.uploadFlickrUrl = function (flickrForm) {\n                    /* Trailing the ends in order to have a https://www.flickr.com/photos/{user-id}/{photo-id} url\n                        Warning: `.*` is greedy, so an address like:\n                            https://www.flickr.com/photos/{user-id}/{photo-id}/blabla/1512\n                        will not be parsed nicely\n                     */\n                    if (!flickrForm.$valid || !$scope.flickrUrl) {\n                        return;\n                    }\n                    var flickrUrl = /(https\\:\\/\\/)?www\\.flickr\\.com\\/photos\\/.*\\/\\d+/ .exec($scope.flickrUrl)[0];\n                    var uploadPromise = $http.post($scope.url, {'flickr-url': flickrUrl});\n                    uploadPromise\n                        .success(function (pictureUploaded) {\n                            var picture = pictureUploaded.data[0];\n                            $scope.addPicture(picture);\n                        })\n                        .success(function () {\n                            flickrForm.$setPristine();\n                            $scope.flickrUrl = \"\";\n                        });\n\n                    $scope.newUpload(uploadPromise);\n                    $scope.upload = {\n                        done: 0,\n                        total: 1,\n                        progress: 0\n                    };\n                };\n\n                $scope.newUpload = function (upload) {\n                    $scope.upload = null;\n                    $scope.uploading = true;\n                    $scope.uploadPromise = upload;\n                    upload\n                        .then(\n                            function success () {\n                                NotificationsService.addSuccess({\n                                    text: 'Les images ont été uploadées avec succès'\n                                });\n                            },\n                            function error () {\n                                NotificationsService.add({\n                                    type: NotificationsService.type.WARNING,\n                                    text: 'Certaines images n\\'ont pas pu être uploadées.'\n                                });\n                            },\n                            function onNotify (progress) {\n                                $scope.upload = progress;\n                            }\n                        )\n                        .finally(function () {\n                            $scope.uploading = false;\n                        });\n                };\n\n                $scope.pictureUploaded = function(pictureUploaded) {\n                    var picture = pictureUploaded.data[0];\n                    $scope.addPicture(picture);\n                };\n            }\n        };\n}]);\n}) ();\n","/* global Dropzone */\n; (function (Dropzone) {\n    'use strict';\n    angular.module('ev-upload')\n        .directive('evUpload', ['$log', '$q', '$timeout', function ($log, $q, $timeout) {\n\n    /*  ev-upload\n        =========\n        Hi! I'm a directive used for uploading files.\n\n        You can give me three callback: `uploadStart`, `fileSuccess` and `fileAdded`\n        - `uploadStart` will be called when a new multiple upload start (for instance, when the user dropped some files\n            on the dropzone). It will be call with an argument: the promise for the status of the whole upload.\n        - `fileSuccess` will be called each time a file has successfully been uploaded, with the data returned by the\n            server.\n        - `fileAdded` will be called each time a file is added to the queue. It will be called with 3 arguments :\n            - dropzoneFile : the Dropzone file being uploaded\n            - promise : the promise associated with the file\n            - cancel : a function that can be called to cancel the upload of the file.\n\n        Clickable Element : you can define a clickable element inside the directive with the\n                            class '.ev-upload-clickable'\n\n        Dropzone Element : you can define a clickable element inside the directive with the class '.ev-upload-dropzone'\n                           If the class is not present, it will use the root element.\n\n        My inner heart is powered by Dropzone. You can pass any settings to it through my `settings` parameter.\n        Consequently, you can do whatever you want. Be wise :)\n\n        ** Careful, if you change the settings parameters, all the current upload will be canceled, as a new dropzone\n        object will be created. **\n    */\n\n        var BASE_CONFIG = {\n            previewTemplate: false,\n            previewsContainer: false,\n            autoQueue: true,\n            maxFilesize: 12,\n            maxFiles: 100,\n\n            uploadMultiple: false,\n            parallelUploads: 3\n        };\n\n            return {\n                transclude: true,\n                restrict: 'EA',\n                replace: true,\n                scope: {\n                    settings: '=',\n                    uploadStart: '&upload',\n                    fileSuccess: '&',\n                    fileAdded: '&'\n                },\n                template: '<div class=\"ev-upload\"><div ng-transclude> </div></div>',\n                link: function ($scope, elem, attrs) {\n\n                    $scope.fileSuccess = $scope.fileSuccess || function() {};\n                    $scope.fileAdded = $scope.fileAdded || function() {};\n\n                    var dropzone = null;\n                    var progress = null;\n\n                    var filesPromises = {};\n                    function getBytes (status) {\n                        return dropzone.getAcceptedFiles().reduce(function (bytes, file) {\n                            return bytes + file.upload[status];\n                        }, 0);\n                    }\n\n                    function getDropzoneElement() {\n                        var dz = elem.find('.ev-upload-dropzone');\n                        if (dz.length === 0) {\n                            dz = elem;\n                        }\n                        dz.addClass(\"dz-default\");\n                        dz.addClass(\"dz-message\");\n                        return dz[0];\n                    }\n\n                    function getClickableElement() {\n                        return elem.find('.ev-upload-clickable')[0];\n                    }\n\n                    $scope.$watch('settings', function (settings) {\n                        if (!settings.url) {\n                            $log.warn('No url provided to the upload zone');\n                            return;\n                        }\n                        if (dropzone !== null) {\n                            dropzone.destroy();\n                        }\n                        settings = angular.extend(BASE_CONFIG, settings);\n                        dropzone = new Dropzone(\n                            getDropzoneElement(),\n                            angular.extend({clickable: getClickableElement()},settings)\n                        );\n                        // the promise for the whole upload\n\n                        $scope.currentUpload = null;\n\n                        // When a file is added to the queue\n                        dropzone.on('addedfile', function (file) {\n                            if ($scope.currentUpload === null) {\n                                $scope.$apply(startNewUpload);\n                            }\n                            var deferred = $q.defer();\n                            filesPromises[file.name] = deferred;\n                            var cancel = function () {\n                                dropzone.removeFile(file);\n                            };\n                            $scope.$apply(function($scope) {\n                                $scope.fileAdded({\n                                    dropzoneFile: file,\n                                    promise: deferred.promise,\n                                    cancel: cancel\n                                });\n                            });\n                        });\n\n                        dropzone.on('uploadprogress', function (file, progress) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].notify(progress);\n                            });\n                        });\n\n                        dropzone.on('success', function (file, response) {\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].resolve({file: response});\n                                $scope.fileSuccess({file: response});\n                            });\n                        });\n\n                        dropzone.on('error', function (file, response, xhr) {\n                            if (!response && xhr.status === 500) {\n                                response = settings.dictResponseError || 'Unexpected error during the upload';\n                            }\n                            if (response === 'Upload canceled.') {\n                                response = settings.dictCanceledUpload || 'The upload has been canceled';\n                            }\n                            $scope.$apply(function ($scope) {\n                                filesPromises[file.name].reject(response);\n                            });\n                        });\n\n                        dropzone.on('canceled', function (file) {\n                            var deferred = filesPromises[file.name];\n                            $scope.$apply(function ($scope) {\n                                deferred.reject(settings.dictCanceledUpload || 'The upload has been canceled');\n                            });\n                        });\n\n                        dropzone.on('complete', function (file) {\n                            if(angular.isDefined(progress)){\n                                progress.done += 1;\n                            }\n                        });\n\n                    }, true);\n\n                    // Create a new overall upload object\n                    function startNewUpload($scope) {\n                        progress = {\n                            done: 0,\n                            progress: 0\n                        };\n\n                        var computeOverallProgress = function () {\n                            progress.progress = 100 * getBytes('bytesSent') / getBytes('total');\n                            progress.total = dropzone.getAcceptedFiles().length;\n                            upload.deferred.notify(progress);\n                        };\n\n                        // De-register all events\n                        dropzone\n                            .off('uploadprogress', computeOverallProgress)\n                            .off('maxfilesexceeded');\n\n                        // upload object, encapsulate the state of the current (multi file) upload\n                        var upload = {\n                            deferred: $q.defer(),\n                            hasFileErrored: false,\n                        };\n                        computeOverallProgress();\n\n                        dropzone.once('error', function() {\n                            upload.hasFileErrored = true;\n                        });\n\n\n                        dropzone.on('uploadprogress', computeOverallProgress);\n\n                        var isUploadComplete = function () {\n                            return !dropzone.files.filter(function (file) {\n                                return file.status === Dropzone.QUEUED ||\n                                file.status === Dropzone.ADDED ||\n                                file.status === Dropzone.UPLOADING;\n                            }).length;\n                        };\n\n                        var stopIfComplete = function () {\n                            $scope.$apply(function ($scope) {\n                                $timeout(function () {\n                                    if ( !isUploadComplete() ) { return; }\n                                    dropzone.off('complete', stopIfComplete);\n                                    $timeout(function () {\n                                        if (upload.hasFileErrored) {\n                                            upload.deferred.reject('filehaserrored');\n                                        } else {\n                                            upload.deferred.resolve();\n                                        }\n                                    });\n                                });\n                            });\n                        };\n\n                        dropzone.on('maxfilesexceeded', function() {\n                            upload.deferred.reject('maxfilesexceeded');\n                        });\n                        dropzone.on('complete', stopIfComplete);\n\n                        $scope.currentUpload = upload.deferred.promise;\n                        $scope.uploadStart({promise: upload.deferred.promise});\n                        $scope.currentUpload.finally(function () {\n                            dropzone.removeAllFiles(true);\n                            $scope.currentUpload = null;\n                        });\n\n                    }\n\n                    $scope.$on('$destroy', function () {\n                        dropzone.destroy();\n                    });\n                }\n            };\n        }]);\n}(Dropzone));"],"sourceRoot":"/source/"}