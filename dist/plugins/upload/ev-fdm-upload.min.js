!function(){"use strict";angular.module("ev-upload",["ev-fdm"])}(),function(){"use strict";angular.module("ev-upload").directive("evPictureUpload",["NotificationsService","i18n","$http",function(e,l,r){return{restrict:"AE",scope:{pictureSuccess:"&newPicture",url:"@"},template:'<ev-upload settings="settings" file-success="pictureSuccess({picture: file})"class="ev-picture-upload" upload="newUpload(promise)"><div ng-hide="uploading"><h4>{{ "Glissez une photo ici pour l\'ajouter à la liste"  }}</h4><button type="button" class="btn btn-default ev-upload-clickable">{{ "Importer..."}}</button><form novalidate name="flickr" ng-submit="flickr.$valid && uploadFlickrUrl(flickrUrl)" ng-class="{\'has-error\': flickr.$dirty && flickr.$invalid}"><input type="url" name="fUrl" placeholder="{{\'Lien Flickr\'}}" ng-model="flickrUrl" ng-pattern="flickrUrlPattern" required="" class="form-control" /><div ng-show="flickr.fUrl.$dirty && flickr.fUrl.$invalid"><p class="control-label" for="fUrl" data-ng-show="flickr.fUrl.$error.pattern">{{ "L\'url doit être une photo flickr" }}</p></div></form></div><div class="ev-picture-uploading" ng-show="uploading"><h4> {{"Upload en cours"}} </h4><div class="spinner" ></div><p> {{upload.done}} / {{upload.total}} photo(s) uploadée(s) </p></div><div ng-show="uploading" ev-promise-progress="uploadPromise"></div></ev-upload>',link:function(e){e.flickrUrlPattern=/^(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+.*$/,e.settings={acceptedFiles:"image/*",url:e.url}},controller:function(o){o.uploading=!1,o.uploadFlickrUrl=function(e){o.upload={done:0,total:1,progress:0},e=/(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+/.exec(e)[0];var l=r.post(o.url,{"flickr-url":e});l.success(function(e){o.pictureSuccess({picture:e})}),o.newUpload(l)},o.newUpload=function(r){o.upload=null,o.uploading=!0,o.uploadPromise=r,r.then(function(){e.addSuccess({text:l("Les images ont été uploadées avec succès")})},function(){e.add({type:e.type.WARNING,text:l("Erreur lors de l'upload d'image")})},function(e){o.upload=e}).finally(function(){o.uploading=!1})}}}}])}(),function(e){"use strict";angular.module("ev-upload").directive("evUpload",["$log","$q",function(l,r){var o={clickable:".ev-upload-clickable",previewTemplate:!1,previewsContainer:!1,autoQueue:!0,maxFilesize:12,maxFiles:40,uploadMultiple:!1,parallelUploads:3};return{transclude:!0,restrict:"EA",replace:!0,scope:{settings:"=",uploadStart:"&upload",fileSuccess:"&"},template:'<div class="ev-upload"><div class="dz-default dz-message" ng-transclude> </div></div>',link:function(t,n){function i(e){return d.getAcceptedFiles().reduce(function(l,r){return l+r.upload[e]},0)}function u(e){a={done:0},d.off("totaluploadprogress").off("queuecomplete").off("maxfilesexceeded");var l={deferred:r.defer(),hasFileErrored:!1};d.on("uploadprogress",function(){a.progress=100*i("bytesSent")/i("total"),a.total=d.getAcceptedFiles().length,l.deferred.notify(a)}),d.on("queuecomplete",function(){e.$apply(function(){l.hasFileErrored?l.deferred.reject("filehaserrored"):l.deferred.resolve()})}),d.on("maxfilesexceeded",function(){l.deferred.reject("maxfilesexceeded")}),e.currentUpload=l.deferred.promise,e.uploadStart({promise:l.deferred.promise}),e.currentUpload.finally(function(){d.removeAllFiles(!0),e.currentUpload=null})}var d=null,a=null;t.$watch("settings",function(r){return r.url?(null!=d&&d.destroy(),d=new e(n[0],angular.extend(o,r)),t.currentUpload=null,d.on("sending",function(){null===t.currentUpload&&t.$apply(u)}),void d.on("success",function(e,l){a.done+=1,t.$apply(function(e){e.fileSuccess({file:l})})})):void l.warn("No url provided to the upload zone")}),t.$on("$destroy",function(){d.destroy()})}}}])}(Dropzone);