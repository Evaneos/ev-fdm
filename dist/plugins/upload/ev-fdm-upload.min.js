!function(){"use strict";angular.module("ev-upload",["ev-fdm"])}(),function(){"use strict";angular.module("ev-upload").directive("evPictureUpload",["NotificationsService","$http",function(e,n){return{restrict:"AE",scope:{pictureSuccess:"&newPicture",url:"@"},template:'<ev-upload settings="settings" file-success="pictureSuccess({picture: file})"class="ev-picture-upload" upload="newUpload(promise)"><div ng-hide="uploading"><div class="ev-picture-upload-label">{{ "Faites glisser vos images ici" | i18n }}</div><table style="width:100%"><tr><td style="width:114px"><button type="button" class="btn btn-default ev-upload-clickable">{{ "Importer..." | i18n}}</button></td><td style="width:30px´; line-height: 36px;">{{ "ou" | i18n }}</td><td><form novalidate name="flickr" ng-class="{\'has-error\': flickr.$dirty && flickr.$invalid}"><input name="fUrl" placeholder="{{\'Lien Flickr\' | i18n}}" ng-model="$parent.flickrUrl" ng-pattern="flickrUrlPattern" required="" class="form-control" ng-change="uploadFlickrUrl(flickr)"/><div ng-show="flickr.fUrl.$dirty && flickr.fUrl.$invalid"><p class="control-label" for="fUrl" data-ng-show="flickr.fUrl.$error.pattern">{{ "L\'url doit être une photo flickr" | i18n}}</p></div></form></td></tr></table></div><div class="ev-picture-uploading" ng-show="uploading"><div class="ev-picture-upload-label"> {{"Upload en cours"| i18n}} </div><div class="spinner"></div><p> {{upload.done}} / {{upload.total}} {{ "photo(s) uploadée(s)" | i18n }} </p></div><div ng-show="uploading" ev-promise-progress="uploadPromise"></div></ev-upload>',link:function(e){e.flickrUrlPattern=/^(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+.*$/,e.settings={acceptedFiles:"image/*",url:e.url}},controller:function(l){l.$watch("url",function(e){l.settings.url=e}),l.uploading=!1,l.uploadFlickrUrl=function(e){if(e.$valid){var t=/(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+/.exec(l.flickrUrl)[0],r=n.post(l.url,{"flickr-url":t});r.success(function(e){l.pictureSuccess({picture:e})}).success(function(){e.$setPristine(),l.flickrUrl=""}),l.newUpload(r),l.upload={done:0,total:1,progress:0}}},l.newUpload=function(n){l.upload=null,l.uploading=!0,l.uploadPromise=n,n.then(function(){e.addSuccess({text:"Les images ont été uploadées avec succès"})},function(){e.add({type:e.type.WARNING,text:"Certaines images n'ont pas pu être uploadées."})},function(e){l.upload=e}).finally(function(){l.uploading=!1})}}}}])}(),function(e){"use strict";angular.module("ev-upload").directive("evUpload",["$log","$q","$timeout",function(n,l,t){var r={previewTemplate:!1,previewsContainer:!1,autoQueue:!0,maxFilesize:12,maxFiles:100,uploadMultiple:!1,parallelUploads:3};return{transclude:!0,restrict:"EA",replace:!0,scope:{settings:"=",uploadStart:"&upload",fileSuccess:"&",fileAdded:"&"},template:'<div class="ev-upload"><div ng-transclude> </div></div>',link:function(o,i){function d(e){return s.getAcceptedFiles().reduce(function(n,l){return n+l.upload[e]},0)}function a(){var e=i.find(".ev-upload-dropzone");return 0===e.length&&(e=i),e.addClass("dz-default"),e.addClass("dz-message"),e[0]}function c(){return i.find(".ev-upload-clickable")[0]}function u(n){p={done:0,progress:0};var r=function(){p.progress=100*d("bytesSent")/d("total"),p.total=s.getAcceptedFiles().length,o.deferred.notify(p)};s.off("uploadprogress",r).off("maxfilesexceeded");var o={deferred:l.defer(),hasFileErrored:!1};r(),s.once("error",function(){o.hasFileErrored=!0}),s.on("uploadprogress",r);var i=function(){return!s.files.filter(function(n){return n.status===e.QUEUED||n.status===e.ADDED||n.status===e.UPLOADING}).length},a=function(){n.$apply(function(){t(function(){i()&&(s.off("complete",a),t(function(){o.hasFileErrored?o.deferred.reject("filehaserrored"):o.deferred.resolve()}))})})};s.on("maxfilesexceeded",function(){o.deferred.reject("maxfilesexceeded")}),s.on("complete",a),n.currentUpload=o.deferred.promise,n.uploadStart({promise:o.deferred.promise}),n.currentUpload.finally(function(){s.removeAllFiles(!0),n.currentUpload=null})}o.fileSuccess=o.fileSuccess||function(){},o.fileAdded=o.fileAdded||function(){};var s=null,p=null,f={};o.$watch("settings",function(t){return t.url?(null!==s&&s.destroy(),t=angular.extend(r,t),s=new e(a(),angular.extend({clickable:c()},t)),o.currentUpload=null,s.on("addedfile",function(e){null===o.currentUpload&&o.$apply(u);var n=l.defer();f[e.name]=n;var t=function(){s.removeFile(e)};o.$apply(function(l){l.fileAdded({dropzoneFile:e,promise:n.promise,cancel:t})})}),s.on("uploadprogress",function(e,n){o.$apply(function(){f[e.name].notify(n)})}),s.on("success",function(e,n){o.$apply(function(l){f[e.name].resolve({file:n}),l.fileSuccess({file:n})})}),s.on("error",function(e,n,l){n||500!==l.status||(n=t.dictResponseError||"Unexpected error during the upload"),"Upload canceled."===n&&(n=t.dictCanceledUpload||"The upload has been canceled"),o.$apply(function(){f[e.name].reject(n)})}),s.on("canceled",function(e){var n=f[e.name];o.$apply(function(){n.reject(t.dictCanceledUpload||"The upload has been canceled")})}),s.on("complete",function(){angular.isDefined(p)&&(p.done+=1)}),void 0):(n.warn("No url provided to the upload zone"),void 0)},!0),o.$on("$destroy",function(){s.destroy()})}}}])}(Dropzone);
//# sourceMappingURL=ev-fdm-upload.min.js.map