!function(){"use strict";angular.module("ev-upload",["ev-fdm"])}(),function(){"use strict";angular.module("ev-upload").directive("evPictureUpload",["NotificationsService","$http",function(e,l){return{restrict:"AE",scope:{pictureSuccess:"&newPicture",url:"@"},template:'<ev-upload settings="settings" file-success="pictureSuccess({picture: file})"class="ev-picture-upload" upload="newUpload(promise)"><div ng-hide="uploading"><div class="ev-picture-upload-label">{{ "Faites glisser vos images ici" | i18n }}</div><table style="width:100%"><tr><td style="width:114px"><button type="button" class="btn btn-default ev-upload-clickable">{{ "Importer..." | i18n}}</button></td><td style="width:30px´; line-height: 36px;">{{ "ou" | i18n }}</td><td><form novalidate name="flickr" ng-class="{\'has-error\': flickr.$dirty && flickr.$invalid}"><input name="fUrl" placeholder="{{\'Lien Flickr\' | i18n}}" ng-model="$parent.flickrUrl" ng-pattern="flickrUrlPattern" required="" class="form-control" ng-change="uploadFlickrUrl(flickr)"/><div ng-show="flickr.fUrl.$dirty && flickr.fUrl.$invalid"><p class="control-label" for="fUrl" data-ng-show="flickr.fUrl.$error.pattern">{{ "L\'url doit être une photo flickr" | i18n}}</p></div></form></td></tr></table></div><div class="ev-picture-uploading" ng-show="uploading"><div class="ev-picture-upload-label"> {{"Upload en cours"| i18n}} </div><div class="spinner"></div><p> {{upload.done}} / {{upload.total}} {{ "photo(s) uploadée(s)" | i18n }} </p></div><div ng-show="uploading" ev-promise-progress="uploadPromise"></div></ev-upload>',link:function(e){e.flickrUrlPattern=/^(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+.*$/,e.settings={acceptedFiles:"image/*",url:e.url}},controller:function(r){r.$watch("url",function(e){r.settings.url=e}),r.uploading=!1,r.uploadFlickrUrl=function(e){if(e.$valid){var t=/(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+/.exec(r.flickrUrl)[0],o=l.post(r.url,{"flickr-url":t});o.success(function(e){r.pictureSuccess({picture:e})}).success(function(){e.$setPristine(),r.flickrUrl=""}),r.newUpload(o),r.upload={done:0,total:1,progress:0}}},r.newUpload=function(l){r.upload=null,r.uploading=!0,r.uploadPromise=l,l.then(function(){e.addSuccess({text:"Les images ont été uploadées avec succès"})},function(){e.add({type:e.type.WARNING,text:"Erreur lors de l'upload d'image"})},function(e){r.upload=e}).finally(function(){r.uploading=!1})}}}}])}(),function(e){"use strict";angular.module("ev-upload").directive("evUpload",["$log","$q",function(l,r){var t={previewTemplate:!1,previewsContainer:!1,autoQueue:!0,maxFilesize:12,maxFiles:40,uploadMultiple:!1,parallelUploads:3};return{transclude:!0,restrict:"EA",replace:!0,scope:{settings:"=",uploadStart:"&upload",fileSuccess:"&"},template:'<div class="ev-upload"><div class="dz-default dz-message" ng-transclude> </div></div>',link:function(o,i){function n(e){return u.getAcceptedFiles().reduce(function(l,r){return l+r.upload[e]},0)}function d(e){a={done:0},u.off("totaluploadprogress").off("queuecomplete").off("maxfilesexceeded");var l={deferred:r.defer(),hasFileErrored:!1};u.on("error",function(){l.hasFileErrored=!0}),u.on("uploadprogress",function(){a.progress=100*n("bytesSent")/n("total"),a.total=u.getAcceptedFiles().length,l.deferred.notify(a)}),u.on("queuecomplete",function(){e.$apply(function(){l.hasFileErrored?l.deferred.reject("filehaserrored"):l.deferred.resolve()})}),u.on("maxfilesexceeded",function(){l.deferred.reject("maxfilesexceeded")}),e.currentUpload=l.deferred.promise,e.uploadStart({promise:l.deferred.promise}),e.currentUpload.finally(function(){u.removeAllFiles(!0),e.currentUpload=null})}var u=null,a=null,c=i.find(".ev-upload-clickable")[0];console.log(c),o.$watch("settings",function(r){return r.url?(null!==u&&u.destroy(),r=angular.extend(t,r),u=new e(i[0],angular.extend({clickable:c},r)),o.currentUpload=null,u.on("sending",function(){null===o.currentUpload&&o.$apply(d)}),void u.on("success",function(e,l){a.done+=1,o.$apply(function(e){e.fileSuccess({file:l})})})):void l.warn("No url provided to the upload zone")},!0),o.$on("$destroy",function(){u.destroy()})}}}])}(Dropzone);
//# sourceMappingURL=ev-fdm-upload.min.js.map