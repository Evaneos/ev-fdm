!function(){"use strict";angular.module("ev-upload",["ev-fdm"])}(),function(){"use strict";angular.module("ev-upload").directive("evPictureUpload",["NotificationsService","$http",function(e,n){return{restrict:"AE",scope:{pictureSuccess:"&newPicture",url:"@"},template:'<ev-upload settings="settings" file-success="pictureSuccess({picture: file})"class="ev-picture-upload" upload="newUpload(promise)"><div ng-hide="uploading"><div class="ev-picture-upload-label">{{ "Faites glisser vos images ici" | i18n }}</div><table style="width:100%"><tr><td style="width:114px"><button type="button" class="btn btn-default ev-upload-clickable">{{ "Importer..." | i18n}}</button></td><td style="width:30px´; line-height: 36px;">{{ "ou" | i18n }}</td><td><form novalidate name="flickr" ng-class="{\'has-error\': flickr.$dirty && flickr.$invalid}"><input name="fUrl" placeholder="{{\'Lien Flickr\' | i18n}}" ng-model="$parent.flickrUrl" ng-pattern="flickrUrlPattern" required="" class="form-control" ng-change="uploadFlickrUrl(flickr)"/><div ng-show="flickr.fUrl.$dirty && flickr.fUrl.$invalid"><p class="control-label" for="fUrl" data-ng-show="flickr.fUrl.$error.pattern">{{ "L\'url doit être une photo flickr" | i18n}}</p></div></form></td></tr></table></div><div class="ev-picture-uploading" ng-show="uploading"><div class="ev-picture-upload-label"> {{"Upload en cours"| i18n}} </div><div class="spinner"></div><p> {{upload.done}} / {{upload.total}} {{ "photo(s) uploadée(s)" | i18n }} </p></div><div ng-show="uploading" ev-promise-progress="uploadPromise"></div></ev-upload>',link:function(e){e.flickrUrlPattern=/^(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+.*$/,e.settings={acceptedFiles:"image/*",url:e.url}},controller:function(l){l.$watch("url",function(e){l.settings.url=e}),l.uploading=!1,l.uploadFlickrUrl=function(e){if(e.$valid){var r=/(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+/.exec(l.flickrUrl)[0],o=n.post(l.url,{"flickr-url":r});o.success(function(e){l.pictureSuccess({picture:e})}).success(function(){e.$setPristine(),l.flickrUrl=""}),l.newUpload(o),l.upload={done:0,total:1,progress:0}}},l.newUpload=function(n){l.upload=null,l.uploading=!0,l.uploadPromise=n,n.then(function(){e.addSuccess({text:"Les images ont été uploadées avec succès"})},function(){e.add({type:e.type.WARNING,text:"Certaines images n'ont pas pu être uploadées."})},function(e){l.upload=e}).finally(function(){l.uploading=!1})}}}}])}(),function(e){"use strict";angular.module("ev-upload").directive("evUpload",["$log","$q",function(n,l){var r={previewTemplate:!1,previewsContainer:!1,autoQueue:!0,maxFilesize:12,maxFiles:40,uploadMultiple:!1,parallelUploads:3};return{transclude:!0,restrict:"EA",replace:!0,scope:{settings:"=",uploadStart:"&upload",fileSuccess:"&",fileAdded:"&"},template:'<div class="ev-upload"><div ng-transclude> </div></div>',link:function(o,t){function i(e){return c.getAcceptedFiles().reduce(function(n,l){return n+l.upload[e]},0)}function a(){var e=t.find(".ev-upload-dropzone");return 0===e.length&&(e=t),e.addClass("dz-default"),e.addClass("dz-message"),e[0]}function d(){return t.find(".ev-upload-clickable")[0]}function u(e){s={done:0},c.off("uploadprogress").off("maxfilesexceeded");var n={deferred:l.defer(),hasFileErrored:!1};c.once("error",function(){n.hasFileErrored=!0}),c.on("uploadprogress",function(){s.progress=100*i("bytesSent")/i("total"),s.total=c.getAcceptedFiles().length,n.deferred.notify(s)}),c.once("queuecomplete",function(){e.$apply(function(){n.hasFileErrored?n.deferred.reject("filehaserrored"):n.deferred.resolve()})}),c.on("maxfilesexceeded",function(){n.deferred.reject("maxfilesexceeded")}),e.currentUpload=n.deferred.promise,e.uploadStart({promise:n.deferred.promise}),e.currentUpload.finally(function(){c.removeAllFiles(!0),e.currentUpload=null})}o.fileSuccess=o.fileSuccess||function(){},o.fileAdded=o.fileAdded||function(){};var c=null,s=null,p={};o.$watch("settings",function(t){return t.url?(null!==c&&c.destroy(),t=angular.extend(r,t),c=new e(a(),angular.extend({clickable:d()},t)),o.currentUpload=null,c.on("addedfile",function(e){null===o.currentUpload&&o.$apply(u);var n=l.defer();p[e.name]=n,o.$apply(function(l){l.fileAdded({dropzoneFile:e,promise:n.promise})})}),c.on("uploadprogress",function(e,n){var l=p[e.name];o.$apply(function(){l.notify(n)})}),c.on("uploadprogress",function(e,n){o.$apply(function(){p[e.fullPath].notify(n)})}),c.on("success",function(e,n){var l=p[e.name];o.$apply(function(e){l.resolve({file:n}),e.fileSuccess({file:n})})}),c.on("error",function(e,n){o.$apply(function(){p[e.fullPath].reject({errorMessage:n})})}),c.on("complete",function(e){s.done+=1,delete p[e.fullPath]}),c.on("error",function(e,n){var l=p[e.name];o.$apply(function(){l.reject({errorMessage:n})})}),c.on("canceled",function(e){var n=p[e.name];o.$apply(function(){n.reject({errorMessage:"canceled"})})}),c.on("complete",function(e){angular.isDefined(s)||(s.done+=1),delete p[e.name]}),void 0):(n.warn("No url provided to the upload zone"),void 0)},!0),o.$on("$destroy",function(){c.destroy()})}}}])}(Dropzone);
//# sourceMappingURL=ev-fdm-upload.min.js.map