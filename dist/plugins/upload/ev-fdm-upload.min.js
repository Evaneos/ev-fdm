!function(){"use strict";angular.module("ev-upload",["ev-fdm"])}(),function(){"use strict";angular.module("ev-upload").directive("evPictureButtonUpload",["NotificationsService","$http",function(e){return{restrict:"AE",scope:{pictures:"=",buttonText:"@",iconName:"@",url:"@",language:"="},template:'<ev-upload settings="settings" file-success="addPicture(file)"upload="newUpload(promise)"><div ng-hide="uploading"><button type="button" tabIndex="-1" class="btn btn-link ev-upload-clickable"><span class="icon {{iconName}}"></span>{{buttonText}}</button></div><div class="ev-picture-uploading" ng-show="uploading"><div class="ev-picture-upload-label"> {{"Upload en cours"| i18n}} </div><div class="spinner"></div><p> {{upload.done}} / {{upload.total}} {{ "photo(s) uploadée(s)" | i18n }} </p></div><div ng-show="uploading" ev-promise-progress="uploadPromise"></div></ev-upload>',link:function(e){e.settings={acceptedFiles:"image/*",url:e.url}},controller:function(n){n.$watch("url",function(e){n.settings.url=e}),n.uploading=!1,n.newUpload=function(t){n.upload=null,n.uploading=!0,n.uploadPromise=t,t.then(function(){e.addSuccess({text:"Les images ont été uploadées avec succès"})},function(){e.add({type:e.type.WARNING,text:"Certaines images n'ont pas pu être uploadées."})},function(e){n.upload=e}).finally(function(){n.uploading=!1})},n.addPicture=function(e){console.log(e);var t=e.data[0];n.language&&(Array.isArray(t.legend)&&(t.legend={}),t.legend[n.language]||(t.legend[n.language]={name:""})),n.pictures.unshift(t)}}}}])}(),function(){"use strict";angular.module("ev-upload").directive("evPictureUpload",["NotificationsService","$http",function(e,n){return{restrict:"AE",scope:{pictures:"=",url:"@",language:"="},template:'<ev-upload settings="settings" file-success="addPicture(file)"class="ev-picture-upload" upload="newUpload(promise)"><div ng-hide="uploading"><div class="ev-picture-upload-label">{{ "Faites glisser vos images ici" | i18n }}</div><table style="width:100%"><tr><td style="width:114px"><button type="button" tabIndex="-1" class="btn btn-default ev-upload-clickable">{{ "Importer..." | i18n}}</button></td><td style="width:30px´; line-height: 36px;">{{ "ou" | i18n }}</td><td><form novalidate name="flickr" ng-class="{\'has-error\': flickr.$dirty && flickr.$invalid}"><input name="fUrl" placeholder="{{\'Lien Flickr\' | i18n}}" ng-model="$parent.flickrUrl" ng-pattern="flickrUrlPattern" required="" class="form-control" ng-change="uploadFlickrUrl(flickr)"/><div ng-show="flickr.fUrl.$dirty && flickr.fUrl.$invalid"><p class="control-label" for="fUrl" data-ng-show="flickr.fUrl.$error.pattern">{{ "L\'url doit être une photo flickr" | i18n}}</p></div></form></td></tr></table></div><div class="ev-picture-uploading" ng-show="uploading"><div class="ev-picture-upload-label"> {{"Upload en cours"| i18n}} </div><div class="spinner"></div><p> {{upload.done}} / {{upload.total}} {{ "photo(s) uploadée(s)" | i18n }} </p></div><div ng-show="uploading" ev-promise-progress="uploadPromise"></div></ev-upload>',link:function(e){e.flickrUrlPattern=/^(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+.*$/,e.settings={acceptedFiles:"image/*",url:e.url}},controller:function(t){t.$watch("url",function(e){t.settings.url=e}),t.uploading=!1,t.uploadFlickrUrl=function(e){if(e.$valid){var l=/(https\:\/\/)?www\.flickr\.com\/photos\/.*\/\d+/.exec(t.flickrUrl)[0],o=n.post(t.url,{"flickr-url":l});o.success(function(e){t.pictureSuccess({picture:e})}).success(function(){e.$setPristine(),t.flickrUrl=""}),t.newUpload(o),t.upload={done:0,total:1,progress:0}}},t.newUpload=function(n){t.upload=null,t.uploading=!0,t.uploadPromise=n,n.then(function(){e.addSuccess({text:"Les images ont été uploadées avec succès"})},function(){e.add({type:e.type.WARNING,text:"Certaines images n'ont pas pu être uploadées."})},function(e){t.upload=e}).finally(function(){t.uploading=!1})},t.addPicture=function(e){console.log(e);var n=e.data[0];t.language&&(Array.isArray(n.legend)&&(n.legend={}),n.legend[t.language]||(n.legend[t.language]={name:""})),t.pictures.unshift(n)}}}}])}(),function(e){"use strict";angular.module("ev-upload").directive("evUpload",["$log","$q","$timeout",function(n,t,l){var o={previewTemplate:!1,previewsContainer:!1,autoQueue:!0,maxFilesize:12,maxFiles:100,uploadMultiple:!1,parallelUploads:3};return{transclude:!0,restrict:"EA",replace:!0,scope:{settings:"=",uploadStart:"&upload",fileSuccess:"&",fileAdded:"&"},template:'<div class="ev-upload"><div ng-transclude> </div></div>',link:function(i,a){function r(e){return s.getAcceptedFiles().reduce(function(n,t){return n+t.upload[e]},0)}function d(){var e=a.find(".ev-upload-dropzone");return 0===e.length&&(e=a),e.addClass("dz-default"),e.addClass("dz-message"),e[0]}function u(){return a.find(".ev-upload-clickable")[0]}function c(n){p={done:0,progress:0};var o=function(){p.progress=100*r("bytesSent")/r("total"),p.total=s.getAcceptedFiles().length,i.deferred.notify(p)};s.off("uploadprogress",o).off("maxfilesexceeded");var i={deferred:t.defer(),hasFileErrored:!1};o(),s.once("error",function(){i.hasFileErrored=!0}),s.on("uploadprogress",o);var a=function(){return!s.files.filter(function(n){return n.status===e.QUEUED||n.status===e.ADDED||n.status===e.UPLOADING}).length},d=function(){n.$apply(function(){l(function(){a()&&(s.off("complete",d),l(function(){i.hasFileErrored?i.deferred.reject("filehaserrored"):i.deferred.resolve()}))})})};s.on("maxfilesexceeded",function(){i.deferred.reject("maxfilesexceeded")}),s.on("complete",d),n.currentUpload=i.deferred.promise,n.uploadStart({promise:i.deferred.promise}),n.currentUpload.finally(function(){s.removeAllFiles(!0),n.currentUpload=null})}i.fileSuccess=i.fileSuccess||function(){},i.fileAdded=i.fileAdded||function(){};var s=null,p=null,f={};i.$watch("settings",function(l){return l.url?(null!==s&&s.destroy(),l=angular.extend(o,l),s=new e(d(),angular.extend({clickable:u()},l)),i.currentUpload=null,s.on("addedfile",function(e){null===i.currentUpload&&i.$apply(c);var n=t.defer();f[e.name]=n;var l=function(){s.removeFile(e)};i.$apply(function(t){t.fileAdded({dropzoneFile:e,promise:n.promise,cancel:l})})}),s.on("uploadprogress",function(e,n){i.$apply(function(){f[e.name].notify(n)})}),s.on("success",function(e,n){i.$apply(function(t){f[e.name].resolve({file:n}),t.fileSuccess({file:n})})}),s.on("error",function(e,n,t){n||500!==t.status||(n=l.dictResponseError||"Unexpected error during the upload"),"Upload canceled."===n&&(n=l.dictCanceledUpload||"The upload has been canceled"),i.$apply(function(){f[e.name].reject(n)})}),s.on("canceled",function(e){var n=f[e.name];i.$apply(function(){n.reject(l.dictCanceledUpload||"The upload has been canceled")})}),void s.on("complete",function(){angular.isDefined(p)&&(p.done+=1)})):void n.warn("No url provided to the upload zone")},!0),i.$on("$destroy",function(){s.destroy()})}}}])}(Dropzone);
//# sourceMappingURL=ev-fdm-upload.min.js.map