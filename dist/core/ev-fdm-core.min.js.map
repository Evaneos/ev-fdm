{"version":3,"sources":["factories/FilterServiceFactory.js","directives/EvMenuDirective.js","app.js","animations/PictureListAnimation.js","animations/TagListAnimation.js","controllers/ListController.js","controllers/NotificationsController.js","controllers/SearchController.js","factories/ConfirmBox.js","factories/Select2Configuration.js","directives/AccordionDirective.js","directives/ActivableDirective.js","directives/AddTagInListDirective.js","directives/ClearableDirective.js","directives/DatePickerDirective.js","directives/DownloadDirective.js","directives/EditSection.js","directives/EnterDirective.js","directives/ErrorMessageDirective.js","directives/ErrorsDirective.js","directives/FlagDirective.js","directives/FocusDirective.js","directives/FormGroupDirective.js","directives/LinkDisabledDirective.js","directives/LoadingDotsDirective.js","directives/MouseFollowerDirective.js","directives/PaginationDirective.js","directives/PictureListDirective.js","directives/PopoverExtendDirective.js","directives/PromiseDirective.js","directives/PromiseProgressDirective.js","directives/ResizableColumnDirective.js","directives/ResolvingStateDirective.js","directives/ResponsiveViewportDirective.js","directives/SelectLanguageDirective.js","directives/SelectableDirective.js","directives/SortableDirective.js","directives/StopEventPropagationDirective.js","directives/SubmitDirective.js","directives/TabDirective.js","directives/TagListDirective.js","directives/ThrottleDirective.js","directives/ValidableDirective.js","directives/ValueDirective.js","filters/CleanupDate.js","filters/HtmlToPlainTextFilter.js","filters/Map.js","filters/PrettySecsFilter.js","filters/ReplaceFilter.js","filters/SumFilter.js","filters/TextSelectFilter.js","filters/UnsafeFilter.js","services/DownloadService.js","services/FilteringService.js","services/ModalService.js","services/NotificationsService.js","services/PanelService.js","services/SortService.js","services/UtilService.js","storages/RestangularStorage.js","directives/FormDirectives/DisableValidationDirective.js","directives/FormDirectives/StrictMinDirective.js"],"names":["FilterServiceFactory","$rootScope","$timeout","FilterService","this","filters","listeners","self","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","angular","isFunction","addListener","scope","push","$on","removeListener","forEach","listener","index","splice","MenuManagerProvider","findTab","stateName","res","tabs","tab","state","selectTab","activeTab","lastTab","active","addTab","$get","$state","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","go","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","options","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","restangularProvider","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","window","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","className","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","setElements","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","bind","sortChanged","filtersChanged","toggleDetailView","toggleView","activeElement","setActiveElement","page","fetch","then","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","view","routingArgs","goToViewStatePath","id","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","$modal","title","message","positive","negative","open","backdrop","templateUrl","result","dataProvider","formatter","resultModifier","minimumInputLength","key","dataProviderFilter","idFunction","timeout","opt","ressource","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","cancel","resources","resource","results","length","more","value","tmp","shift","formatResult","container","escapeMarkup","formatSelection","initSelection","directive","accordionDirective","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","oldActiveElement","on","$","target","closest","ctrlKey","shiftKey","$apply","transclude","addElement","maxElements","iconName","buttonText","tooltipText","attrs","transcludeFn","context","showSelect","clone","transcludedScope","add","find","append","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$http","$document","downloadService","elm","get","download","success","data","url","notificationsService","args","headerTitle","noteditable","notdeletable","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","onCancel","onDelete","successDeleteMessage","errorDeleteMessage","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","which","ngEnter","preventDefault","input","error","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","put","showTimeout","triggerHandler","applyClass","classes","promiseGetter","promise","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","idRand","String","random","$watchCollection","allSelected","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","maxAlertMessage","onTagDeleted","iconRemoveClass","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","y","m","day","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","isObject","hasOwnProperty","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","service","iframe","useFullHost","createElement","display","appendChild","fullHost","location","protocol","host","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","$q","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","cache","updateLayout","containers","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","generateId","prefix","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildParameters","parameters","concat","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","number","all","getList","getFirst","getById","one","restangularizeElement","preventObjectUpdate","updateAll","patch","patchAll","create","post","deleteAll","saveAll","getNew","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters"],"mappings":"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","file":"ev-fdm-core.min.js","sourcesContent":["'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.elementName = elementName;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.$scope = $scope;\n            this.$scope.filters = {};\n            this.$scope.sortKey = this.defaultSortKey;\n            this.$scope.reverseSort = this.defaultReverseSort;\n\n            this.setElements(elements);\n\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', this.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(newPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', this.$scope.sortKey, this.$scope.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n\n            /*\n                Filter method that should be called from the template\n             */\n            this.$scope.filtersChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                this.toggleView('view', element);\n            }.bind(this);\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === this.elementName) {\n                    this.$scope.activeElement = null;\n                }\n                else {\n                    this.setActiveElement();\n                }\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::updated', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::created', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::deleted', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            return this.fetch(page, filters, sortKey, reverseSort).then(function(elements) {\n                this.setElements(elements);\n                return elements;\n            }.bind(this));\n        };\n\n        ListController.prototype.setElements = function(elements) {\n            this.$scope[this.elementName] = elements;\n            this.$scope.currentPage = elements.pagination.current_page;\n            this.$scope.pageCount = elements.pagination.total_pages;\n            this.$scope.totalElement = elements.pagination.total;\n\n            if(!this.$scope.selectedElements || !this.$scope[this.elementName]) {\n                this.$scope.selectedElements  = [];\n            }\n            else {\n                var selectedElementsIds = this.$scope[this.elementName].map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.$scope[this.elementName], function(element) {\n                    if (restangular.configuration.getIdFromElem(element) == $state.params[this.activeIdSelector]) {\n                        this.$scope.activeElement = element;\n                    }\n                }.bind(this));\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            var idFunction;\n            var timeout = 600;\n            var opt = {};\n            if (typeof dataProvider === 'object') {\n                opt = dataProvider;\n                formatter = opt.formatter;\n                resultModifier = opt.resultModifier;\n                minimumInputLength = opt.minimumInputLength;\n                key = opt.key;\n                dataProviderFilter = opt.dataProviderFilter;\n                dataProvider = opt.dataProvider;\n                timeout = opt.timeout || timeout;\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n\n                if (typeof opt.id === 'string') {\n                    idFunction = function(ressource) {return ressource[opt.id];};\n                } else if (typeof opt.id === 'function') {\n                    idFunction = opt.id;\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                },\n                id: idFunction,\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","angular.module('ev-fdm').directive('evAddTagInList', [\n    function() {\n        return {\n            restrict: 'EA',\n            transclude: true,\n            scope: {\n                elements: '=',\n                addElement: '=',\n                maxElements: '=',\n                iconName: '@',\n                buttonText: '@',\n                tooltipText: '@',\n            },\n            template:\n                '<span ng-hide=\"elements.length >= maxElements\"> ' +\n                    '<button type=\"button\" ' +\n                        'class=\"btn btn-tertiary btn-env\" ' +\n                        'tabIndex=\"-1\"' +\n                        'tooltip=\"{{ tooltipText }}\"' +\n                        'tooltip-placement=\"top\"' +\n                        'tabIndex=\"-1\"' +\n                        'ng-hide=\"context.showSelect\" ' +\n                        'ng-click=\"context.showSelect = true\"> ' +\n                        '<span class=\"icon {{ iconName }}\"></span> ' +\n                        '{{ buttonText }} ' +\n                    '</button> ' +\n                    '<span ng-show=\"context.showSelect\"> ' +\n                        '<div class=\"transclude-addtaginlist\"></div>' +\n                    '</span> ' +\n                '</span> ',\n            link: function(scope, element, attrs, controller, transcludeFn) {\n                scope.context = {\n                    showSelect: false,\n                };\n\n                transcludeFn(function(clone, transcludedScope) {\n                    transcludedScope.add = function(element) {\n                        return scope.addElement(scope.elements, element);\n                    };\n\n                    // append body to template\n                    element.find('.transclude-addtaginlist').append(clone);\n                });\n            },\n        };\n    },\n]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get = function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang = function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-lg\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{active: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('[type=checkbox]')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            controller: ['$scope', function ($scope) {\n                $scope.idRand = String(Math.random());\n            }],\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"selected\"><label ng-attr-for=\"{{idRand}}\"></label></span>'\n            // template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"allSelected\" ng-click=\"toggleSelectAll()\"><label ng-attr-for=\"{{idRand}}\"></label></span>',\n            //'<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n                scope.idRand = String(Math.random());\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var self = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort),\n                    reverseSortSet = reverseSortGet.assign,\n                    sortKeyGet = $parse($attrs.sortBy),\n                    sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    self.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    self.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if(key == this.sortKey) {\n                        this.reverseSort = !this.reverseSort;\n                    }\n                    else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if(reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if(sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n\n            }]\n        };\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if(ctrl.sortKey === key){\n                        element.removeClass('no-sort');\n                        if(ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        }\n                        else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    }\n                    else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            }\n        }\n    });","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&',\n                iconRemoveClass: '@',\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"label-btn\" ' +\n                                'ng-click=\"remove($index)\"><span class=\"{{ iconRemoveClass || \\'icon-bin\\' }}\"></span></button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^?evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred && model.evChanged);\n\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit && evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","angular.module('ev-fdm')\n    .filter('htmlToPlainText', function() {\n        return function(text) {\n            return String(text).replace(/<[^>]+>/gm, '');\n        };\n    }\n);","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n.service('DownloadService', ['$window', '$document', function($window, $document) {\n    var iframe = null;\n    return {\n        /**\n         * Download a specific url using an iframe\n         *\n         * @param  {string}  url         the url you want to download\n         * @param  {boolean} useFullHost either you want to prepend the full host or not (without trailing slash!)\n         */\n        download: function(url, useFullHost) {\n            if(!iframe) {\n                iframe = $document[0].createElement('iframe');\n                iframe.style.display = 'none';\n                $document[0].body.appendChild(iframe);\n            }\n\n            if(useFullHost) {\n                var fullHost = $window.location.protocol + '//' + $window.location.host;\n                url = fullHost + url;\n            }\n\n            iframe.src = url;\n        }\n    };\n}]);\n","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = changesData[embedName];\n                            } else if (typeof changesData[embedName].data !== 'object' ||\n                                       Array.isArray(changesData[embedName].data)) {\n                                objectData[embedName].data = changesData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = {};\n\n            options = options || {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(this.defaultEmbed));\n            }\n            else if (this.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(this.defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed, options) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed, options) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed, options) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed, options) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed, options) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});"],"sourceRoot":"/source/"}