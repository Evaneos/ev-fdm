{"version":3,"sources":["factories/FilterServiceFactory.js","directives/EvMenuDirective.js","app.js","animations/PictureListAnimation.js","animations/TagListAnimation.js","controllers/ListController.js","controllers/NotificationsController.js","controllers/SearchController.js","factories/ConfirmBox.js","factories/Select2Configuration.js","directives/AccordionDirective.js","directives/ActivableDirective.js","directives/ClearableDirective.js","directives/DatePickerDirective.js","directives/DownloadDirective.js","directives/EditSection.js","directives/EnterDirective.js","directives/ErrorMessageDirective.js","directives/ErrorsDirective.js","directives/FlagDirective.js","directives/FocusDirective.js","directives/FormGroupDirective.js","directives/LinkDisabledDirective.js","directives/LoadingDotsDirective.js","directives/MouseFollowerDirective.js","directives/PaginationDirective.js","directives/PictureListDirective.js","directives/PopoverExtendDirective.js","directives/PromiseDirective.js","directives/PromiseProgressDirective.js","directives/ResizableColumnDirective.js","directives/ResolvingStateDirective.js","directives/ResponsiveViewportDirective.js","directives/SelectLanguageDirective.js","directives/SelectableDirective.js","directives/SortableDirective.js","directives/StopEventPropagationDirective.js","directives/SubmitDirective.js","directives/TabDirective.js","directives/TagListDirective.js","directives/ThrottleDirective.js","directives/ValidableDirective.js","directives/ValueDirective.js","filters/CleanupDate.js","filters/Map.js","filters/PrettySecsFilter.js","filters/ReplaceFilter.js","filters/SumFilter.js","filters/TextSelectFilter.js","filters/UnsafeFilter.js","services/DownloadService.js","services/FilteringService.js","services/ModalService.js","services/NotificationsService.js","services/PanelService.js","services/SortService.js","services/UtilService.js","storages/RestangularStorage.js","directives/FormDirectives/DisableValidationDirective.js","directives/FormDirectives/StrictMinDirective.js"],"names":["FilterServiceFactory","$rootScope","$timeout","FilterService","this","filters","listeners","self","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","angular","isFunction","addListener","scope","push","$on","removeListener","forEach","listener","index","splice","MenuManagerProvider","findTab","stateName","res","tabs","tab","state","selectTab","activeTab","lastTab","active","addTab","$get","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","$state","go","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","options","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","window","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","setElements","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","bind","sortChanged","filtersChanged","toggleDetailView","toggleView","activeElement","setActiveElement","page","fetch","then","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","view","routingArgs","goToViewStatePath","id","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","$modal","title","message","positive","negative","open","backdrop","templateUrl","result","dataProvider","formatter","resultModifier","minimumInputLength","key","dataProviderFilter","idFunction","timeout","opt","ressource","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","cancel","resources","resource","results","length","more","value","tmp","shift","formatResult","formatSelection","initSelection","directive","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","on","$","target","closest","ctrlKey","shiftKey","$apply","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","attrs","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$http","$document","downloadService","elm","get","download","success","data","url","notificationsService","transclude","args","headerTitle","noteditable","notdeletable","transcludeFn","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","onCancel","onDelete","successDeleteMessage","errorDeleteMessage","clone","transcludedScope","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","find","append","which","ngEnter","preventDefault","input","error","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","put","showTimeout","triggerHandler","applyClass","classes","promiseGetter","promise","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","idRand","String","random","$watchCollection","allSelected","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","className","maxElements","maxAlertMessage","onTagDeleted","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","y","m","day","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","isObject","hasOwnProperty","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","service","iframe","useFullHost","createElement","display","appendChild","fullHost","location","protocol","host","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","add","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","$q","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","cache","updateLayout","containers","container","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","generateId","prefix","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildParameters","parameters","concat","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","number","all","getList","getFirst","getById","one","restangularizeElement","preventObjectUpdate","updateAll","patch","patchAll","create","post","deleteAll","saveAll","getNew","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters"],"mappings":"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","file":"ev-fdm-core.min.js","sourcesContent":["'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.elementName = elementName;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.$scope = $scope;\n            this.$scope.filters = {};\n            this.$scope.sortKey = this.defaultSortKey;\n            this.$scope.reverseSort = this.defaultReverseSort;\n\n            this.setElements(elements);\n\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', this.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(newPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', this.$scope.sortKey, this.$scope.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n\n            /*\n                Filter method that should be called from the template\n             */\n            this.$scope.filtersChanged = function() {\n\n                var eventArgs = angular.copy(arguments);\n                Array.prototype.unshift.call(eventArgs, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                return this.update(1, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this);\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                this.toggleView('view', element);\n            }.bind(this);\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === this.elementName) {\n                    this.$scope.activeElement = null;\n                }\n                else {\n                    this.setActiveElement();\n                }\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::updated', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::created', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n\n            this.$scope.$on(this.elementName + '::deleted', function(event) {\n                this.update(this.$scope.currentPage, this.$scope.filters, this.$scope.sortKey, this.$scope.reverseSort);\n            }.bind(this));\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            return this.fetch(page, filters, sortKey, reverseSort).then(function(elements) {\n                this.setElements(elements);\n                return elements;\n            }.bind(this));\n        };\n\n        ListController.prototype.setElements = function(elements) {\n            this.$scope[this.elementName] = elements;\n            this.$scope.currentPage = elements.pagination.current_page;\n            this.$scope.pageCount = elements.pagination.total_pages;\n            this.$scope.totalElement = elements.pagination.total;\n\n            if(!this.$scope.selectedElements || !this.$scope[this.elementName]) {\n                this.$scope.selectedElements  = [];\n            }\n            else {\n                var selectedElementsIds = this.$scope[this.elementName].map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.$scope[this.elementName], function(element) {\n                    if (restangular.configuration.getIdFromElem(element) == $state.params[this.activeIdSelector]) {\n                        this.$scope.activeElement = element;\n                    }\n                }.bind(this));\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            var idFunction;\n            var timeout = 600;\n            var opt = {};\n            if (typeof dataProvider === 'object') {\n                opt = dataProvider;\n                formatter = opt.formatter;\n                resultModifier = opt.resultModifier;\n                minimumInputLength = opt.minimumInputLength;\n                key = opt.key;\n                dataProviderFilter = opt.dataProviderFilter;\n                dataProvider = opt.dataProvider;\n                timeout = opt.timeout || timeout;\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n\n                if (typeof opt.id === 'string') {\n                    idFunction = function(ressource) {return ressource[opt.id];};\n                } else if (typeof opt.id === 'function') {\n                    idFunction = opt.id;\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                },\n                id: idFunction,\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get = function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang = function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-lg\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{active: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('[type=checkbox]')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            controller: ['$scope', function ($scope) {\n                $scope.idRand = String(Math.random());\n            }],\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"selected\"><label ng-attr-for=\"{{idRand}}\"></label></span>'\n            // template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span><input ng-attr-id=\"{{idRand}}\" type=\"checkbox\" class=\"tick-checkbox\" ng-checked=\"allSelected\" ng-click=\"toggleSelectAll()\"><label ng-attr-for=\"{{idRand}}\"></label></span>',\n            //'<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n                scope.idRand = String(Math.random());\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var self = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort),\n                    reverseSortSet = reverseSortGet.assign,\n                    sortKeyGet = $parse($attrs.sortBy),\n                    sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    self.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    self.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if(key == this.sortKey) {\n                        this.reverseSort = !this.reverseSort;\n                    }\n                    else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if(reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if(sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n\n            }]\n        };\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if(ctrl.sortKey === key){\n                        element.removeClass('no-sort');\n                        if(ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        }\n                        else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    }\n                    else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            }\n        }\n    });","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&'\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"label-btn\" ' +\n                                'ng-click=\"remove($index)\"><span class=\"icon-bin\"></span></button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred && model.evChanged);\n\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n.service('DownloadService', ['$window', '$document', function($window, $document) {\n    var iframe = null;\n    return {\n        /**\n         * Download a specific url using an iframe\n         *\n         * @param  {string}  url         the url you want to download\n         * @param  {boolean} useFullHost either you want to prepend the full host or not (without trailing slash!)\n         */\n        download: function(url, useFullHost) {\n            if(!iframe) {\n                iframe = $document[0].createElement('iframe');\n                iframe.style.display = 'none';\n                $document[0].body.appendChild(iframe);\n            }\n\n            if(useFullHost) {\n                var fullHost = $window.location.protocol + '//' + $window.location.host;\n                url = fullHost + url;\n            }\n\n            iframe.src = url;\n        }\n    };\n}]);\n","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = changesData[embedName];\n                            } else if (typeof changesData[embedName].data !== 'object' ||\n                                       Array.isArray(changesData[embedName].data)) {\n                                objectData[embedName].data = changesData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = {};\n\n            options = options || {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(this.defaultEmbed));\n            }\n            else if (this.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(this.defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed, options) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed, options) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed, options) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed, options) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed, options) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    if (!options || !options.preventObjectUpdate) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                    }\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed, options) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        if (!options || !options.preventObjectUpdate) {\n                            RestangularStorage.updateObjectFromResult(element, result);\n                        }\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});"],"sourceRoot":"/source/"}