{"version":3,"sources":["directives/EvMenuDirective.js","factories/FilterServiceFactory.js","storages/AjaxStorage.js","storages/Storage.js","app.js","animations/PictureListAnimation.js","animations/TagListAnimation.js","controllers/ListController.js","controllers/NotificationsController.js","controllers/SearchController.js","directives/AccordionDirective.js","directives/ActivableDirective.js","directives/ClearableDirective.js","directives/DatePickerDirective.js","directives/DownloadDirective.js","directives/EditSection.js","directives/EnterDirective.js","directives/ErrorMessageDirective.js","directives/ErrorsDirective.js","directives/FlagDirective.js","directives/FocusDirective.js","directives/FormGroupDirective.js","directives/LinkDisabledDirective.js","directives/LoadingDotsDirective.js","directives/MouseFollowerDirective.js","directives/PaginationDirective.js","directives/PictureListDirective.js","directives/PopoverExtendDirective.js","directives/PromiseDirective.js","directives/PromiseProgressDirective.js","directives/ResizableColumnDirective.js","directives/ResolvingStateDirective.js","directives/ResponsiveViewportDirective.js","directives/SelectLanguageDirective.js","directives/SelectableDirective.js","directives/SortableDirective.js","directives/StopEventPropagationDirective.js","directives/SubmitDirective.js","directives/TabDirective.js","directives/TagListDirective.js","directives/ThrottleDirective.js","directives/ValidableDirective.js","directives/ValueDirective.js","factories/ConfirmBox.js","factories/Select2Configuration.js","filters/CleanupDate.js","filters/CssifyFilter.js","filters/Map.js","filters/PrettySecsFilter.js","filters/ReplaceFilter.js","filters/SumFilter.js","filters/TextSelectFilter.js","filters/UnsafeFilter.js","services/DownloadService.js","services/FilteringService.js","services/ModalService.js","services/NotificationsService.js","services/PanelService.js","services/SortService.js","services/UtilService.js","storages/AbstractAutocompleteStorage.js","storages/RestangularStorage.js","storages/localstorageService.js","directives/FormDirectives/DisableValidationDirective.js","directives/FormDirectives/StrictMinDirective.js"],"names":["MenuManagerProvider","findTab","stateName","res","angular","forEach","self","tabs","tab","state","selectTab","activeTab","lastTab","active","this","addTab","push","$get","$rootScope","$on","event","toState","toParams","fromState","name","toTab","EvMenuDirective","menuManager","restrict","replace","template","controller","$scope","$state","go","FilterServiceFactory","$timeout","FilterService","filters","listeners","$watch","newFilters","oldFilters","modifier","call","callListeners","setModifier","callback","isFunction","addListener","scope","removeListener","listener","index","splice","AjaxStorage","$http","$q","$cacheFactory","utilService","$log","launchRequest","options","cache","key","JSON","stringify","cached","httpCache","get","id","generateId","requestConfig","url","method","responseType","headers","Content-Type","data","promise","then","response","success","result","warn","error","errors","authenticated","window","location","href","reject","put","Storage","module","config","cfpLoadingBarProvider","includeSpinner","parentSelector","$tooltipProvider","placement","popupDelay","setTriggers","mouseenter","click","focus","never","focus-not-typing","run","$location","uiSelect2Config","minimumResultsForSearch","allowClear","split","moment","lang","navigator","language","animation","enter","element","done","width","css","jQuery","animate","opacity","isCancelled","stop","leave","move","addClass","removeClass","factory","$stateParams","restangular","ListController","elementName","elements","defaultSortKey","defaultReverseSort","activeIdSelector","sortKey","reverseSort","updateScope","changePage","newPage","eventArgs","copy","arguments","Array","prototype","unshift","currentPage","$broadcast","apply","update","sortChanged","toggleDetailView","toggleView","bind","activeElement","setActiveElement","page","fetch","pagination","current_page","pageCount","total_pages","totalElement","total","selectedElements","selectedElementsIds","map","elt","configuration","getIdFromElem","filter","indexOf","isDefined","params","elementId","view","routingArgs","goToViewStatePath","extend","NotificationsController","NotificationsService","notifications","list","activeNotification","getClass","notification","type","ERROR","SUCCESS","WARNING","INFO","remove","SearchController","filtersChanged","directive","require","link","attr","accordionCtrl","setIsOpenAll","isOpen","groups","group","showableAccordionButton","length","every","some","expandAll","collapseAll","$attrs","$parse","activeElementGet","activeElementSet","assign","newActiveElement","toggleActive","value","undefined","$eval","activeChange","ctrl","elementGetter","activable","currentElement","newCurrentElement","on","$","target","closest","ctrlKey","shiftKey","$apply","clearButton","after","val","$setViewValue","$isEmpty","$viewValue","isEmpty","hide","show","attrs","ngModelCtrl","dateCanBeInTheFutur","futurAllowed","dateFormat","datepicker","maxDate","onSelect","date","$document","downloadService","elm","download","notificationsService","transclude","args","title","headerTitle","noteditable","notdeletable","templateUrl","transcludeFn","setEditMode","editMode","_transcludedScope","edit","editform","triedToSave","changeToEditMode","onEdit","save","$valid","resultSave","onSave","inProgress","addSuccess","text","successMessage","addError","errorMessage","cancel","onCancel","onDelete","successDeleteMessage","errorDeleteMessage","clone","transcludedScope","showErrorMessage","fieldName","errorName","field","$dirty","$error","$invalid","find","append","which","ngEnter","preventDefault","input","provider","$evalAsync","$element","toggleError","toggleClass","oldNgClick","ngClick","linkDisabled","oldValue","unbind","$set","removeAttr","evt","left","pageX","top","pageY","ELLIPSIS","currPage","nbPage","onPageChange","paginationButtons","prevClass","nextClass","generateButtons","i","nbAround","class","previousPage","oldPage","nextPage","pictures","editable","onChange","showUpdate","colNumber","onPictureDeleted","elem","colNumberBootstrap","onUpdate","console","log","$templateCache","showTimeout","triggerHandler","applyClass","classes","promiseGetter","emptyMessage","promiseDefaultStyles","isArray","progressBar","document","querySelector","newPromise","progress","$window","getLimitWidth","minOrMax","limitWidth","getMinDelta","getMaxDelta","Number","POSITIVE_INFINITY","handleElm","x1","body","style","cursor","stopPropagation","nextElm","next","elmWidth","outerWidth","nextElmWidth","maxDelta","Math","min","minDelta","max","helper","onMousemove","delta","onMouseup","removeEventListener","addEventListener","dotX","current","substring","fromParams","fallback","message","breakpoints",400,600,900,"setXsBreakpoint","breakpoint","setSmBreakpoint","setMdBreakpoint","setBreakpoints","breaks","Error","sort","updateViewport","_class","largeViewport","Object","keys","hasClass","availableLang","defaultLang","setAvailableLang","setDefaultLang","cfg","selectedLang","toggleRangeUpTo","firstIndex","lastIndex","lastElement","getElementAtIndex","shiftSelectedElements","unselectElement","isElementSelected","lastClickedIndex","selectElement","selectableElements","selectedElementsGet","selectedElement","keyCode","toggleSelection","toggleSelectAll","shiftedClick","registerElement","unregisterElement","areAllElementSelected","ctrls","handleClick","$index","is","currentElementGetter","selectable","modelCtrl","selected","$watchCollection","allSelected","reverseSortGet","reverseSortSet","sortKeyGet","sortBy","sortKeySet","newReverseSort","newSortKey","sortChange","setClasses","sortable","evStopEventPropagation","eventName","trim","e","validables","$addValidable","makeValidable","fn","form","$event","panes","select","pane","addPane","selectFuture","futurePane","isSelected","isShowed","selectNext","selectedIndex","nextPanes","slice","selectPrevious","previousPanes","reverse","alwaysShow","tabShow","tabTitle","tabIcon","tabClick","tabsCtrl","childScope","$selectNext","$selectPrevious","el","children","tabReset","$destroy","trackBy","displayElement","className","maxElements","maxAlertMessage","onTagDeleted","priority","originalSetViewValue","originalViewListeners","$viewChangeListeners","throttleGuard","callViewListeners","$modelValue","$exceptionHandler","controllers","model","evSubmit","evFormGroup","markAsBlurred","evBlurred","markAsChanged","evChanged","displayErrors","evHasError","noValue","$modal","positive","negative","open","backdrop","dataProvider","formatter","resultModifier","minimumInputLength","dataProviderFilter","filterTextTimeout","oldQueryTerm","isNumber","query","timeoutDuration","term","resources","resource","results","more","tmp","shift","formatResult","formatSelection","initSelection","y","m","day","possibilities","prop","hasOwnProperty","MapFilterProvider","assertMapping","hasOwnProp","maps","defaults","registerMapping","mapping","registerDefault","isObject","timeInSeconds","numSec","parseInt","hours","floor","minutes","seconds","time","string","regex","objects","getValue","reduce","object","parseFloat","choices","$sce","trustAsHtml","service","iframe","createElement","display","appendChild","src","setSelectedFilter","filterName","getSelectedFilter","getAllFilters","ModalService","$compile","$controller","_readOptions","parentScope","$new","_","modalDom","modal","keyboard","add","TYPES","queueNotification","queue","without","delay","DEFAULT_DELAY","prepareNotification","DEFAULT_CONTAINER_ID","MAX_VISIBLE_PANEL","$animate","getBeforePanelElm","containerId","beforePanel","panels","panelsList","panelName","panel","parent","insertedPanel","isBeforePanel","getTemplatePromise","templateURL","when","updateLayout","containers","container","panelElements","makeArray","checkStacking","offsetWidth","scrollWidth","addToDom","toLowerCase","templatePromises","html","getPanels","close","registerContainer","timerWindowResize","panelService","currentSortValue","isReverse","getCurrentSort","sortValue","getSortCSS","setReverse","generatedIds","prefix","random","AbstractAutocompleteStorage","AbstractStorage","generateAutocompleteConfig","searchCallback","matchingCallback","minLength","me","q","searchParam","toUpperCase","RestangularStorage","resourceName","defaultEmbed","emitEventCallbackCreator","buildSortBy","sortDir","buildEmbed","embed","join","buildParameters","parameters","concat","buildFilters","filterKey","uuid","isDate","toISOString","updateObjectFromResult","merge","objectData","resultData","resultEmbeds","embedName","embeds","stripRestangular","updateObjectBeforePatch","changes","objectEmbeds","changesData","getAll","number","all","getList","getFirst","getById","one","restangularizeElement","updateAll","patch","patchAll","create","post","deleteAll","saveAll","getNew","angularLocalStorage","constant","expiry","path","setItem","removeItem","cookie","notify","substr","browserSupportsLocalStorage","addToLocalStorage","newvalue","storageType","addToCookies","toJson","localStorage","getFromLocalStorage","getFromCookies","item","getItem","charAt","fromJson","removeFromLocalStorage","removeFromCookies","getKeysForLocalStorage","prefixLength","Description","clearAllFromLocalStorage","clearAllFromCookies","browserSupportsCookies","cookieEnabled","expiryDate","Date","setTime","getTime","toGMTString","encodeURIComponent","cookies","thisCookie","decodeURIComponent","isSupported","set","clearAll","control","disableValidation","$addControl","validity","validationToken","$setValidity","$removeControl","validator","viewValue","testedValue","strictMin","$parsers","$formatters"],"mappings":"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","file":"ev-fdm-core.min.js","sourcesContent":["'use strict';\n\nfunction MenuManagerProvider() {\n\n    var self = this;\n    this.tabs = [];\n    this.activeTab = null;\n    this.lastTab = null;\n\n    this.addTab = function(tab) {\n        this.tabs.push(tab);\n        return this;\n    };\n\n    function findTab(stateName) {\n        var res = null;\n        angular.forEach(self.tabs, function(tab) {\n            if(stateName === tab.state) {\n                res = tab;\n            }\n        });\n\n        return res;\n    }\n\n    function selectTab(tab) {\n        tab = tab || {};\n        tab = findTab(tab.state);\n\n        if(!tab) {\n            return;\n        }\n\n        if(self.activeTab) {\n            self.lastTab = self.activeTab;\n            self.activeTab.active = false;\n        }\n\n        tab.active = true;\n        self.activeTab = tab;\n    }\n\n    this.$get = ['$rootScope', '$state', function($rootScope, $state) {\n\n        // Handle first page load\n        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState) {\n            if (fromState.name === '') {\n                var toTab = findTab(toState.name);\n\n                if(toTab) {\n                    selectTab(toTab);\n                }\n            }\n        });\n\n        $rootScope.$on('$stateChangeError', function(event) {\n            selectTab(self.lastTab);\n        });\n\n        return {\n            tabs: self.tabs,\n            selectTab: selectTab\n        };\n    }];\n}\n\nfunction EvMenuDirective(menuManager) {\n    return {\n        restrict: 'E',\n        replace: true,\n        template:   '<ul class=\"module-tabs ev-header nav nav-tabs\" ng-cloak>' +\n                        '<li ng-repeat=\"tab in tabs\" ng-class=\"{active: tab.active}\">' +\n                            '<a ng-click=\"selectTab(tab)\">{{ tab.name }}</a>' +\n                        '</li>' +\n                    '</ul>',\n        controller: [ '$scope', '$state', '$rootScope', function($scope, $state, $rootScope) {\n            $scope.tabs = menuManager.tabs;\n\n            if($rootScope['evmenu-state']) {\n                menuManager.selectTab($rootScope['evmenu-state']);\n            }\n\n            $scope.selectTab = function(tab) {\n                menuManager.selectTab(tab);\n                $state.go(tab.state);\n            };\n        }]\n    };\n}\n\nangular.module('ev-fdm')\n    .provider('menuManager', [MenuManagerProvider])\n    .directive('evMenu', ['menuManager', EvMenuDirective]);","'use strict';\n\nfunction FilterServiceFactory($rootScope, $timeout) {\n\n    function FilterService() {\n        \n        this.filters = {};\n\n        var listeners = [];\n        var modifier = null;\n\n        var self = this;\n        $rootScope.$watch(function() { return self.filters; }, function(newFilters, oldFilters) {\n            if(oldFilters === newFilters) {\n                return;\n            }\n\n            $timeout(function() {\n                if(self.modifier) {\n                    self.modifier.call(self, newFilters, oldFilters);\n                }\n                else {\n                    self.callListeners();\n                }\n            }, 0);\n\n        }, true);\n\n        this.setModifier = function(callback) {\n            if(angular.isFunction(callback)) {\n                this.modifier = callback;\n            }\n        };\n\n        this.addListener = function(scope, callback) {\n            if(angular.isFunction(callback)) {          \n                listeners.push(callback);\n\n                scope.$on('$destroy', function() {\n                    self.removeListener(callback);\n                });\n            }\n        };\n\n        this.removeListener = function(callback) {\n            angular.forEach(listeners, function(listener, index) {\n                if(listener === callback) {\n                    listeners.splice(index, 1);\n                }\n            });\n        };\n\n        this.callListeners = function() {\n            var self = this;\n            angular.forEach(listeners, function(listener) {\n                listener(self.filters);\n            })\n        }\n    }\n\n    return new FilterService();\n}\n\nangular.module('ev-fdm')\n    .factory('FilterService', ['$rootScope', '$timeout', FilterServiceFactory]);\n","'use strict';\n\nfunction AjaxStorage($http, $q, $cacheFactory, utilService, $log) {\n\n    var httpCache = $cacheFactory('customHttpCache');\n\n    function launchRequest(options) {\n\n        if(options.cache) {\n            var key = JSON.stringify(options),\n                cached = httpCache.get(key);\n\n            if(cached) {\n                return cached;\n            }\n        }\n\n        // Add the request id... Ah, history...\n        options.id = utilService.generateId('proxy:request:');\n        var requestConfig = {\n            url         : '/backoffice/common/xhr',\n            method      : 'POST',\n            responseType: 'json',\n            headers     : {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n            },\n            data: options\n        };\n\n        // We have to use then instead of success/error since they prevent from changing the value in the promise\n        // We don't treat the error case since the server always returns a 200 status code\n        var promise = $http(requestConfig)\n            .then(function(response) {\n\n                // php's xhr is not really consistent, let's be more\n                if (!response.data.success) {\n                    $log.warn(response.data.error, response.data.errors);\n\n                    // Not authenticated, redirect on homepage\n                    if (response.data.result[options.id].authenticated === false) {\n                        window.location.href = '/login?expired=1';\n                    }\n\n                    return $q.reject(response.data.result[options.id]);\n                }\n\n                return response.data.result[options.id].data;\n            });\n\n        if(options.cache) {\n            httpCache.put(key, promise);\n        }\n\n        return promise;\n    }\n\n    return {\n        launchRequest: launchRequest\n    };\n\n}\n\nangular.module('ev-fdm')\n    .service('AjaxStorage', ['$http', '$q', '$cacheFactory', 'UtilService', '$log', AjaxStorage]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nfunction Storage(AjaxStorage) {\n\n        return {\n\n            get: function(options) {\n                return AjaxStorage.launchRequest(options);\n            }\n        };\n}\n\nmodule.service('Storage', ['AjaxStorage', Storage]);","/**\n * Core Application\n */\n\n// Angular depedencies for this app\nangular.module('ev-fdm', ['ui.router', 'ui.date', 'chieffancypants.loadingBar',\n        'ui.bootstrap.tooltip', 'ui.bootstrap.popover', 'ui.select2', 'angularMoment', 'ngAnimate', 'checklist-model',\n        'ui.bootstrap', 'restangular'])\n\n\n// configure the loading bar to be displayed\n// just beneath the menu\n.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n    cfpLoadingBarProvider.parentSelector = '#menu';\n}])\n\n.config(['$tooltipProvider', function($tooltipProvider) {\n    $tooltipProvider.options({\n        placement: 'bottom',\n        popupDelay: 100\n    });\n    $tooltipProvider.setTriggers({\n        'mouseenter': 'mouseleave',\n        'click': 'click',\n        'focus': 'blur',\n        'never': 'mouseleave',\n\n        // Custom event, the tooltip appears when the element has the focus, and disappear when a key\n        // in pressed (or the element has blurred).\n        'focus-not-typing': 'blur-or-typing'\n    });\n}])\n\n.config(['RestangularProvider', function(restangularProvider) {\n\n}])\n\n\n// ----------------------------------------------------\n// ATTACH TO MODULE\n// ----------------------------------------------------\n\n.run(['$rootScope', '$state', '$location', 'uiSelect2Config', function($rootScope,\n        $state, $location, uiSelect2Config) {\n\n    // defaults for select2\n    uiSelect2Config.minimumResultsForSearch = 7;\n    uiSelect2Config.allowClear = true;\n\n    // On the first loading state, we set this value\n    // It used by the ev-menu directive which is loaded asynchronously\n    // and can't listen to this event on the first load.\n    $rootScope.$on('$stateChangeStart', function(event, toState) {\n        toState.state = toState.name.split('.')[0];\n        $rootScope['evmenu-state'] = toState;\n    });\n\n\n    // language for the user OR navigator language OR english\n    window.moment.lang([window.navigator.language, 'en']);\n\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n   .animation('.ev-animate-picture-list', function() {\n\n    return {\n      enter : function(element, done) {\n            var width = element.width();\n            element.css('opacity', 0);\n            jQuery(element).animate({\n                opacity: 1\n            }, 300, done);\n\n            return function(isCancelled) {\n                if(isCancelled) {\n                    jQuery(element).stop();\n                }\n            };\n        },\n        leave : function(element, done) {\n            element.css('opacity', 1);\n\n            jQuery(element).animate({\n                opacity: 0.3\n            }, 300, done);\n\n            return function(isCancelled) {\n              if(isCancelled) {\n                jQuery(element).stop();\n              }\n            };\n        },\n        move : function(element, done) {\n          element.css('opacity', 0);\n          jQuery(element).animate({\n              opacity: 1\n          }, done);\n\n          return function(isCancelled) {\n              if(isCancelled) {\n                  jQuery(element).stop();\n              }\n          };\n        },\n\n        // you can also capture these animation events\n        addClass : function(element, className, done) {},\n        removeClass : function(element, className, done) {}\n    };\n});\n","angular.module('ev-fdm')\n    .animation('.ev-animate-tag-list', function() {\n        return {\n          enter : function(element, done) {\n                element.css('opacity', 0);\n                jQuery(element).animate({\n                    opacity: 1\n                }, 300, done);\n\n                return function(isCancelled) {\n                    if(isCancelled) {\n                        jQuery(element).stop();\n                    }\n                };\n            },\n            leave : function(element, done) {\n                element.css('opacity', 1);\n\n                jQuery(element).animate({\n                    opacity: 0.3\n                }, 300, done);\n\n                return function(isCancelled) {\n                  if(isCancelled) {\n                    jQuery(element).stop();\n                  }\n                };\n            },\n            move : function(element, done) {\n              element.css('opacity', 0);\n              jQuery(element).animate({\n                  opacity: 1\n              }, done);\n\n              return function(isCancelled) {\n                  if(isCancelled) {\n                      jQuery(element).stop();\n                  }\n              };\n            },\n\n            // you can also capture these animation events\n            addClass : function(element, className, done) {},\n            removeClass : function(element, className, done) {}\n        };\n    });\n","angular.module('ev-fdm')\n    .factory('ListController', ['$rootScope', '$state', '$stateParams', 'Restangular', function($rootScope, $state, $stateParams, restangular) {\n\n        function ListController($scope, elementName, elements, defaultSortKey, defaultReverseSort, activeIdSelector) {\n            var self = this;\n\n            if (typeof elementName === 'object') {\n                defaultReverseSort = elementName.defaultReverseSort;\n                defaultSortKey = elementName.defaultSortKey;\n                elements = elementName.elements;\n                activeIdSelector = elementName.activeIdSelector || 'id';\n                elementName = elementName.elementName;\n            }\n\n            /*\n                Properties\n             */\n            this.$scope = $scope;\n            this.elementName = elementName;\n            this.elements = elements;\n            this.defaultSortKey = defaultSortKey;\n            this.defaultReverseSort = defaultReverseSort;\n            this.sortKey = this.defaultSortKey;\n            this.reverseSort = this.defaultReverseSort;\n            this.activeIdSelector = activeIdSelector || 'id';\n\n            this.updateScope();\n\n            /*\n                Pagination method that should be called from the template\n             */\n            this.$scope.changePage = function(newPage) {\n\n                var eventArgs = angular.copy(arguments);\n\n                Array.prototype.unshift.call(eventArgs, 'common::pagination.changed', self.$scope.currentPage, newPage);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n                self.update(newPage, self.filters, self.sortKey, self.reverseSort);\n            };\n\n            /*\n                Sort method that should be called from the template\n             */\n            this.$scope.sortChanged = function() {\n                self.sortKey = self.$scope.sortKey;\n                self.reverseSort = self.$scope.reverseSort;\n\n                var eventArgs = angular.copy(arguments);\n\n                Array.prototype.unshift.call(eventArgs, 'common::sort.changed', self.sortKey, self.reverseSort);\n                $rootScope.$broadcast('common::sort.changed', self.sortKey, self.reverseSort);\n                $rootScope.$broadcast.apply($rootScope, eventArgs);\n\n                self.update(1, self.filters, self.sortKey, self.reverseSort);\n            };\n\n            /*\n                Display an item by changing route\n             */\n            this.$scope.toggleDetailView = function(element) {\n                self.toggleView('view', element);\n            };\n\n            /*\n             * Update the view when filter are changed in the SearchController\n             */\n            $scope.$on('common::filters.changed', function(event, filters) {\n                this.filters = filters;\n                this.sortKey = this.defaultSortKey;\n                this.update(1, this.filters, this.sortKey, this.reverseSort);\n            }.bind(this));\n\n            /*\n                When returning to the list state remove the active element\n             */\n            this.$scope.$on('$stateChangeSuccess', function(event, toState) {\n                if(toState.name === self.elementName) {\n                    self.$scope.activeElement = null;\n                }\n                else {\n                    self.setActiveElement();\n                }\n            });\n\n            $scope.$on(this.elementName + '::updated', function(event) {\n                self.update(self.$scope.currentPage, self.filters, self.sortKey, self.reverseSort);\n            });\n\n            $scope.$on(this.elementName + '::created', function(event) {\n                self.update(self.$scope.currentPage, self.filters, self.sortKey, self.reverseSort);\n            });\n\n            $scope.$on(this.elementName + '::deleted', function(event) {\n                self.update(self.$scope.currentPage, self.filters, self.sortKey, self.reverseSort);\n            });\n        }\n\n        ListController.prototype.update = function(page, filters, sortKey, reverseSort) {\n            this.fetch(page, filters, sortKey, reverseSort).then(function(elements) {\n                this.elements = elements;\n                this.updateScope();\n            }.bind(this));\n        };\n\n        ListController.prototype.updateScope = function () {\n            this.$scope[this.elementName] = this.elements;\n            this.$scope.currentPage = this.elements.pagination.current_page;\n            this.$scope.pageCount = this.elements.pagination.total_pages;\n            this.$scope.totalElement = this.elements.pagination.total;\n            this.$scope.sortKey = this.sortKey;\n            this.$scope.reverseSort = this.reverseSort;\n\n            if (!this.$scope.selectedElements || !this.elements) {\n                this.$scope.selectedElements = [];\n            } else {\n                var selectedElementsIds = this.elements.map(function(elt) {\n                    return restangular.configuration.getIdFromElem(elt);\n                });\n                this.$scope.selectedElements = this.$scope.selectedElements.filter(function(elt) {\n                    return selectedElementsIds.indexOf(restangular.configuration.getIdFromElem(elt)) !== -1;\n                });\n            }\n            this.setActiveElement();\n        };\n\n        ListController.prototype.setActiveElement = function() {\n            var self = this;\n            this.$scope.activeElement = null;\n\n            if(angular.isDefined($state.params[this.activeIdSelector])) {\n                angular.forEach(this.elements, function(element) {\n                    var elementId = restangular.configuration.getIdFromElem(element);\n                    if (elementId == $state.params[self.activeIdSelector]) {\n                        self.$scope.activeElement = element;\n                    }\n                });\n            }\n        };\n\n        ListController.prototype.toggleView = function(view, element, routingArgs) {\n\n            if (!element) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n                return;\n            }\n\n            var id = restangular.configuration.getIdFromElem(element);\n\n            if (!id || $stateParams.id === id) {\n                $rootScope.$broadcast('common::list.toggleView', view, 'close');\n                $state.go(this.goToViewStatePath(false));\n            }\n            else {\n                var params = {};\n                params[this.activeIdSelector] = id;\n\n                angular.extend(params, routingArgs);\n\n                $rootScope.$broadcast('common::list.toggleView', view, 'open');\n\n                $state.go(this.goToViewStatePath(view, element), params);\n            }\n        };\n\n        ListController.prototype.goToViewStatePath = function(view, element) {\n            return this.elementName + (view ? '.' + view : '');\n        };\n\n        return ListController;\n    }]);\n","'use strict';\n\nvar NotificationsController = ['$scope', 'NotificationsService', function($scope, NotificationsService) {\n    $scope.notifications = NotificationsService.list;\n    \n    $scope.$watch(function() {\n        return NotificationsService.activeNotification;\n    }, function() {\n        $scope.activeNotification = NotificationsService.activeNotification;\n    });\n    \n    $scope.getClass = function (notification){\n        if (!notification) return '';\n        switch (notification.type){\n            case NotificationsService.type.ERROR:\n                return 'danger';\n            case NotificationsService.type.SUCCESS:\n                return 'success';\n            case NotificationsService.type.WARNING:\n                return 'warning';\n            case NotificationsService.type.INFO:\n                return 'info';\n            default:\n                return 'success';\n        }\n    };\n\n    $scope.remove = function(notification) {\n        NotificationsService.remove(notification);\n    };\n}];\n\nangular.module('ev-fdm')\n    .controller('NotificationsController', NotificationsController);","angular.module('ev-fdm')\n    .factory('SearchController', ['$rootScope', function($rootScope) {\n        function SearchController($scope) {\n            this.$scope = $scope;\n            this.$scope.filters = {};\n\n            $scope.filtersChanged = function() {\n                Array.prototype.unshift.call(arguments, 'common::filters.changed', this.$scope.filters);\n                $rootScope.$broadcast.apply($rootScope, arguments);\n            }.bind(this);\n        }\n\n        return SearchController;\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\n/**\n * evAccordion directive works as an attribute\n * and it's working with the accordion directive (required)\n *\n * His role is to add methods to the scope of the accordion\n */\nmodule.directive('evAccordion', ['accordionDirective', function(accordionDirective) {\n  return {\n    restrict:'A',\n    require: 'accordion',\n    link: function(scope, element, attr, accordionCtrl) {\n\n        scope.expandAll   = setIsOpenAll.bind(null, true);\n        scope.collapseAll = setIsOpenAll.bind(null, false);\n        scope.showableAccordionButton = showableAccordionButton;\n\n        // Set the isOpen property for ALL groups (to true or false)\n        function setIsOpenAll(isOpen) {\n            accordionCtrl.groups.forEach(function(group) {\n                group.isOpen = isOpen;\n            });\n        }\n\n        /**\n         * Should we display that 'type' of button?\n         *  - type can have the value: 'expand' or 'collapse'\n         *\n         * Expand btn is displayed when all groups are closed\n         * Collaspe btn is displayed when at least one group is open\n         */\n        function showableAccordionButton(type) {\n            var groups = accordionCtrl.groups;\n            if(groups.length === 0) {\n                return false;\n            }\n\n            if(type === 'expand') {\n                return groups.every(function(group) {\n                    return !group.isOpen;\n                });\n            } else {\n                return groups.some(function(group) {\n                    return group.isOpen;\n                });\n            }\n        }\n    }\n  };\n}]);\n","'use strict';\n\nangular.module('ev-fdm').directive('activableSet', function() {\n    return {\n        restrict: 'A',\n        scope: false,\n        controller: ['$scope', '$attrs', '$parse', function($scope, $attrs, $parse) {\n\n            var activeElementGet = $parse($attrs.activeElement);\n            var activeElementSet = activeElementGet.assign;\n\n            var self = this;\n            $scope.$watch(function() {\n                return activeElementGet($scope);\n            }, function(newActiveElement) {\n                self.activeElement = newActiveElement;\n            });\n\n           this.toggleActive = function(value) {\n                if(value !== this.activeElement) {\n                    if (activeElementSet) {\n                        activeElementSet($scope, value);\n                    }\n\n                    this.activeElement = value;\n                }\n                else {\n                    if(activeElementSet) {\n                        activeElementSet($scope, null);\n                    }\n\n                    this.activeElement = undefined;\n                }\n\n                $scope.$eval($attrs.activeChange);\n           };\n\n        }]\n    };\n});\nangular.module('ev-fdm').directive('activable', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: '^activableSet',\n        link: function(scope, element, attr, ctrl) {\n            element.addClass('clickable');\n            var elementGetter = $parse(attr.activable);\n            var currentElement = elementGetter(scope);\n\n\n            scope.$watch(function() { return elementGetter(scope); }, function(newCurrentElement) {\n              currentElement = newCurrentElement;\n            });\n\n            scope.$watch(\n                function() { return ctrl.activeElement; },\n                function(newActiveElement, oldActiveElement) {\n                    if(newActiveElement && currentElement === newActiveElement) {\n                        element.addClass('active');\n                    }\n                    else {\n                        element.removeClass('active');\n                    }\n                }\n            );\n\n            element.on('click', function(event) {\n                if(!$(event.target).closest('.block-active').length && !event.ctrlKey && ! event.shiftKey) {\n                    scope.$apply(function() {\n                        ctrl.toggleActive(currentElement);\n                    });\n                }\n            });\n        }\n    };\n}]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('clearable', [function() {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attr, ctrl) {\n\n            var clearButton = angular.element('<button class=\"clear\" ng-click=\"clear()\">×</button>');\n            element.after(clearButton);\n\n            clearButton.on('click', function() {\n                scope.$apply(function() {\n                    element.val(''); \n                    ctrl.$setViewValue('');\n                });\n            });\n\n            scope.$watch(function() { return ctrl.$isEmpty(ctrl.$viewValue); }, function(isEmpty) {\n                if(isEmpty) {\n                    clearButton.hide();\n                }\n                else {\n                    clearButton.show();\n                }\n            });\n\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm')\n.directive('evDatepicker', function() {\n    return {\n        restrict: 'A',\n        require : 'ngModel',\n        link : function (scope, element, attrs, ngModelCtrl) {\n\n            var dateCanBeInTheFutur = attrs.futurAllowed !== 'false',\n                dateFormat = attrs.dateFormat || 'dd/mm/yy';\n\n            $(function(){\n                element.datepicker({\n                    dateFormat: dateFormat,\n                    maxDate: dateCanBeInTheFutur? null : 0,\n                    onSelect:function (date) {\n                        ngModelCtrl.$setViewValue(date);\n                        scope.$apply();\n                    }\n                });\n\n            });\n        }\n    }\n});","angular.module('ev-fdm')\n.directive('download', ['$http', '$location', '$document', 'DownloadService', function($http, $location, $document, downloadService) {\n    return {\n        link: function(scope, elm, attrs) {\n            elm.on('click', function(event) {\n                $http.get(attrs.download).success(function(data) {\n                \tdownloadService.download(data.url);\n                });\n            });\n        }\n    }\n}]);","'use strict';\n\nangular.module('ev-fdm').directive('evEditSection', ['NotificationsService', function (notificationsService) {\n    return {\n        restrict: 'AE',\n        transclude: true,\n        scope: {\n            options: '=',\n            args: '=?',\n            title: '@', // deprecated\n            headerTitle: '@',\n            noteditable: '=?',\n            notdeletable: '=?',\n        },\n        templateUrl: 'ev-edit-section.html',\n\n        link: function(scope, element, attrs, controller, transcludeFn) {\n            var _transcludedScope = {};\n            var options = scope.options;\n            var triedToSave = false;\n\n            function setEditMode(editMode) {\n                _transcludedScope.edit = editMode;\n                scope.edit = editMode;\n                _transcludedScope.editform = scope.editform;\n            }\n\n\n            scope.changeToEditMode = function() {\n                if (!options.onEdit || options.onEdit && options.onEdit.apply(null, scope.args || []) !== false) {\n                    setEditMode(true);\n                }\n            };\n\n            scope.save = function() {\n                if (!scope.editform.$valid) {\n                    triedToSave = true;\n                    return;\n                }\n                var resultSave = !options.onSave || options.onSave && options.onSave.apply(null, scope.args || []);\n                if (resultSave && resultSave.then) {\n                    scope.inProgress = true;\n                    resultSave.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: options.successMessage || attrs.successMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: options.errorMessage || attrs.errorMessage });\n                        }\n                    );\n                } else if (resultSave !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.cancel = function() {\n                if (!options.onCancel || options.onCancel && options.onCancel.apply(null, scope.args || []) !== false) {\n                    setEditMode(false);\n                }\n            };\n\n            scope.delete = options.onDelete && function() {\n                var result = options.onDelete && options.onDelete.apply(null, scope.args || []);\n\n                if (result && result.then) {\n                    scope.inProgress = true;\n                    result.then(\n                        function success() {\n                            notificationsService.addSuccess({ text: attrs.successDeleteMessage });\n                            if (options.success) {\n                                options.success();\n                            }\n                            scope.inProgress = false;\n                            setEditMode(false);\n                        },\n                        function error() {\n                            scope.inProgress = false;\n                            notificationsService.addError({ text: attrs.errorDeleteMessage });\n                        }\n                    );\n                }\n            };\n\n            transcludeFn(function(clone, transcludedScope) {\n                // default state\n                transcludedScope.edit = scope.edit = !!attrs.edit;\n\n                // usefull methods\n                transcludedScope.showErrorMessage = function(fieldName, errorName) {\n                    var field = scope.editform[fieldName];\n                    return (triedToSave || field.$dirty) && (!errorName ? field.$invalid : field.$error[errorName]);\n                };\n\n                // transclude values\n                _transcludedScope = transcludedScope;\n\n                // append body to template\n                element.find('.transclude').append(clone);\n            });\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n.directive('ngEnter', function() {\n    return function(scope, element, attrs) {\n        element.bind(\"keydown keypress\", function(event) {\n            if(event.which === 13) {\n                scope.$apply(function(){\n                    scope.$eval(attrs.ngEnter);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n});","var module = angular.module('ev-fdm')\n.directive('evErrorMessage', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        scope: {\n            input: '=',\n            error: '@'\n        },\n        template: '<li ng-show=\"input[\\'evHasError\\'] && input.$error[error]\"><div ng-transclude></div></li>'\n    };\n});\n","var module = angular.module('ev-fdm')\n.directive('evErrors', function () {\n    return {\n        restrict: 'E',\n        transclude: true,\n        replace: true,\n        template: '<ul class=\"errors text-danger\" ng-transclude></ul>'\n    };\n});\n","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evFlag', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            lang: '='\n        },\n        template: '<i class=\"icon icon-flag flag-{{lang}}\"></i>'\n    };\n});","angular.module('ev-fdm')\n.directive('focus', [function() {\n    return {\n        link: function(scope, elm, attrs, ctrl) {\n            scope.$evalAsync(function() {\n                elm[0].focus();\n            });\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n.directive('evFormGroup', ['$parse', '$rootScope', function($parse, $rootScope) {\n    return {\n        restrict: 'EA',\n        scope: true,\n        transclude: true,\n        replace: true,\n        template: '<div class=\"form-group\" ng-transclude></div>',\n        controller: function($scope, $element, $attrs) {\n            this.toggleError = $element.toggleClass.bind($element, 'has-error');\n        }\n    };\n}]);\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('linkDisabled', function() {\n        return {\n            restrict: 'A',\n            link: function(scope, element, attrs) {\n                var oldNgClick = attrs.ngClick;\n                if (oldNgClick) {\n                    scope.$watch(attrs.linkDisabled, function (value, oldValue) {\n                        if (!! value) {\n                            element.unbind('click');\n                            element.attr('disabled', 'disabled');\n                        } else if (oldValue) {\n                            attrs.$set('ngClick', oldNgClick);\n                            element.bind('click', function () {\n                                scope.$apply(attrs.ngClick);\n                            });\n                            element.removeAttr('disabled');\n                        }\n                    });\n                }\n            }\n        };\n    });","'use strict';\n\nvar module = angular.module('ev-fdm')\n.directive('evLoadingDots', function () {\n    return {\n        restrict: 'E',\n        replace: true,\n        template: '<span class=\"loading-dots\"><span></span><span></span><span></span></span>'\n    };\n});","'use strict';\n\nangular.module('ev-fdm')\n    .directive('mouseFollower', ['$document', function ($document) {\n        return {\n            restrict: 'A',\n            link : function (scope, element, attr){\n                element = angular.element(element);\n                element.css('position', 'absolute');\n                element.css('z-index', 1500);\n\n                $document.on('mousemove', function(evt) {\n                    element.css({\n                        left:  evt.pageX,\n                        top:   evt.pageY\n                    });\n                });\n            }\n        }\n    }]);","'use strict';\n\nvar module = angular.module('ev-fdm')\n    .directive('evPagination', [function () {\n        var ELLIPSIS = '...';\n        return {\n            restrict: 'AE',\n            replace: true,\n            templateUrl: 'ev-pagination.html',\n            scope: {\n                currPage:     '=',\n                nbPage:       '=',\n                onPageChange: '='\n            },\n\n            link: function (scope){\n                scope.paginationButtons = [];\n                scope.prevClass = '';\n                scope.nextClass = '';\n\n                scope.currPage = scope.currPage || 1;\n                scope.nbPage   = scope.nbPage   || 1;\n\n                scope.generateButtons = function () {\n                    var i = 0;\n                    var nbAround = 2; // We want to have this amount of links around the current page.\n\n                    scope.paginationButtons = [];\n                    // Add 1\n                    scope.paginationButtons.push ({value: 1, class:scope.currPage==1 ? 'active':'' });\n\n                    // Add the 3 dots\n                    if (scope.currPage-nbAround > 2) {\n                        scope.paginationButtons.push({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = nbAround; i > 0; i--) {\n                        if (scope.currPage-i > 1) {\n                            scope.paginationButtons.push ({value: scope.currPage-i});\n                        }\n                    }\n\n                    // add the actual page\n                    if (scope.currPage != 1 && scope.currPage != scope.nbPage) {\n                        scope.paginationButtons.push ({ value: scope.currPage, class:'active' });\n                    }\n\n                    // add the surrounding page numbers\n                    for (i = 1; i <= nbAround; i++) {\n                        if (scope.currPage+i < scope.nbPage) {\n                            scope.paginationButtons.push ({value: scope.currPage+i});\n                        }\n                    }\n\n                    // Add the 3 dots\n                    if (scope.currPage+nbAround < scope.nbPage-1){\n                        scope.paginationButtons.push ({ value: ELLIPSIS, class:'disabled' });\n                    }\n\n                    // Add final page number\n                    if (scope.nbPage > 1){\n                        scope.paginationButtons.push ({value: scope.nbPage,class:scope.currPage==scope.nbPage ? 'active':''});\n                    }\n                    // if (scope.currPage == 1)            { scope.prevClass='inactive'; }\n                    // if (scope.currPage == scope.nbPage) { scope.nextClass='inactive'; }\n                };\n\n                scope.previousPage = function (){\n                    if (scope.currPage > 1) {\n                        var oldPage = scope.currPage;\n                        scope.currPage--;\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'previousPage');\n                        }\n                    }\n\n                };\n\n                scope.changePage = function (value){\n                    if (value != ELLIPSIS && value >=1 && value <= scope.nbPage){\n                         var oldPage = scope.currPage;\n                        scope.currPage = value;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(value, oldPage);\n                        }\n                    }\n                };\n\n                scope.nextPage = function (){\n                    if (scope.currPage < scope.nbPage){\n                        var oldPage = scope.currPage;\n                        scope.currPage++;\n\n                        if(angular.isFunction(scope.onPageChange)) {\n                            scope.onPageChange(scope.currPage, oldPage, 'nextPage');\n                        }\n                    }\n                };\n\n                scope.$watch('nbPage + currPage', function() {\n                    scope.generateButtons ();\n                });\n            }\n        };\n    }]);\n","/* global console */\nangular.module('ev-fdm').directive('evPictureList', function() {\n    return {\n        restrict: 'EA',\n        scope: {\n          pictures: '=',\n          editable: '=',\n          onDelete: '&',\n          onChange: '&',\n          showUpdate: '=',\n          language: '=',\n          colNumber: '=',\n          onPictureDeleted: '&'\n        },\n        templateUrl: 'ev-picture-list.html',\n        link: function($scope, elem, attrs) {\n            $scope.pictures = $scope.pictures || [];\n\n            // Number of columns for pictures\n            var colNumber = $scope.colNumber || 2;\n            // Convert it to bootstrap convention (12)\n            $scope.colNumberBootstrap = 12 / colNumber;\n\n            if (!attrs.onDelete) {\n                $scope.onDelete = function(params) {\n                    $scope.pictures.splice(params.index, 1);\n                    $scope.onPictureDeleted();\n                };\n                $scope.onUpdate = function(params) {\n                    // Not implemented yet\n                    console.log(params);\n                };\n            }\n        }\n    };\n});\n","(function () {\n    'use strict';\n        // update popover template for binding unsafe html\n    angular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function ($templateCache) {\n        $templateCache.put(\"template/popover/popover.html\",\n          \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen(), fade: animation() }\\\">\\n\" +\n          \"  <div class=\\\"arrow\\\"></div>\\n\" +\n          \"\\n\" +\n          \"  <div class=\\\"popover-inner\\\">\\n\" +\n          \"      <h3 class=\\\"popover-title\\\" ng-bind-html=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n          \"      <div class=\\\"popover-content\\\"ng-bind-html=\\\"content\\\"></div>\\n\" +\n          \"  </div>\\n\" +\n          \"</div>\\n\" +\n          \"\");\n    }]);\n    angular.module('ev-fdm')\n        .directive('popover', ['$timeout', function ($timeout) {\n        \treturn {\n        \t\trestrict: 'A',\n\t\t\t\tlink: function ($scope, elem, attrs) {\n                    var showTimeout;\n                    elem.bind('focus', function () {\n                        elem.triggerHandler('focus-not-typing');\n                    });\n\t\t\t\t\telem.bind('blur', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                    });\n                    elem.bind('keypress', function () {\n                        if (showTimeout) {$timeout.cancel(showTimeout);}\n                        elem.triggerHandler('blur-or-typing');\n                        showTimeout = $timeout(function () {\n                            elem.triggerHandler('focus-not-typing');\n                        }, 1000);\n                    });\n\t\t\t\t}\n        \t};\n        }]);\n}) ();\n","/**\n * Display a promise state as css classes (promise-resolving, promise-resolved, promise-rejected)\n * + Supports empty lists by displaying a message (promise-empty)\n *\n * Options :\n * - emptyMessage (string) - display a message when promise resolves to empty array\n * - promiseDefaultStyles (boolean, default true) - apply spinning evaneos logo when resolving\n *\n * Examples :\n * <div promise=\"myPromise\"\n *     empty-message=\"No quote\"\n *     promise-default-styles=\"true\">\n *\n */\nangular.module('ev-fdm').directive('promise', [\n    function () {\n        function applyClass(classes, element) {\n            element.removeClass('promise-resolved promise-resolving promise-empty promise-rejected');\n            element.addClass(classes);\n        }\n\n        return {\n            restrict: 'A',\n            replace: false,\n\n            controller: ['$scope', '$attrs', '$parse', '$element', function($scope, $attrs, $parse, $element) {\n                var promiseGetter = $parse($attrs.promise);\n                var emptyMessage = $attrs.emptyMessage;\n                var promiseDefaultStyles = ($attrs.promiseDefaultStyles !== 'false');\n                if (promiseDefaultStyles) {\n                    applyClass('promise-default-styles', $element);\n                }\n                if (emptyMessage) {\n                    $element.append('<div class=\"promise-empty-message\">' + emptyMessage + '</div>');\n                }\n                $scope.$watch(function() {\n                    return promiseGetter($scope);\n                }, function(promise) {\n                    if (promise) {\n                        applyClass('promise-resolving', $element);\n                        promise.then(function(result) {\n                            // make sure we are dealing with arrays\n                            // otherwise (not a collection, we can't assume it's empty or non empty)\n                            if (emptyMessage && angular.isArray(result) && !result.length) {\n                                applyClass('promise-resolved promise-empty', $element);\n                            } else {\n                                applyClass('promise-resolved', $element);\n                            }\n\n                            return result;\n                        }, function() {\n                            applyClass('promise-rejected', $element);\n                        });\n                    } else {\n                        applyClass('promise-resolved', $element);\n                    }\n                });\n            }]\n        };\n\n    }\n]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evPromiseProgress', [function () {\n\n    /*  ev-promise-progress\n        ===================\n        Hi! I'm a directive that link a progress bar to a promise.\n\n        Just give me a promise argument. I'll update automatically each time the `notify` callback is called. Of course\n        I assume that a percentage progress is given.\n\n        Beware! Each time the promise changes, and is replaced by a new one, I bind the progress bar to the new promise.\n        Without unbinding from the previous one. If it wasn't completed, it can leads to strange behavior (i.e. the\n        progress bar taking value from both at the same time, doing back and forth).\n    */\n            return {\n                restrict: 'A',\n                replace: true,\n                scope: {\n                    promise: '=evPromiseProgress',\n                },\n                template: '<div role=\"progressbar\" class=\"ev-progress\" aria-valuemin=\"0\" aria-valuemax=\"100\"' +\n                    'aria-valuenow=\"0\"> <div class=\"ev-progress-overlay\"></div> </div> ',\n                link: function ($scope, elem, attrs) {\n                    var progressBar = elem.find(angular.element(document.querySelector('.ev-progress-overlay')));\n                    progressBar.css({width: '0%'});\n                    $scope.$watch('promise', function (newPromise) {\n                        if (!newPromise || !newPromise.then) { return; }\n                        progressBar.css({width: '0%'});\n                        newPromise.then(null, null, function notify (progress) {\n                            if (typeof(progress) === 'object') {\n                                progress = progress.progress;\n                            }\n                            progressBar.css({width: progress + '%'});\n                        });\n                        newPromise.finally(function () {\n                            progressBar.css({width: '100%'});\n                        });\n                    });\n                }\n            };\n        }]);\n}());","'use strict';\n\n\nangular.module('ev-fdm')\n    .directive('evResizableColumn', ['$window', '$rootScope', function($window, $rootScope) {\n\n        function getLimitWidth(elm, minOrMax) {\n            var limitWidth  = elm.css(minOrMax + '-width').replace('px', '');\n            return (limitWidth !== \"none\") ? limitWidth : null;\n        }\n        function getMinDelta (elm, width) {\n            return (getLimitWidth(elm, 'min') || 0) - width; \n        }\n\n        function getMaxDelta (elm, width) {\n            return (getLimitWidth(elm, 'max') || Number.POSITIVE_INFINITY) - width; \n        }\n        return {\n            restrict: 'A',\n            scope: false,\n            link: function (scope, elm, attr) {\n                var handleElm = angular.element('<div class=\"ev-resizable-column-handle\"></div>'); \n                elm.append(handleElm);\n                handleElm.on('mousedown', function (event) {\n                    var x1 = event.pageX;\n                    document.body.style.cursor = \"ew-resize\";\n                    event.stopPropagation();\n                    var nextElm = elm.next();\n\n                    elm.addClass('unselectable');\n                    nextElm.addClass('unselectable');\n                    \n\n                    var elmWidth = elm.outerWidth();\n                    var nextElmWidth = nextElm.outerWidth();\n                    \n                    // COMPUTE MAX AND MIN DELTA (reset min width)\n                    nextElm.css('min-width', '');\n                    elm.css('min-width', '');\n\n                    var maxDelta = Math.min(getMaxDelta(elm, elmWidth), -getMinDelta(nextElm, nextElmWidth));\n                    var minDelta = Math.max(getMinDelta(elm, elmWidth), -getMaxDelta(nextElm, nextElmWidth));\n\n                    // Reassign min width\n                    nextElm.css('min-width', nextElmWidth);\n                    elm.css('min-width', elmWidth);\n\n                    // Creating the helper\n                    var helper = angular.element('<div class=\"ev-resizable-helper\"></div>');\n                    helper.css('min-width', nextElmWidth - maxDelta);\n                    helper.css('max-width', nextElmWidth - minDelta);\n                    helper.width(nextElmWidth);\n                    nextElm.append(helper);\n\n\n                    var onMousemove = function (event) {\n                        var delta = event.pageX - x1;\n                        helper.width(nextElmWidth - delta);\n                    };\n\n                    var onMouseup = function (event) {\n                        document.body.style.cursor = null;\n                        var delta = event.pageX - x1;\n                        // Bound the delta based on min/max width of the two columns \n                        if (delta > 0) {\n                            delta = Math.min(delta, maxDelta);\n                        } else {\n                            delta = Math.max(delta, minDelta);\n                        }\n\n                        // Apply new width\n                        // NB: as we are dealing with flexbox we are obliged to use minWidth\n                        elm.css('minWidth', elmWidth + delta);\n                        nextElm.css('minWidth', nextElmWidth - delta);\n\n                        // Remove helpers\n                        helper.remove();\n\n                        $window.removeEventListener('mouseup', onMouseup);  \n                        $window.removeEventListener('mousemove', onMousemove);  \n\n                        elm.removeClass('unselectable');\n                        nextElm.removeClass('unselectable');\n                        $rootScope.$broadcast('module-layout-changed');\n                    };\n\n                    $window.addEventListener('mouseup', onMouseup);  \n                    $window.addEventListener('mousemove', onMousemove);\n                });\n\n            }\n        };\n    }]);","'use strict';\n\nangular.module('ev-fdm').directive('body', [\n    '$rootScope',\n    'NotificationsService',\n    '$state',\n    function($rootScope, notificationsService, $state) {\n        return {\n            restrict: 'E',\n            link: function(scope, element, attrs) {\n\n                $rootScope.$on('$stateChangeStart', function(event, toState) {\n                    // not a tab changing\n                    var dotX = $state.current.name.indexOf('.');\n                    var stateName = (dotX != -1) ? $state.current.name.substring(0, dotX) : $state.current.name;\n\n                    if (!stateName || toState.name.indexOf(stateName) !== 0) {\n                        $('body').addClass('state-resolving');\n                    }\n                });\n\n                $rootScope.$on('$stateChangeSuccess', function() {\n                    element.removeClass('state-resolving');\n                });\n\n                /**\n                 * When there is an error on a state change\n                 *\n                 * In your state config you can add the following.\n                 * This will allows the router to fallback to this state on error\n                 * while displaying the specified message\n\n                      fallback: {\n                        state: 'list',\n                        message: t('Unable to open this transaction!')\n                      }\n                 */\n                $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n                    if (console.error) {\n                        console.error(\n                            'toState=', toState,\n                            'toParams=', toParams,\n                            'fromState=', fromState,\n                            'error=', error,\n                            'event=', event\n                        );\n                    }\n                    $('body').removeClass('state-resolving');\n\n                    var errorMessage = (toState.fallback && toState.fallback.message) || 'Error';\n\n                    notificationsService.addError({\n                        text: errorMessage\n                    });\n\n                    // Redirect to the fallback we defined in our state\n                    if (toState && toState.fallback && toState.fallback.state) {\n                      $state.go(toState.fallback.state);\n                    }\n                });\n            }\n        };\n    }\n]);\n","/*\n    responsive-viewport\n    ===================\n\n    I'm a directive that place the proper class responsive class dependanding on the size of the element I'm attached.\n\n*/\n\n\"use strict\";\nangular.module('ev-fdm')\n    .provider('evResponsiveViewport', function () {\n        var breakpoints = {\n            400: 'ev-viewport-xs',\n            600: 'ev-viewport-sm',\n            900: 'ev-viewport-md'\n        };\n        this.$get =function () {\n            return breakpoints;\n        };\n\n        this.setXsBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-xs';\n        };\n\n        this.setSmBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-sm';\n        };\n\n        this.setMdBreakpoint = function (breakpoint) {\n            breakpoints[breakpoint] = 'ev-viewport-md';\n        };\n\n        this.setBreakpoints = function (breaks) {\n            if (breaks.length !== 3) {\n                throw new Error('There should be three breakpoints');\n            }\n            breaks.sort();\n            breakpoints[breaks[0]] = 'ev-viewport-xs';\n            breakpoints[breaks[1]] = 'ev-viewport-sm';\n            breakpoints[breaks[2]] = 'ev-viewport-md';\n        };\n    })\n    .directive('evResponsiveViewport', ['evResponsiveViewport', function (breakpoints) {\n        return {\n            link: function (scope, elm) {\n                var updateViewport = function () {\n\n                    var elmWidth = elm.width();\n                    var _class;\n\n                    var largeViewport = !Object.keys(breakpoints).some(function (breakpoint) {\n                        _class = breakpoints[breakpoint];\n                        return elmWidth < breakpoint;\n                    });\n                    if (largeViewport) {\n                        _class = 'ev-viewport-lg';\n                    }\n\n                    if (!elm.hasClass(_class)) {\n                        Object.keys(breakpoints).forEach(function (key) {\n                                elm.removeClass(breakpoints[key]);\n                            });\n                        elm.removeClass('ev-viewport-lg');\n                        elm.addClass(_class);\n                    }\n                };\n\n                updateViewport();\n                scope.$on('module-layout-changed', updateViewport);\n            }\n        };\n    }]);\n","angular.module('ev-fdm')\n    .provider('evSelectLanguage', function() {\n        this.$get =function () {\n            return {\n                availableLang: this.availableLang || [],\n                defaultLang: this.defaultLang\n            };\n        };\n\n        this.setAvailableLang =function (availableLang) {\n            this.availableLang = availableLang;\n        };\n        this.setDefaultLang =function (defaultLang) {\n            this.defaultLang = defaultLang;\n        };\n    })\n    .directive('evSelectLanguage', ['evSelectLanguage', function (cfg) {\n        return {\n            template:\n                '<div class=\"ev-language-tabs\">' +\n                    '<div class=\"btn-group\">' +\n                        '<button class=\"btn btn-lg\" ng-repeat=\"lang in availableLang\"'+\n                            'ng-class=\"{active: selectedLang===lang}\"' +\n                            'ng-click=\"$parent.selectedLang=lang\">' +\n                            '<span class=\"ev-icons-flags\" ng-class=\"\\'icon-\\' + lang\"></span>' +\n                        '</button>' +\n                    '</div>' +\n                '</div>',\n            restrict: 'AE',\n            scope: {\n                selectedLang: '=lang'\n            },\n            link: function($scope) {\n                $scope.availableLang = cfg.availableLang;\n                if (!$scope.selectedLang) {\n                    $scope.selectedLang = cfg.defaultLang;\n                }\n            }\n        };\n    }]);\n","'use strict';\n/// This directive currently depend on ng-repeat $index for the\n///  shift selection. It would be great to remove this depency.\nangular.module('ev-fdm')\n    .directive('selectableSet', [function() {\n        return {\n            restrict: 'A',\n            controller: ['$scope', '$parse', '$element', '$attrs', '$document',\n            function($scope, $parse, $element, $attrs, $document) {\n                var self = this,\n                    shiftKey = 16;\n\n                var selectedElementsGet = $parse($attrs.selectedElements);\n\n                this.selectableElements = [];\n                this.selectedElement = [];\n\n                var lastClickedIndex,\n                    shiftSelectedElements = [];\n\n                $scope.$watch(function() {\n                    return selectedElementsGet($scope);\n                  },\n                  function() {\n                    self.selectedElements = angular.isArray(selectedElementsGet($scope))?\n                      selectedElementsGet($scope) : [];\n                  }\n                );\n\n                // Toggle a noselect class on the element when the shift key is pressed\n                // This allows us to disable selection overlay via css\n                $document.on('keydown', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.addClass('noselect');\n                    }\n                });\n\n                $document.on('keyup', function(event) {\n                    if(event.keyCode === shiftKey) {\n                        $element.removeClass('noselect');\n                    }\n                });\n\n                this.toggleSelection = function(element, index) {\n                    lastClickedIndex = index;\n                    shiftSelectedElements.length = 0;\n\n                    if(this.isElementSelected(element)) {\n                        unselectElement(element);\n                    }\n                    else {\n                        selectElement(element);\n                    }\n                };\n\n                this.toggleSelectAll = function() {\n\n                    if(this.selectedElements.length === this.selectableElements.length){\n                        this.selectedElements.length = 0;\n                    }\n                    else {\n                      angular.forEach(this.selectableElements, function(element) {\n                        if(!self.isElementSelected(element)) {\n                          selectElement(element);\n                          }\n                      });\n                    }\n                };\n\n                this.shiftedClick = function(element, index) {\n                    if(typeof lastClickedIndex !== undefined) {\n                        toggleRangeUpTo(lastClickedIndex, index);\n                    }\n                };\n\n                this.registerElement = function(element, directive) {\n                  this.selectableElements.push(element);\n                };\n\n                this.unregisterElement = function(element) {\n                  var index = this.selectableElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectableElements.splice(index, 1);\n                  }\n\n                  index = this.selectedElements.indexOf(element);\n                  if(index > -1) {\n                      this.selectedElements.splice(index, 1);\n                  }\n                };\n\n                this.areAllElementSelected = function() {\n                  return this.selectedElements.length === this.selectableElements.length\n                     && this.selectedElements.length !== 0;\n                };\n\n                this.isElementSelected = function(element) {\n                    return self.selectedElements.indexOf(element) > -1;\n                };\n\n                function toggleRangeUpTo(firstIndex, lastIndex) {\n\n                    var lastElement = getElementAtIndex(lastIndex),\n                        min = Math.min(firstIndex, lastIndex),\n                        max = Math.max(firstIndex, lastIndex),\n                        element,\n                        i;\n\n                    angular.forEach(shiftSelectedElements, function(element, index) {\n                        unselectElement(element);\n                    });\n\n                    if(self.isElementSelected(lastElement)) {\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            unselectElement(element);\n                        }\n\n                        lastClickedIndex = lastIndex;\n                        shiftSelectedElements.length = 0;\n                    }\n                    else {\n                        shiftSelectedElements.length = 0;\n                        for(i = min; i <= max; i++) {\n                            element = getElementAtIndex(i);\n                            selectElement(element);\n                            shiftSelectedElements.push(element);\n                        }\n                    }\n                }\n\n                function getElementAtIndex(index) {\n                    return self.selectableElements[index];\n                }\n\n                function selectElement(element) {\n                    if(!self.isElementSelected(element)) {\n                        self.selectedElements.push(element);\n                    }\n                }\n\n                function unselectElement(element) {\n                    var index = self.selectedElements.indexOf(element);\n                    if(index > -1) {\n                        self.selectedElements.splice(index, 1);\n                    }\n                }\n            }]\n        };\n    }])\n    .directive('selectable', ['$parse', function($parse) {\n      return {\n          restrict: 'A',\n          require: ['^selectableSet', '?ngModel'],\n          link: function(scope, element, attr, ctrls) {\n\n              var currentElementGetter = $parse(attr.selectable);\n              var currentElement = currentElementGetter(scope);\n\n              var ctrl = ctrls[0],\n                  modelCtrl = ctrls[1];\n\n              ctrl.registerElement(currentElement);\n\n              scope.$on('$destroy', function() {\n                  ctrl.unregisterElement(currentElement);\n              });\n\n              scope.$watch(function() { return ctrl.isElementSelected(currentElement); }, function() {\n                scope.selected = ctrl.isElementSelected(currentElement);\n                if(modelCtrl) {\n                  modelCtrl.$setViewValue(scope.selected);\n                }\n              });\n\n              element.on('click', function(event) {\n                  scope.$apply(function() {\n                      handleClick(event);\n                  });\n              });\n\n              function handleClick(event) {\n                  if (event.shiftKey) {\n                      ctrl.shiftedClick(currentElement, scope.$index);\n                  }\n                  else if (event.ctrlKey || angular.element(event.target).is('.checkbox')) {\n                      ctrl.toggleSelection(currentElement, scope.$index);\n                  }\n              }\n\n          }\n      };\n  }])\n    .directive('selectBox', function() {\n        return {\n            restrict: 'E',\n            require: '^selectable',\n            replace: true,\n            template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': selected }\"></span>'\n        };\n    })\n    .directive('selectAll', function() {\n        return {\n            restrict: 'E',\n            require: '^selectableSet',\n            scope: true,\n            template: '<span class=\"checkbox\" ng-class=\"{ \\'icon-tick\\': allSelected }\" ng-click=\"toggleSelectAll()\"></span>',\n            link: function(scope, element, attr, ctrl) {\n\n                scope.toggleSelectAll = function () {\n                    ctrl.toggleSelectAll();\n                };\n\n                scope.$watchCollection(function() { return ctrl.areAllElementSelected(); }, function() {\n                    scope.allSelected = ctrl.areAllElementSelected();\n                });\n            }\n        };\n    });","'use strict';\n\nangular.module('ev-fdm')\n    .directive('sortableSet', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            controller: ['$scope', '$parse', '$element', '$attrs', function($scope, $parse, $element, $attrs) {\n                var self = this;\n                this.reverseSort = false;\n                this.sortKey = '';\n\n                $scope.reverseSort = $scope.reverseSort || false;\n\n                var reverseSortGet = $parse($attrs.reverseSort),\n                    reverseSortSet = reverseSortGet.assign,\n                    sortKeyGet = $parse($attrs.sortBy),\n                    sortKeySet = sortKeyGet.assign;\n\n                $scope.$watch(function() {\n                    return reverseSortGet($scope);\n                }, function(newReverseSort) {\n                    self.reverseSort = newReverseSort;\n                });\n\n                $scope.$watch(function() {\n                    return sortKeyGet($scope);\n                }, function(newSortKey) {\n                    self.sortKey = newSortKey;\n                });\n\n                this.sortBy = function(key) {\n                    if(key == this.sortKey) {\n                        this.reverseSort = !this.reverseSort;\n                    }\n                    else {\n                        this.reverseSort = false;\n                        this.sortKey = key;\n                    }\n\n                    if(reverseSortSet) {\n                        reverseSortSet($scope, this.reverseSort);\n                    }\n\n                    if(sortKeySet) {\n                        sortKeySet($scope, this.sortKey);\n                    }\n\n                    $scope.$eval($attrs.sortChange);\n                };\n\n            }]\n        };\n    })\n    .directive('sortable', function() {\n        return {\n            restrict: 'A',\n            scope: false,\n            require: '^sortableSet',\n            link: function(scope, element, attr, ctrl) {\n                var key = attr.sortable;\n                element.addClass('sortable sort');\n\n                scope.$watch(function() { return ctrl.sortKey;}, function() {\n                    setClasses();\n                });\n\n                scope.$watch(function() { return ctrl.reverseSort;}, function() {\n                    setClasses();\n                });\n\n                element.on('click', function() {\n                    scope.$apply(function() {\n                        ctrl.sortBy(key);\n                    });\n                });\n\n                function setClasses() {\n                    if(ctrl.sortKey === key){\n                        element.removeClass('no-sort');\n                        if(ctrl.reverseSort) {\n                            element.removeClass('sort-down').addClass('sort-up');\n                        }\n                        else {\n                            element.removeClass('sort-up').addClass('sort-down');\n                        }\n                    }\n                    else {\n                        element.removeClass('sort-up sort-down').addClass('no-sort');\n                    }\n                }\n            }\n        }\n    });","angular.module('ev-fdm')\n    .directive('evStopEventPropagation', function () {\n        return {\n            restrict: 'A',\n            link: function (scope, element, attr) {\n                attr.evStopEventPropagation\n                    .split(',')\n                    .forEach(function (eventName) {\n                        element.bind(eventName.trim(), function (e) {\n                            e.stopPropagation();\n                        });\n                    });\n            }\n        };\n     });","var module = angular.module('ev-fdm')\n.directive('evSubmit', ['$parse', function($parse) {\n    return {\n        restrict: 'A',\n        require: 'form',\n        controller: function($scope, $element, $attrs) {\n            var validables = [];\n\n            this.$addValidable = function(makeValidable) {\n                validables.push(makeValidable)\n            };\n\n            var fn = $parse($attrs['evSubmit'], /* interceptorFn */ null, /* expensiveChecks */ true);\n\n            $element.on('submit', function(event) {\n                var callback = function() {\n                    if ($scope.form.$valid) {\n                        fn($scope, {$event:event});\n                    }\n                };\n\n                validables.forEach(function(makeValidable) {\n                  makeValidable();\n                });\n\n                $scope.$apply(callback);\n            });\n        },\n        link: function(scope, element, attrs, form) {\n            scope.form = form;\n        }\n    };\n}]);\n","(function () {\n    'use strict';\n    angular.module('ev-fdm')\n        .directive('evTab', function () {\n            return {\n                restrict: 'E',\n                transclude: true,\n                scope: {},\n                controller: function($scope, $element) {\n                    var panes = $scope.panes = [];\n\n\n                    $scope.select = function(pane) {\n                        angular.forEach(panes, function(pane) {\n                            pane.selected = false;\n                        });\n                        pane.selected = true;\n                    };\n\n\n                    this.addPane = function(pane) {\n                        if (panes.length === 0) { $scope.select(pane); }\n                        panes.push(pane);\n                    };\n\n                    var selectFuture = function (panes) {\n                        var futurePane;\n                        panes.some(function (pane) {\n                            var isSelected = $scope.isShowed(pane);\n                            if (isSelected) {\n                                futurePane = pane;\n                            }\n                            return isSelected;\n                        });\n                       return futurePane;\n                    };\n\n                    this.selectNext = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var nextPanes = panes.slice(selectedIndex + 1);\n                        $scope.select(selectFuture(nextPanes) || panes[selectedIndex]);\n                    };\n\n                    this.selectPrevious = function() {\n                        var selectedIndex = $scope.selectedIndex();\n                        var previousPanes = panes.slice(0, selectedIndex).reverse();\n                        $scope.select(selectFuture(previousPanes) || panes[selectedIndex]);\n                    };\n\n                    $scope.selectedIndex = function() {\n                        for (var i = 0; i < panes.length; i++) {\n                            var pane = panes[i];\n\n                            if (pane.selected) {\n                                return i;\n                            }\n                        }\n                    };\n\n                    $scope.isShowed = function (pane) {\n                        return pane.alwaysShow || !!pane.tabShow;\n                    };\n                },\n                template:\n                    '<div class=\"tabbable ev-fixed-header\">' +\n                        '<ul class=\"nav nav-tabs ev-header\">' +\n                            '<li ng-repeat=\"pane in panes | filter:isShowed\" ' +\n                                'ng-class=\"{active:pane.selected}\" '+\n                                'tooltip=\"{{pane.tabTitle}}\" tooltip-placement=\"bottom\" tooltip-append-to-body=\"true\">'+\n                                '<a href=\"\" ng-click=\"select(pane); pane.tabClick()\"> ' +\n                                    '<span ng-show=\"pane.tabIcon\" class=\"icon {{pane.tabIcon}}\"></span> '+\n                                    '<span ng-hide=\"pane.tabIcon\">{{pane.tabTitle}}</span>'+\n                                '</a>' +\n                            '</li>' +\n                        '</ul>' +\n                        '<div class=\"tab-content ev-body\" ng-transclude></div>' +\n                    '</div>',\n                replace: true\n            };\n        })\n        .directive('evPane', function() {\n            return {\n                require: '^evTab',\n                restrict: 'E',\n                transclude: true,\n                scope: {\n                    tabTitle: '@',\n                    tabIcon: '@',\n                    tabClick: '&',\n                    tabShow: '='\n                },\n                link: function(scope, element, attrs, tabsCtrl, transcludeFn) {\n                    scope.alwaysShow = true;\n                    if(angular.isDefined(attrs.tabShow)) {\n                        scope.alwaysShow = false;\n                    }\n\n                    var childScope;\n                    var transclude = function transclude (clone, transcludedScope) {\n                        childScope = transcludedScope;\n                        transcludedScope.$selectNext     = tabsCtrl.selectNext;\n                        transcludedScope.$selectPrevious = tabsCtrl.selectPrevious;\n                        var el = element.find('.transclude');\n                        el.children().remove();\n                        el.append(clone);\n                    };\n                    scope.$watch('selected', function (selected) {\n                        if (!angular.isDefined(attrs.tabReset)) {\n                            return;\n                        }\n                        if (selected) {\n                            transcludeFn(transclude);\n                        } else if (childScope) {\n                            childScope.$destroy();\n                        }\n                    });\n                    tabsCtrl.addPane(scope);\n                    transcludeFn(transclude);\n                },\n                template:\n                    '<div class=\"tab-pane\" ng-class=\"{active: selected}\">' +\n                        '<div class=\"section transclude\"></div>' +\n                    '</div>',\n                replace: true\n            };\n        });\n}) ();","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evTagList', function () {\n        return {\n            restrict: 'EA',\n            scope: {\n                elements: '=',\n                trackBy: '=?',\n                displayElement: '=?',\n                editable: '=',\n                className: '@',\n                maxElements: '=',\n                maxAlertMessage: '@',\n                onTagDeleted: '&'\n            },\n            replace: true,\n            template:\n                '<ul class=\"list-inline {{ className }}\">' +\n                    '<li ng-repeat=\"element in elements track by trackBy(element)\" class=\"ev-animate-tag-list\">' +\n                        '<span class=\"label label-default\" >' +\n                            '{{ displayElement(element) }}' +\n                            '<button ng-show=\"editable\" tabIndex=\"-1\" type=\"button\" class=\"close inline\" ' +\n                                'ng-click=\"remove($index)\">×</button> ' +\n                        '</span>' +\n                    '</li>' +\n                    '<li ng-show=\"editable && elements.length >= maxElements\" class=\"text-orange no-margin\">' +\n                        ' {{ maxAlertMessage }}' +\n                    '</li>' +\n                '</ul>',\n            link: function ($scope, elem, attrs) {\n                $scope.trackBy = $scope.trackBy || function(element) {\n                    return element.name;\n                };\n                $scope.displayElement = $scope.displayElement || function(element) {\n                    return element.name;\n                };\n\n                $scope.remove = function (index) {\n                    $scope.elements.splice(index, 1);\n                    $scope.onTagDeleted();\n                };\n            }\n        };\n    });\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.directive('throttle', ['$timeout', function($timeout) {\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        priority: 1,\n        link: function(scope, element, attr, ctrl) {\n\n            var originalSetViewValue = ctrl.$setViewValue,\n                originalViewListeners = angular.copy(ctrl.$viewChangeListeners);\n\n            ctrl.$viewChangeListeners = [];\n\n            var throttleGuard;\n            ctrl.$setViewValue = function(value) {\n                var callViewListeners = ctrl.$modelValue !== value;\n\n                originalSetViewValue.apply(ctrl, [value]);\n\n                if (callViewListeners) {\n                    if(throttleGuard) {\n                        $timeout.cancel(throttleGuard);\n                    }\n\n                    throttleGuard = $timeout(function() {\n                        angular.forEach(originalViewListeners, function(listener) {\n                            try {\n                                listener();\n                            } catch(e) {\n                                $exceptionHandler(e);\n                            }\n                        });\n                    }, 600);\n                }\n\n            };\n        }\n    }\n}]);","var module = angular.module('ev-fdm')\n/**\n * DONE: makeValidable only happens after first blur or when ev-validable event occurs.\n * TO DO: expose makeValidable, to provides validation directly\n * on focus or on when a key is entered\n */\n.directive('evValidable', function () {\n    return {\n        restrict: 'A',\n        require: ['ngModel', '^evSubmit', '^?evFormGroup'],\n        link: function(scope, element, attrs, controllers) {\n            var model = controllers[0],\n                evSubmit = controllers[1],\n                evFormGroup = controllers[2];\n\n            var markAsBlurred = function() {\n                model.evBlurred = true;\n            };\n\n            var markAsChanged = function() {\n                model.evChanged = true;\n            };\n\n            var displayErrors = function() {\n                model.evHasError = !!(!model.$valid && model.evBlurred && model.evChanged);\n\n                if (evFormGroup) {\n                    evFormGroup.toggleError(model.evHasError);\n                }\n            };\n\n            element.on('blur', function() {\n                scope.$evalAsync(function() {\n                    markAsBlurred();\n                    displayErrors();\n                });\n            });\n\n            model.$viewChangeListeners.push(function() {\n                markAsChanged();\n                displayErrors();\n            });\n\n            evSubmit.$addValidable(function() {\n                markAsBlurred();\n                markAsChanged();\n                displayErrors();\n            });\n        }\n    };\n});\n","'use strict';\n\nangular.module('ev-fdm')\n    .directive('evValue', function () {\n        return {\n            restrict: 'E',\n            replace: true,\n            scope: {\n                value: '=',\n                noValue: '@',\n            },\n            templateUrl: 'ev-value.html'\n        };\n    });","angular.module('ev-fdm').factory('confirmBox', [\n    '$modal',\n    function($modal) {\n        return function(title, message, positive, negative) {\n            return $modal.open({\n                backdrop: 'static',\n                templateUrl: 'ev-confirm-box.html',\n                controller: ['$scope', function($scope) {\n                    $scope.title    = title;\n                    $scope.message  = message;\n                    $scope.positive = positive;\n                    $scope.negative = negative;\n                }]\n            }).result;\n        };\n    }\n]);\n","/* jshint sub: true */\nangular.module('ev-fdm').factory('Select2Configuration', [\n    '$timeout',\n    function($timeout) {\n        return function(dataProvider, formatter, resultModifier, minimumInputLength, key) {\n            var dataProviderFilter;\n            if (typeof dataProvider === 'object') {\n                formatter = dataProvider.formatter;\n                resultModifier = dataProvider.resultModifier;\n                minimumInputLength = dataProvider.minimumInputLength;\n                key = dataProvider.key;\n                dataProviderFilter = dataProvider.dataProviderFilter;\n                dataProvider = dataProvider.dataProvider;\n\n                if (typeof dataProviderFilter === 'object') {\n                    var filter = dataProviderFilter;\n                    dataProviderFilter = function() { return filter; };\n                } else if (typeof dataProviderFilter !== 'function') {\n                    dataProviderFilter = function() { return {}; };\n                }\n            }\n            var oldQueryTerm = '', filterTextTimeout;\n\n            var config = {\n                minimumInputLength: angular.isDefined(minimumInputLength)\n                    && angular.isNumber(minimumInputLength) ? minimumInputLength : 3,\n                allowClear: true,\n                query: function(query) {\n                    var timeoutDuration = oldQueryTerm === query.term ? 0 : 600;\n\n                    oldQueryTerm = query.term;\n\n                    if (filterTextTimeout) {\n                        $timeout.cancel(filterTextTimeout);\n                    }\n\n                    filterTextTimeout = $timeout(function() {\n                        dataProvider(query.term, query.page, dataProviderFilter).then(function(resources) {\n\n                            var res = [];\n                            if (resultModifier) {\n                                angular.forEach(resources, function(resource) {\n                                    res.push(resultModifier(resource));\n                                });\n                            }\n\n                            var result = {\n                                results: res.length ? res : resources\n                            };\n\n                            if (resources.pagination &&\n                                resources.pagination['current_page'] < resources.pagination['total_pages']) {\n                                result.more = true;\n                            }\n                            if (key && query.term.length) {\n                                var value = { id: null };\n                                value[key] = query.term;\n                                if (result.results.length) {\n                                    var tmp = result.results.shift();\n                                    result.results.unshift(tmp, value);\n                                } else {\n                                    result.results.unshift(value);\n                                }\n                            }\n                            query.callback(result);\n                        });\n\n                    }, timeoutDuration);\n\n                },\n                formatResult: function(resource, container, query, escapeMarkup) {\n                    return formatter(resource);\n                },\n                formatSelection: function(resource) {\n                    return formatter(resource);\n                },\n                initSelection: function() {\n                    return {};\n                }\n            };\n            return config;\n        };\n    }\n]);\n","'use strict';\n/*\n    Takes a string in the form 'yyyy-mm-dd hh::mn:ss'\n*/\nangular.module('ev-fdm')\n    .filter('cleanupDate', function() {\n        return function(input) {\n            var res = '';\n            if (input) {\n                var y = input.slice (0,4);\n                var m = input.slice (5,7);\n                var day = input.slice (8,10);\n\n                res = day + '/'+ m + '/' + y;\n            }\n\n            return res;\n        };\n    });","'use strict';\n\n/**\n * Meant to be used for stuff like this:\n * {{ message.isFromTraveller | cssify:{1:'message-traveller', 0:'message-agent'} }}\n * We want to display a css class depending on a given value,\n * and we do not want our controller to store a data for that\n * We can use this filter, and feed it with an object with the matching key,value we want\n */\nangular.module('ev-fdm')\n    .filter('cssify', function() {\n        return function(input, possibilities) {\n            var res = '';\n            if (possibilities)\n            {\n                for (var prop in possibilities) {\n                    if (possibilities.hasOwnProperty(prop)) { \n                        if (input == prop){\n                            res = possibilities[prop];\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return res;\n        };\n    });","(function() {\n'use strict';\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\nvar isObject = angular.isObject;\n\nfunction MapFilterProvider() {\n  var maps = {};\n  var defaults = {};\n\n  function assertMapping(name) {\n    if (!hasOwnProp.call(maps, name)) {\n      throw new Error('Mapping \"' + name + '\" is not valid, did you register it using mapSymbolFilterProvider#registerMapping() ?');\n    }\n  }\n\n  this.registerMapping = function(name, mapping) {\n    if (hasOwnProp.call(maps, name)) {\n      throw new Error('A mapping named \"' + name + '\" was already registered');\n    }\n    var map = maps[name] = {};\n    for (var key in mapping) {\n      if (hasOwnProp.call(mapping, key)) {\n        map[key] = mapping[key];\n      }\n    }\n  };\n\n  this.registerDefault = function(name, value) {\n    assertMapping(name);\n    defaults[name] = value;\n  };\n\n  this.$get = function factory() {\n    return function mapFilter(key, mapping) {\n      // Mapping is directly provided\n      if (isObject(mapping)) {\n        return hasOwnProp.call(mapping, key) ? mapping[key] : key;\n      }\n      // or it's just a mapping name\n      assertMapping(mapping);\n      var map = maps[mapping];\n      switch (true) {\n        case hasOwnProp.call(map, key):\n          return map[key];\n        case hasOwnProp.call(defaults, mapping):\n          return defaults[mapping];\n        default:\n          return key;\n      }\n    };\n  };\n}\n\n\nangular.module('ev-fdm')\n  .provider('mapFilter', MapFilterProvider)\n;\n\n})();\n","angular.module('ev-fdm')\n     .filter('prettySecs', [function() {\n            return function(timeInSeconds) {\n               \tvar numSec = parseInt(timeInSeconds, 10); // don't forget the second param\n\t\t\t    var hours   = Math.floor(numSec / 3600);\n\t\t\t    var minutes = Math.floor((numSec - (hours * 3600)) / 60);\n\t\t\t    var seconds = numSec - (hours * 3600) - (minutes * 60);\n\n\t\t\t    if (hours   < 10) {hours   = \"0\"+hours;}\n\t\t\t    if (minutes < 10) {minutes = \"0\"+minutes;}\n\t\t\t    if (seconds < 10) {seconds = \"0\"+seconds;}\n\t\t\t    var time    = hours+':'+minutes+':'+seconds;\n\t\t\t    return time;\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('replace', [function() {\n            return function(string, regex, replace) {\n                if (!angular.isDefined(string)) {\n                    return '';\n                }\n                return string.replace(regex, replace || '');\n            };\n    }]);\n","angular.module('ev-fdm')\n     .filter('sum', ['$parse', function($parse) {\n            return function(objects, key) {\n                if (!angular.isDefined(objects)) {\n                    return 0;\n                }\n                var getValue = $parse(key);\n                return objects.reduce(function(total, object) {\n                    var value = getValue(object);\n                    return total +\n                        ((angular.isDefined(value) && angular.isNumber(value)) ? parseFloat(value) : 0);\n                }, 0);\n            };\n    }]);\n","angular.module('ev-fdm')\n\t.filter('textSelect', [function() {\n\n\t\treturn function(input, choices) {\n\n\t\t\tif(choices[input]) {\n        return choices[input];\n      }\n\n    \treturn input;\n\t\t};\n\n\t}]);","'use strict';\n\nangular.module('ev-fdm')\n    .filter('unsafe', ['$sce', function($sce) {\n        return function(val) {\n            return $sce.trustAsHtml(val);\n        };\n    }]);","angular.module('ev-fdm')\n.service('DownloadService', ['$document', function($document) {\n   var iframe = null;\n   return {\n       download: function(url) {\n           if(!iframe) {\n               iframe = $document[0].createElement('iframe');\n               iframe.style.display = 'none';\n               $document[0].body.appendChild(iframe);\n           }\n           iframe.src = url;\n       }\n   };\n}]);","'use strict';\n\n// Map that stores the selected filters across pages\nangular.module('ev-fdm').\n    service('FilteringService', ['$location', function ($location) {\n\n        var filters = {};\n\n        return {\n            setSelectedFilter:function (filterName, value){\n                if (value != undefined && value != 'undefined'){\n                    filters[filterName] = value;\n                    // $location.search(filterName, encodeURIComponent(value));\n                }\n                else {\n                    filters[filterName] = '';\n                }\n\n            },\n\n            getSelectedFilter:function (filterName){\n                var res = '';\n\n                if (typeof filters[filterName] != 'undefined' && filters[filterName] != 'undefined') {\n                    res = filters[filterName];\n                }\n\n                return res;\n            },\n\n            getAllFilters:function (){\n                return filters;\n            }\n        }\n    }]\n    );","/**\n * ModalService\n *     Angularization of bootstrap's $.fn.modal into a service\n *     - read template from ng's template cache\n *     - uses ng's $compilation, attaching the provided $scope\n *     - (optional) attach a controller to the view for more advanced modals\n *\n * Usage:\n *     - modalService.open({\n *         .. same as twitter bootstrap options\n *         template:                [html value string],\n *         templateUrl:             [url matching a key in $templateCache],\n *         scope:                   [key values],\n *         parentScope (optional):  [scope will inherit from that scope, $rootScope by default],\n *         controller: (optional):  [that controller will be injected on the view]\n *     })\n *     returns the $dom\n *\n * @author maz\n */\n\nvar module = angular.module('ev-fdm');\n\nvar ModalService = function($rootScope, $templateCache, $compile, $controller) {\n    this.$rootScope = $rootScope;\n    this.$templateCache = $templateCache;\n    this.$compile = $compile;\n    this.$controller = $controller;\n};\n\nModalService.prototype.open = function(options) {\n    // extend and check options given\n    options = this._readOptions(options);\n\n    // get/create the scope\n    var $scope = (options.parentScope || this.$rootScope).$new();\n    $scope = _($scope).extend(options.scope);\n\n    // attach a controller if specified\n    var $controller;\n    if (options.controller) {\n        $controller = this.$controller(options.controller, { $scope: $scope });\n    }\n\n    // create the dom that will feed bs modal service\n    var modalDom = this.$compile(options.template || this.$templateCache.get(options.templateUrl))($scope);\n\n    // attach these to the returned dom el\n    modalDom.$scope = $scope;\n    modalDom.$controller = $controller;\n    // controller has access to the bs dom modal object\n    if ($controller) {\n        $controller.$modal = modalDom;\n    }\n\n    return $(modalDom).modal(options);\n}\n\nModalService.prototype._readOptions = function(options) {\n    // read options, adding defaults\n    options = _({\n        backdrop: true,\n        scope: {},\n        keyboard: true\n    }).extend(options);\n\n    // templateUrl is compulsory\n    if (!options.templateUrl && !options.template) {\n        throw new Error('Either template or templateUrl have to be defined');\n    }\n\n    return options;\n}\n\n// injection\nmodule.service('ModalService', [\n    '$rootScope',\n    '$templateCache',\n    '$compile',\n    '$controller',\n    ModalService\n]);","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\n// Map that stores the selected filters across pages\nmodule.service('NotificationsService', ['$timeout', function($timeout) {\n\n    var self = this;\n    var queue = [];\n    var DEFAULT_DELAY = 5;\n    var TYPES = {\n        SUCCESS : 0,\n        ERROR : 1,\n        INFO : 2,\n        WARNING : 3\n    };\n\n    /**\n     * The notification being displayed\n     */\n    this.activeNotification = null;\n\n    /**\n     * Give this function a notification object with :\n     * {\n     *     text: 'the text you want to display',\n     *     type: the type, a value among the constant in NotificationsService.type\n     *     [delay]: optionnal, the duration in seconds during which you want to display the error\n     *             if -1 : sticky message\n     * }\n     */\n    function add(notification) {\n        if (!notification.type) {\n            notification.type = TYPES.SUCCESS;\n        }\n        queueNotification(notification);\n    }\n\n    /**\n     * For manual removal\n     */\n    function remove(notification) {\n        queue = _(queue).without(notification);\n        next();\n    }\n\n    function next() {\n        if (queue.length) {\n            var notification = queue[0];\n            if (self.activeNotification !== notification) {\n                self.activeNotification = notification;\n                if (notification.delay !== -1) {\n                    // The notification is removed after a while\n                    $timeout(\n                        function() { remove(notification); },\n                        (notification.delay || DEFAULT_DELAY) * 1000\n                    );\n                }\n            }\n        } else {\n            self.activeNotification = null;\n        }\n    }\n\n    function queueNotification(notification) {\n        queue.push(notification);\n        next();\n    }\n\n    function prepareNotification(notification) {\n        if(!angular.isObject(notification)){\n            return { text: notification };\n        }\n\n      return notification;\n    }\n\n    // export only these\n    this.add = add;\n    this.remove = remove;\n    this.addError = function(notification) {\n        \n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.ERROR;\n        add(notification);\n    };\n    this.addSuccess = function(notification) {\n\n        notification = prepareNotification(notification);\n\n        notification.type = TYPES.SUCCESS;\n        add(notification);\n    };\n    this.type = TYPES;\n}]);\n","const DEFAULT_CONTAINER_ID = 'ev-default-panels-container';\nconst MAX_VISIBLE_PANEL = 3;\n\nangular.module('ev-fdm')\n    .service('PanelService', ['$animate', '$q', '$http', '$templateCache', '$compile', '$rootScope', '$timeout',\n        '$window', function ($animate, $q, $http, $templateCache, $compile, $rootScope, $timeout,\n            $window) {\n\n        var containers   = {};\n        var panelsList   = {};\n\n        var addToDom = function (panel, containerId) {\n            var container = containers[containerId];\n            if (!container || panel.element.parent().length) {\n                return;\n            }\n\n            // If no panel index, or no panel inside the container, it is added at the end\n            if (!panel.index || !container.children().length) {\n                $animate.move(panel.element, container, null, function () {\n                    updateLayout(containerId);\n                });\n            } else {\n                var beforePanel = getBeforePanelElm(panel.index, containerId);\n                    $animate.move(panel.element, container, beforePanel.element, function () {\n                        updateLayout(containerId);\n                });\n            }\n        };\n\n        function getBeforePanelElm(index, containerId) {\n            var beforePanel = null;\n            var panels = Object.keys(panelsList[containerId]).map(function (panelName) {\n                return panelsList[containerId][panelName];\n            });\n            panels\n                .filter(function (panel) {\n                    return panel.element.parent().length;\n                })\n                .filter(function (panel) {\n                    return panel.index;\n                })\n                .some(function (insertedPanel) {\n                    var isBeforePanel = insertedPanel.index > index;\n                    if (isBeforePanel) {\n                        beforePanel = insertedPanel;\n                    }\n                    return !isBeforePanel;\n                });\n            return (beforePanel || panels[0]).element;\n        }\n\n        /**\n         * Panel options are:\n         * - name\n         * - template or templateURL\n         * - index\n         */\n        this.open = function (panel, id) {\n            if (!id) {\n                id = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[id] = panelsList[id] || {};\n\n            if (!panel.name && panel.panelName) {\n                console.log(\"Deprecated: use name instead of panelName\");\n                panel.name = panel.panelName;\n            }\n\n            if (!panel) {\n                console.log(\"A panel must have a name (options.name)\");\n                return;\n            }\n\n            // Change panelName to panel-name\n            var name = panel.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (panels[name]) {\n                return panels[name];\n            }\n\n            var element = angular.element('<div class=\"container-fluid ev-panel ev-panel-' +\n                    name + '\" ev-responsive-viewport ev-resizable-column>' +\n                    '</div>');\n            var templatePromises = getTemplatePromise(panel);\n            panels[name] = panel;\n            panel.element = element;\n\n            return templatePromises.then(function(template) {\n                var scope = $rootScope.$new();\n                element.html(template);\n                element = $compile(element)(scope);\n                panel.element  = element;\n                panel.scope = scope;\n                addToDom(panel, id);\n                return panel;\n            });\n        };\n\n\n        this.getPanels = function (containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            return panelsList[containerId];\n        };\n\n        this.close = function(name, containerId) {\n            // Change panelName to panel-name\n            name = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            var panels = panelsList[containerId];\n\n            if (!name || !panels[name]) {\n                console.log(\"Panel not found for: \" + name + \" in container: \" + containerId);\n            }\n\n\n            var element  = panels[name].element;\n            $animate.leave(element, function() {\n                updateLayout(containerId);\n                panels[name].scope.$destroy();\n                delete panels[name];\n            });\n        };\n\n        /**\n         * Registers a panels container\n         *\n         * element : DOM element\n         */\n        this.registerContainer = function(container, containerId) {\n            if (!containerId) {\n                containerId = DEFAULT_CONTAINER_ID;\n            }\n            if (!containers[containerId]) {\n                containers[containerId] = container;\n                if (!panelsList[containerId]) {\n                    return;\n                }\n\n                Object.keys(panelsList[containerId]).forEach(function (panelName) {\n                    var panel = panelsList[containerId][panelName];\n                    addToDom(panel, containerId);\n                });\n            }\n        };\n\n\n\n        var timerWindowResize = null;\n        angular.element($window).on('resize', function() {\n            if(timerWindowResize !== null) {\n                $timeout.cancel(timerWindowResize);\n            }\n            timerWindowResize = $timeout(function() {\n                updateLayout();\n            }, 200);\n        });\n\n\n        function getTemplatePromise(options) {\n            if (options.template || options.templateURL) {\n                return $q.when(options.template);\n            }\n\n            return $http.get(options.templateUrl, {cache: $templateCache}).then(function (result) {\n                return result.data;\n            });\n        }\n\n\n        function updateLayout(containerId) {\n            if (!containerId) {\n                Object.keys(containers).map(function (id) {\n                    updateLayout(id);\n                });\n                return this;\n            }\n            var container = containers[containerId];\n            var panelElements = $.makeArray(angular.element(container).children('.ev-panel'));\n\n\n            checkStacking(panelElements, container);\n        }\n\n        function checkStacking(panels, container) {\n            panels.forEach(function (panel) {\n                angular.element(panel).removeClass('ev-stacked');\n                // We reset the width each time we update the layout\n                angular.element(panel).css('minWidth', '');\n                angular.element(panel).css('maxWidth', '');\n            });\n            // We stack panels until there is only three left\n            if (panels.length > MAX_VISIBLE_PANEL) {\n                panels.slice(0, -MAX_VISIBLE_PANEL).forEach(function (panel) {\n                    angular.element(panel).addClass('ev-stacked');\n                });\n            }\n            // Starting from the first non stack panel,\n            var i = panels.slice(0, -MAX_VISIBLE_PANEL).length;\n            // Stack until overflow does not exists anymore (or we arrive to the last panel)\n            while (container[0].offsetWidth < container[0].scrollWidth && i < panels.length - 1) {\n                angular.element(panels[i]).addClass('ev-stacked');\n                i ++;\n            }\n            var panel = angular.element(panels[i]);\n            panel.css('minWidth', panel.width() - container[0].scrollWidth + container[0].offsetWidth);\n            panel.css('maxWidth', container[0].offsetWidth);\n            $rootScope.$broadcast('module-layout-changed');\n        }\n\n        return this;\n    }])\n    .directive('evPanels', ['PanelService', function(panelService) {\n        return {\n            restrict: 'AE',\n            scope: {},\n            replace: true,\n            template: '<div class=\"ev-panels-container\"></div>',\n            link: function (scope, element, attrs) {\n              panelService.registerContainer(element, attrs.id);\n            }\n        };\n    }]);\n","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('SortService', [function() {\n    var currentSortValue = '';\n    var isReverse = false;\n\n    var getCurrentSort = function() {\n        return currentSortValue;\n    }\n    \n    var sortBy = function(sortValue) {\n        if (sortValue == currentSortValue)\n            isReverse = !isReverse;\n        else {\n            currentSortValue = sortValue;\n        }\n        return this;\n    };\n\n    var getSortCSS = function(value) {\n        var res = 'sort ';\n        if (value == currentSortValue) {\n            if (isReverse)\n                res += 'sort-up';\n            else\n                res += 'sort-down';\n        }\n        else\n            res += 'no-sort';\n        return res;\n    }\n\n    var setReverse = function(reverse) {\n        isReverse = reverse;\n    };\n    var isReverse = function() {\n        return isReverse;\n    };\n\n    return {\n        'sortBy'        : sortBy,\n        'getSortCSS'    : getSortCSS,\n        'getCurrentSort': getCurrentSort,\n        'setReverse'    : setReverse,\n        'isReverse'     : isReverse\n    }\n}]);","'use strict';\n\nvar module = angular.module('ev-fdm');\n\nmodule.service('UtilService', [function() {\n    this.generatedIds = {};\n\n    this.generateId = function(prefix) {\n        var id = prefix + Math.random() * 10000;\n\n        if(typeof(this.generatedIds[id] !== 'undefined')) {\n            this.generatedIds[id] = true;\n        } else {\n            id = this.generateId(prefix);\n        }\n\n        return id;\n    };\n}]);\n","'use strict';\n\n/* Services */\nvar module = angular.module('ev-fdm');\n\nvar AbstractAutocompleteStorage = function (AbstractStorage, $timeout) {\n    _.extend (this, AbstractStorage);\n    this.AbstractStorage = AbstractStorage;\n    this.$timeout = $timeout;\n};\n\nAbstractAutocompleteStorage.prototype.generateAutocompleteConfig = function (searchCallback, matchingCallback, minLength) {\n    var me = this;\n\n    var filterTextTimeout;\n    return {\n        minimumInputLength: minLength,\n        allowClear: true,\n        initSelection: function() {\n            return '';\n        },\n        query: function(q) {\n            var res = [],\n                searchParam = q.term;\n\n            if (filterTextTimeout) {\n                me.$timeout.cancel(filterTextTimeout);\n            }\n\n            // Fetches the result from the data store\n            filterTextTimeout = me.$timeout(function() {\n                searchCallback.call(me, searchParam.toUpperCase()).then(function (result){\n                        var res = matchingCallback (result);\n                        q.callback ({ results : res });\n                    }\n                );\n            }, 600);\n\n        }\n    };\n};\n\n// Demonstrate how to register services\n// In this case it is a simple value service.\nmodule.service('AbstractAutocompleteStorage', ['Storage', '$timeout', AbstractAutocompleteStorage]);\n","angular.module('ev-fdm')\n    .factory('RestangularStorage', ['$rootScope', '$q', 'Restangular', function($rootScope, $q, restangular) {\n\n        function RestangularStorage(resourceName, defaultEmbed) {\n            this.restangular = restangular;\n            this.resourceName = resourceName;\n            this.defaultEmbed = defaultEmbed || [];\n\n            this.emitEventCallbackCreator = function(eventName, elements) {\n                return function(result) {\n                    $rootScope.$broadcast(this.resourceName + '::' + eventName, elements);\n                    return result;\n                }.bind(this);\n            }.bind(this);\n        }\n\n        RestangularStorage.buildSortBy = function(sortKey, reverseSort) {\n            var sortDir = reverseSort ? 'DESC' : 'ASC';\n            return sortKey + ':' + sortDir;\n        };\n\n        RestangularStorage.buildEmbed = function(embed) {\n            return embed.join(',');\n        };\n\n        RestangularStorage.buildParameters = function(resource, embed) {\n            var parameters = {};\n\n            if(angular.isArray(embed) && embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(embed.concat(resource.defaultEmbed));\n            }\n            else if(resource.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(resource.defaultEmbed);\n            }\n\n            return parameters;\n        };\n\n        RestangularStorage.buildFilters = function(filters) {\n            var res = {};\n\n            angular.forEach(filters, function(filter, filterKey) {\n\n                if(angular.isObject(filter) && angular.isDefined(filter.uuid)) {\n                    res[filterKey + '.uuid'] = filter.uuid;\n                }\n                else if(angular.isObject(filter) && angular.isDefined(filter.id)) {\n                    res[filterKey + '.id'] = filter.id;\n                }\n                else if(angular.isArray(filter) && filter.length > 0) {\n                    res[filterKey] = filter.join(',');\n                }\n                else if(angular.isDate(filter)) {\n                    res[filterKey] = filter.toISOString();\n                }\n                else if(angular.isDefined(filter) && filter !== '' && filter !== null) {\n                    res[filterKey] = filter;\n                }\n\n            });\n\n            return res;\n        };\n\n        RestangularStorage.updateObjectFromResult = function(object, result) {\n            (function merge(objectData, resultData, resultEmbeds) {\n                if (resultEmbeds) {\n                    resultEmbeds.forEach(function(embedName) {\n                        if (embedName in resultData) {\n                            if (!objectData[embedName] || !objectData[embedName].data) {\n                                objectData[embedName] = resultData[embedName];\n                            } else if (typeof resultData[embedName].data !== 'object' ||\n                                       Array.isArray(resultData[embedName].data)) {\n                                objectData[embedName].data = resultData[embedName].data;\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    resultData[embedName].data,\n                                    resultData[embedName].embeds\n                                );\n                            }\n                            delete resultData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, resultData);\n            })(\n                object.data && object.embeds ? object.data : object,\n                angular.copy(restangular.stripRestangular(result)),\n                result.embeds\n            );\n        };\n        RestangularStorage.prototype.updateObjectFromResult = RestangularStorage.updateObjectFromResult;\n\n        RestangularStorage.updateObjectBeforePatch = function(object, changes) {\n            (function merge(objectData, objectEmbeds, changesData) {\n                if (objectEmbeds) {\n                    objectEmbeds.forEach(function(embedName) {\n                        if (embedName in changesData) {\n                            if (!objectData[embedName]) {\n                                objectData[embedName] = changesData[embedName];\n                            } else {\n                                merge(\n                                    objectData[embedName].data,\n                                    objectData[embedName].embeds,\n                                    changesData[embedName].data\n                                );\n                            }\n                            delete changesData[embedName];\n                        }\n                    });\n                }\n                angular.extend(objectData, changesData);\n            })(object, object.embeds, angular.copy(changes));\n        };\n\n\n        RestangularStorage.prototype.getAll = function(options) {\n            var parameters = {};\n\n            if (angular.isNumber(options.page) && options.page > 0) {\n                parameters.page = options.page;\n            }\n\n            if (angular.isNumber(options.number) && options.number > 0) {\n                parameters.number = options.number;\n            }\n\n            if (angular.isArray(options.embed) && options.embed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(options.embed.concat(this.defaultEmbed));\n            }\n            else if (this.defaultEmbed.length) {\n                parameters.embed = RestangularStorage.buildEmbed(this.defaultEmbed);\n            }\n\n            if (options.sortKey) {\n                parameters.sortBy = RestangularStorage.buildSortBy(options.sortKey, options.reverseSort);\n            }\n\n            if (options.filters) {\n                var filters = RestangularStorage.buildFilters(options.filters);\n                angular.extend(parameters, filters);\n            }\n            return this.restangular.all(this.resourceName).getList(parameters);\n        };\n\n\n        RestangularStorage.prototype.getFirst = function(embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                number: 1,\n                page: null,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            }).then(function(result) {\n                return result[0];\n            });\n        };\n\n        RestangularStorage.prototype.getList = function(page, embed, filters, sortKey, reverseSort) {\n            return this.getAll.call(this, {\n                page: page,\n                embed: embed,\n                filters: filters,\n                sortKey: sortKey,\n                reverseSort: reverseSort\n            });\n        };\n\n        RestangularStorage.prototype.getById = function(id, embed) {\n            return this.restangular.one(this.resourceName, id).get(RestangularStorage.buildParameters(this, embed));\n        };\n\n        RestangularStorage.prototype.update = function(element, embed) {\n            if (!element.put) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.put(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    RestangularStorage.updateObjectFromResult(element, result);\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.updateAll = function(elements, embed) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.put(parameters)\n                    .then(function(result) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.patch = function(element, changes, embed) {\n            if (!element.patch) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            RestangularStorage.updateObjectBeforePatch(element, changes);\n            return element.patch(changes, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    RestangularStorage.updateObjectFromResult(element, result);\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.patchAll = function(elements, changes, embed) {\n            elements.forEach(function(element) {\n                RestangularStorage.updateObjectBeforePatch(element, changes);\n            });\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.patch(changes, parameters)\n                    .then(function(result) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.create = function(element, embed) {\n            return this.restangular.all(this.resourceName)\n                .post(element, RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    RestangularStorage.updateObjectFromResult(element, result);\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('created', [element]));\n        };\n\n        RestangularStorage.prototype.delete = function(element) {\n            if (!element.delete) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.remove().then(this.emitEventCallbackCreator('deleted', [element]));\n        };\n\n        RestangularStorage.prototype.deleteAll = function(elements) {\n\n            return $q.all(elements.map(function(element) {\n                return element.remove();\n            })).then(this.emitEventCallbackCreator('deleted', elements));\n        };\n\n        /**\n         * prefer use of create() or update()\n         */\n        RestangularStorage.prototype.save = function(element, embed) {\n            if (!element.save) {\n                restangular.restangularizeElement(null, element, this.resourceName);\n            }\n            return element.save(RestangularStorage.buildParameters(this, embed))\n                .then(function(result) {\n                    RestangularStorage.updateObjectFromResult(element, result);\n                    return result;\n                })\n                .then(this.emitEventCallbackCreator('updated', [element]));\n        };\n\n        RestangularStorage.prototype.saveAll = function(elements, embed) {\n            var parameters = RestangularStorage.buildParameters(this, embed);\n\n            return $q.all(elements.map(function(element) {\n                return element.save(parameters)\n                    .then(function(result) {\n                        RestangularStorage.updateObjectFromResult(element, result);\n                        return result;\n                    });\n            })).then(this.emitEventCallbackCreator('updated', elements));\n        };\n\n        RestangularStorage.prototype.getNew = function() {\n            return this.restangular.one(this.resourceName);\n        };\n\n        RestangularStorage.prototype.copy = function(element) {\n            return this.restangular.copy(element);\n        };\n\n        return RestangularStorage;\n    }]);\n","'use strict';\n\n/* Start angularLocalStorage */\n\nvar angularLocalStorage = angular.module('LocalStorageModule', []);\n\n// You should set a prefix to avoid overwriting any local storage variables from the rest of your app\n// e.g. angularLocalStorage.constant('prefix', 'youAppName');\nangularLocalStorage.value('prefix', 'ls');\n// Cookie options (usually in case of fallback)\n// expiry = Number of days before cookies expire // 0 = Does not expire\n// path = The web path the cookie represents\nangularLocalStorage.constant('cookie', { expiry:30, path: '/'});\nangularLocalStorage.constant('notify', { setItem: true, removeItem: false} );\n\nangularLocalStorage.service('localStorageService', [\n  '$rootScope',\n  'prefix',\n  'cookie',\n  'notify',\n  function($rootScope, prefix, cookie, notify) {\n\n  // If there is a prefix set in the config lets use that with an appended period for readability\n  //var prefix = angularLocalStorage.constant;\n  if (prefix.substr(-1)!=='.') {\n    prefix = !!prefix ? prefix + '.' : '';\n  }\n\n  // Checks the browser to see if local storage is supported\n  var browserSupportsLocalStorage = function () {\n    try {\n        return ('localStorage' in window && window['localStorage'] !== null);\n    } catch (e) {\n        $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n        return false;\n    }\n  };\n\n  // Directly adds a value to local storage\n  // If local storage is not available in the browser use cookies\n  // Example use: localStorageService.add('library','angular');\n  var addToLocalStorage = function (key, value) {\n\n    // If this browser does not support local storage use cookies\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      if (notify.setItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.setitem', {key: key, newvalue: value, storageType: 'cookie'});\n      }\n      return addToCookies(key, value);\n    }\n\n    // Let's convert undefined values to null to get the value consistent\n    if (typeof value == \"undefined\") value = null;\n\n    try {\n      if (angular.isObject(value) || angular.isArray(value)) {\n          value = angular.toJson(value);\n      }\n      localStorage.setItem(prefix+key, value);\n      if (notify.setItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.setitem', {key: key, newvalue: value, storageType: 'localStorage'});\n      }\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return addToCookies(key, value);\n    }\n    return true;\n  };\n\n  // Directly get a value from local storage\n  // Example use: localStorageService.get('library'); // returns 'angular'\n  var getFromLocalStorage = function (key) {\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      return getFromCookies(key);\n    }\n\n    var item = localStorage.getItem(prefix+key);\n    if (!item) return null;\n    if (item.charAt(0) === \"{\" || item.charAt(0) === \"[\") {\n        return angular.fromJson(item);\n    }\n    return item;\n  };\n\n  // Remove an item from local storage\n  // Example use: localStorageService.remove('library'); // removes the key/value pair of library='angular'\n  var removeFromLocalStorage = function (key) {\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n       if (notify.removeItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.removeitem', {key: key, storageType: 'cookie'});\n      }\n      return removeFromCookies(key);\n    }\n\n    try {\n      localStorage.removeItem(prefix+key);\n      if (notify.removeItem) {\n        $rootScope.$broadcast('LocalStorageModule.notification.removeitem', {key: key, storageType: 'localStorage'});\n      }\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return removeFromCookies(key);\n    }\n    return true;\n  };\n\n  // Return array of keys for local storage\n  // Example use: var keys = localStorageService.keys()\n  var getKeysForLocalStorage = function () {\n\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      return false;\n    }\n\n    var prefixLength = prefix.length;\n    var keys = [];\n    for (var key in localStorage) {\n      // Only return keys that are for this app\n      if (key.substr(0,prefixLength) === prefix) {\n        try {\n          keys.push(key.substr(prefixLength))\n        } catch (e) {\n          $rootScope.$broadcast('LocalStorageModule.notification.error',e.Description);\n          return [];\n        }\n      }\n    }\n    return keys;\n  };\n\n  // Remove all data for this app from local storage\n  // Example use: localStorageService.clearAll();\n  // Should be used mostly for development purposes\n  var clearAllFromLocalStorage = function () {\n\n    if (!browserSupportsLocalStorage()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.warning','LOCAL_STORAGE_NOT_SUPPORTED');\n      return clearAllFromCookies();\n    }\n\n    var prefixLength = prefix.length;\n\n    for (var key in localStorage) {\n      // Only remove items that are for this app\n      if (key.substr(0,prefixLength) === prefix) {\n        try {\n          removeFromLocalStorage(key.substr(prefixLength));\n        } catch (e) {\n          $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n          return clearAllFromCookies();\n        }\n      }\n    }\n    return true;\n  };\n\n  // Checks the browser to see if cookies are supported\n  var browserSupportsCookies = function() {\n    try {\n      return navigator.cookieEnabled ||\n        (\"cookie\" in document && (document.cookie.length > 0 ||\n        (document.cookie = \"test\").indexOf.call(document.cookie, \"test\") > -1));\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return false;\n    }\n  };\n\n  // Directly adds a value to cookies\n  // Typically used as a fallback is local storage is not available in the browser\n  // Example use: localStorageService.cookie.add('library','angular');\n  var addToCookies = function (key, value) {\n\n    if (typeof value == \"undefined\") return false;\n\n    if (!browserSupportsCookies()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error','COOKIES_NOT_SUPPORTED');\n      return false;\n    }\n\n    try {\n      var expiry = '', expiryDate = new Date();\n      if (value === null) {\n        cookie.expiry = -1;\n        value = '';\n      }\n      if (cookie.expiry !== 0) {\n        expiryDate.setTime(expiryDate.getTime() + (cookie.expiry*24*60*60*1000));\n        expiry = \"; expires=\"+expiryDate.toGMTString();\n      }\n      if (!!key) {\n        document.cookie = prefix + key + \"=\" + encodeURIComponent(value) + expiry + \"; path=\"+cookie.path;\n      }\n    } catch (e) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error',e.message);\n      return false;\n    }\n    return true;\n  };\n\n  // Directly get a value from a cookie\n  // Example use: localStorageService.cookie.get('library'); // returns 'angular'\n  var getFromCookies = function (key) {\n    if (!browserSupportsCookies()) {\n      $rootScope.$broadcast('LocalStorageModule.notification.error','COOKIES_NOT_SUPPORTED');\n      return false;\n    }\n\n    var cookies = document.cookie.split(';');\n    for(var i=0;i < cookies.length;i++) {\n      var thisCookie = cookies[i];\n      while (thisCookie.charAt(0)==' ') {\n        thisCookie = thisCookie.substring(1,thisCookie.length);\n      }\n      if (thisCookie.indexOf(prefix+key+'=') === 0) {\n        return decodeURIComponent(thisCookie.substring(prefix.length+key.length+1,thisCookie.length));\n      }\n    }\n    return null;\n  };\n\n  var removeFromCookies = function (key) {\n    addToCookies(key,null);\n  };\n\n  var clearAllFromCookies = function () {\n    var thisCookie = null, thisKey = null;\n    var prefixLength = prefix.length;\n    var cookies = document.cookie.split(';');\n    for(var i=0;i < cookies.length;i++) {\n      thisCookie = cookies[i];\n      while (thisCookie.charAt(0)==' ') {\n        thisCookie = thisCookie.substring(1,thisCookie.length);\n      }\n      key = thisCookie.substring(prefixLength,thisCookie.indexOf('='));\n      removeFromCookies(key);\n    }\n  };\n\n  return {\n    isSupported: browserSupportsLocalStorage,\n    set: addToLocalStorage, \n    add: addToLocalStorage, //DEPRECATED\n    get: getFromLocalStorage,\n    keys: getKeysForLocalStorage,\n    remove: removeFromLocalStorage,\n    clearAll: clearAllFromLocalStorage,\n    cookie: {\n      set: addToCookies,\n      add: addToCookies, //DEPRECATED\n      get: getFromCookies,\n      remove: removeFromCookies,\n      clearAll: clearAllFromCookies\n    }\n  };\n\n}]);","angular.module('ev-fdm')\n  .directive('disableValidation', function() {\n    return {\n      require: '^form',\n      restrict: 'A',\n      link: function(scope, element, attrs, form) {\n        var control;\n\n        scope.$watch(attrs.disableValidation, function(value) {\n          if (!control) {\n            control = form[element.attr(\"name\")];\n          }\n          if (value === false) {\n            form.$addControl(control);\n            angular.forEach(control.$error, function(validity, validationToken) {\n              form.$setValidity(validationToken, !validity, control);\n            });\n          } else {\n            form.$removeControl(control);\n          }\n        });\n      }\n    };\n  });\n","angular.module('ev-fdm')\n.directive('strictMin', function() {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n\n            function validator(viewValue) {\n                var testedValue = parseFloat(viewValue),\n                    min = parseFloat(attrs.strictMin);\n\n                if(testedValue > min ) {\n                    ctrl.$setValidity('strictMin', true);\n                    return viewValue;\n                }\n                else {\n                    ctrl.$setValidity('strictMin', false);\n                    return undefined;\n                }\n\n            };\n\n            ctrl.$parsers.unshift(validator);\n            ctrl.$formatters.push(validator);\n        }\n    }\n});"],"sourceRoot":"/source/"}